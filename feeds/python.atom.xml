<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Abra seu Código!!!</title><link href="http://blog.abraseucodigo.com.br/" rel="alternate"></link><link href="http://blog.abraseucodigo.com.br/feeds/python.atom.xml" rel="self"></link><id>http://blog.abraseucodigo.com.br/</id><updated>2016-03-01T09:09:00-03:00</updated><entry><title>Vídeo: 02 - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/video-02-grupo-de-estudos-python.html" rel="alternate"></link><updated>2016-03-01T09:09:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-03-01:video-02-grupo-de-estudos-python.html</id><summary type="html">&lt;p&gt;Segunda aula de Python da segunda turma de Introdução a Python no Grupo de Estudos Sorocaba.&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/sqKlf3PQWOc" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;</summary><category term="vídeo"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Exercício: 01 - Calculadora básica - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/exercicio-01-calculadora-basica-grupo-de-estudos-python.html" rel="alternate"></link><updated>2016-02-29T23:43:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-29:exercicio-01-calculadora-basica-grupo-de-estudos-python.html</id><summary type="html">&lt;p&gt;Baseado no script abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;primeiro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite o primeiro número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;segundo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite o segundo número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite a operação: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;primeiro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;primeiro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;segundo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;segundo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Resultado: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;primeiro&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;segundo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Você digitou a operação errada! Digite: + - / *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos terminar a calculadora básica (com as 4 operações pelo menos) em Python?
Se precisar de ajuda para resolver o exercício me contate ou assista o vídeo (que está upando neste momento) da aula 02 do Grupo de Estudos Python.&lt;/p&gt;
&lt;p&gt;Se você quiser estudar um pouquinho mais e não somente resolver o exercício você poderá acrescentar novas funcionalidades a nossa calculadora, tais como: fazer exponenciação, calcular seno, calcular coseno ... etc&lt;/p&gt;
&lt;p&gt;Para facilitar seu divertimento use a biblioteca &lt;a class="reference external" href="https://docs.python.org/3.5/library/math.html"&gt;math&lt;/a&gt; padrão do Python.&lt;/p&gt;
&lt;p&gt;Semana que vem posto a resolução (todas as resoluções que conseguirmos).&lt;/p&gt;
</summary><category term="exercício"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Instalando qualquer versão do Python no Linux/Mac OSX utilizando pyenv</title><link href="http://blog.abraseucodigo.com.br/instalando-qualquer-versao-do-python-no-linux-macosx-utilizando-pyenv.html" rel="alternate"></link><updated>2016-02-24T21:21:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-24:instalando-qualquer-versao-do-python-no-linux-macosx-utilizando-pyenv.html</id><summary type="html">&lt;p&gt;Muitos tem a dúvida de como instalar Python no Linux e Mac OSX, hoje vou postar aqui um passo a passo bem básico pra que você consiga instalar Python 3.5 (e qualquer outra) no Linux e com poucas modificações também no Mac OSX.&lt;/p&gt;
&lt;p&gt;Não abordarei especificamente o passo a passo para realizar a instalação no Mac OSX, pois no atual momento não disponho de um computador com tal Sistema operacional em mãos. Porém já ajudei alguns amigos a realizar o procedimento mostrado neste post também no Mac OSX, e sem muitas dores extras conseguimos realizar estes mesmos procedimentos no Mac OSX.&lt;/p&gt;
&lt;p&gt;Vou usar como Linux base a distribuição Debian (a qual gosto muito) na versão Jessie 8.3.0. Estou especificando a versão do Debian e a versão do Python (estável) pois como ambos evoluem com o tempo (e muito rapidamente) então creio eu que logo esse post irá ficar velho.&lt;/p&gt;
&lt;div class="section" id="baixar-instalar-e-compilar"&gt;
&lt;h2&gt;Baixar, instalar e compilar?&lt;/h2&gt;
&lt;p&gt;Para os usuários mais &amp;quot;roots&amp;quot; do sistema operacional Linux a primeira coisa que vem em mente é &lt;tt class="docutils literal"&gt;&amp;quot;vou baixar o tar.gz, descompactar, configurar e compilar e o negócio vai sair funcionando lindamente&amp;quot;&lt;/tt&gt;, e realmente este processo funciona. Porém somos programadores, e programadores pensam em fazer a coisa da forma mais fácil possível e mais durável possível.&lt;/p&gt;
&lt;p&gt;Agora imagina se você pudesse instalar diversas versões do Python digitando apenas um comando e que ainda você pudesse trocar de versão facilmente entre todas as instaladas no seu computador.... pensou?&lt;/p&gt;
&lt;p&gt;Pois é os caras que criaram o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; também!&lt;/p&gt;
&lt;p&gt;Porém não confunda, &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; é uma coisa e &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; é outra. Abordei o assunto &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; em outro post, para &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/virtualenv-pip-pra-que-servem.html"&gt;entender melhor sobre o virtualenv clique aqui&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-o-pyenv"&gt;
&lt;h2&gt;O que é o pyenv?&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Pyenv&lt;/tt&gt; é um projeto muito legal que faz com que você consiga ter várias versões do Python na sua máquina e que eles coexistam em paz. Também torna mais fácil (absurdamente fácil) a instalação de QUALQUER distribuição do Python, inclusive as mais &amp;quot;exóticas&amp;quot; como o Anaconda, Miniconda, IronPython, Jython e o Pypy. Dentre estas versões possíveis também é possível instalar o Python 3.5.1 muito facilmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalando-pyenv"&gt;
&lt;h2&gt;Instalando pyenv&lt;/h2&gt;
&lt;p&gt;Se você usa Mac OSX pode começar com este link:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv#homebrew-on-mac-os-x"&gt;Homebrew on Mac OS X&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se você usa Linux você vai começar instalando as dependências de um script que facilita a instalação do &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; pra você. Este script depende de dois comandos &lt;tt class="docutils literal"&gt;git&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;curl&lt;/tt&gt;, caso você não os tenha instalados, execute o comando abaixo (este comando você precisa executar como root ou com sudo):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# apt-get install curl git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Feito isso vamos prosseguir com instalação usando um script automatizado que a galera do &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; fez. Execute como usuário normal (não root e sem sudo) o seguinte script abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ao terminar a execução deste script uma saída assim será exibida:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;WARNING: seems you still have not added &amp;#39;pyenv&amp;#39; to the load path.

# Load pyenv automatically by adding
# the following to ~/.bash_profile:

export PATH=&amp;quot;/home/rafael/.pyenv/bin:$PATH&amp;quot;
eval &amp;quot;$(pyenv init -)&amp;quot;
eval &amp;quot;$(pyenv virtualenv-init -)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obviamente que o caminho dentro da sua variável PATH estará diferente do meu, pois o meu usuário se chama &lt;tt class="docutils literal"&gt;rafael&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Basicamente ao final da instalação conforme mostrado acima o &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pyenv-installer&lt;/span&gt;&lt;/tt&gt; manda você adicionar as linhas que ele te mostra no seu arquivo &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bash_profile&lt;/span&gt;&lt;/tt&gt;, eu sinceramente não gosto de adicionar essas coisas no &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bash_profile&lt;/span&gt;&lt;/tt&gt; ao invés disso eu sempre adiciono ao &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Então vamos fazer isso, abra seu arquivo &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt; com seu editor favorito e adicione essas linhas no final do arquivo, conforme mostrado nesta imagem abaixo:&lt;/p&gt;
&lt;img alt=".bashrc" src="images/instalando-qualquer-versao-do-python-no-linux-macosx-utilizando-pyenv/01.png" /&gt;
&lt;p&gt;Fiz um comentário (linha em azul) apenas para informar que esta é a configuração do &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; e manter as coisas organizadas. Feita esta configuração basta executar (como usuário normal não root nem sudo) o comando abaixo, para que seu ambiente seja &amp;quot;populado&amp;quot; com as novas variáveis da configuração que você fez:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ source ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta forma você poderá chamar o comando &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; no seu terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ pyenv
pyenv 20160202-10-ga6f1f48
Usage: pyenv &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]

Some useful pyenv commands are:
   commands    List all available pyenv commands
   local       Set or show the local application-specific Python version
   global      Set or show the global Python version
   shell       Set or show the shell-specific Python version
   install     Install a Python version using python-build
   uninstall   Uninstall a specific Python version
   rehash      Rehash pyenv shims (run this after installing executables)
   version     Show the current Python version and its origin
   versions    List all Python versions available to pyenv
   which       Display the full path to an executable
   whence      List all Python versions that contain the given executable

See `pyenv help &amp;lt;command&amp;gt;&amp;#39; for information on a specific command.
For full documentation, see: https://github.com/yyuu/pyenv#readme
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;De cara você vai ter um help bem bacana para entender os comandos. Se quando você executou &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; a saída mostrada foi parecida, sua instalação correu perfeitamente bem! Caso tenha sido diferente e precisar de alguma ajuda, pode comentar abaixo do post ou me chamar am alguns dos contatos ao lado esquerdo do blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="verificando-as-versoes-disponiveis-para-instalacao"&gt;
&lt;h2&gt;Verificando as versões disponíveis para instalação&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ pyenv install -l
Available versions:
  .... linhas omitidas ....

  3.0.1
  3.1
  3.1.1
  3.1.2
  3.1.3
  3.1.4
  3.1.5
  3.2-dev
  3.2
  3.2.1
  3.2.2
  3.2.3
  3.2.4
  3.2.5
  3.2.6
  3.3.0
  3.3-dev
  3.3.1
  3.3.2
  3.3.3
  3.3.4
  3.3.5
  3.3.6
  3.4.0
  3.4-dev
  3.4.1
  3.4.2
  3.4.3
  3.4.4
  3.5.0
  3.5-dev
  3.5.1
  3.6-dev

  .... linhas omitidas ....
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Omiti algumas linhas para que a saída não ficasse tão grande, pois realmente são muitas as versões.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalando-o-python-3-5-1"&gt;
&lt;h2&gt;Instalando o Python 3.5.1&lt;/h2&gt;
&lt;p&gt;No Debian (Ubuntu também usa os mesmos pacotes) você precisará instalar algumas dependências para que o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; compile o Python para você, como root ou usando sudo execute o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Caso você esteja usando outro sistema operacional que não seja o Debian, você poderá consultar as dependências que precisará instalar neste link:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv/wiki/Common-build-problems"&gt;https://github.com/yyuu/pyenv/wiki/Common-build-problems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Depois de instalar as dependências necessárias, execute (como usuário normal sem root e sem sudo) o comando para instalação do Python 3.5.1 conforme mostrado abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ pyenv install 3.5.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A saída será similar a esta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Downloading Python-3.5.1.tgz...
-&amp;gt; https://www.python.org/ftp/python/3.5.1/Python-3.5.1.tgz
Installing Python-3.5.1...
Installed Python-3.5.1 to /home/rafael/.pyenv/versions/3.5.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se a sua saída foi similar a esta o Python 3.5.1 foi instalado com sucesso! Caso tenha sido diferente e precisar de alguma ajuda, pode comentar abaixo do post ou me chamar am alguns dos contatos ao lado esquerdo do blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-usar-o-s-python-s-instalado-s"&gt;
&lt;h2&gt;Como usar o(s) Python(s) instalado(s)?&lt;/h2&gt;
&lt;p&gt;Todo sistema Linux/Mac OSX geralmente já vem com alguma versão do Python instalada (2.6, 2.7, 3 ou 3.4 geralmente), o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; vai isolar a versão do Python do sistema operacional caso você precise dele posteriormente você conseguirá usá-lo sem problemas.&lt;/p&gt;
&lt;p&gt;Para ver as versões disponíveis para uso execute o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ pyenv versions
* system (set by /home/rafael/.pyenv/version)
  3.5.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No caso agora no meu sistema eu tenho a versão &lt;tt class="docutils literal"&gt;system&lt;/tt&gt; que é a que estava instalada anteriormente com meu sistema operacional e também a versão 3.5.1. O símbolo &lt;tt class="docutils literal"&gt;*&lt;/tt&gt; especifica qual a versão você está utilizando neste momento.&lt;/p&gt;
&lt;p&gt;Você poderá mudar a versão utilizada usando o parâmetro &lt;tt class="docutils literal"&gt;global&lt;/tt&gt; do &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; desta maneira:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ pyenv global 3.5.1
$ pyenv versions
  system
* 3.5.1 (set by /home/rafael/.pyenv/version)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe que ao executar &lt;tt class="docutils literal"&gt;pyenv versions&lt;/tt&gt; novamente ele mostrou que a versão a ser utilizada agora é 3.5.1, vamos executar o interpretador Python para ver se tudo correu bem:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ python
Python 3.5.1 (default, Feb 24 2016, 21:38:32)
[GCC 4.9.2] on linux
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perfeitamente bem! Agora vamos mudar para a versão &lt;tt class="docutils literal"&gt;system&lt;/tt&gt; e chamar o interpretador novamente para ver o que acontece:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ pyenv global system
$ pyenv versions
* system (set by /home/rafael/.pyenv/version)
  3.5.1
$ python
$ python
Python 2.7.9 (default, Mar  1 2015, 12:57:24)
[GCC 4.9.2] on linux2
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Funcionou perfeitamente bem novamente!&lt;/p&gt;
&lt;p&gt;Então agora você possui um &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; funcional juntamente com uma versão 3.5.1 do Python já instalada e apto a instalar qualquer outra disponível!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="voce-e-um-cara-preocupado-eu-tambem"&gt;
&lt;h2&gt;Você é um cara preocupado? Eu também...&lt;/h2&gt;
&lt;p&gt;Outra coisa que você não precisa se preocupar é que o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; instala e faz modificações no seu sistema a nível de usuário, ou seja, nada do que você faça com ele vai desgraçar seu sistema operacional inteiro, no máximo vai dar uma zuada na configuração do Python do seu usuário somente, em casos extremos você poderá desinstalar o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; de forma fácil simplesmente apagando a pasta dele que fica em sua home:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ rm -fr ~/.pyenv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;E posteriormente remover as configurações de variáveis que colocamos no &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; facilita muito as coisas pra nós, com ele podemos testar distribuições do Python das quais nunca ouvimos falar antes, sem o mínimo esforço para instalar e também para desinstalar (utilizando o parâmetro &lt;tt class="docutils literal"&gt;uninstall&lt;/tt&gt; do pyenv). Espero que tenham gostado do post! Deixem seus comentários!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referências&lt;/h2&gt;
&lt;p&gt;Links (ambos com documentações em seus próprios repositórios):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv"&gt;Repositório oficial do pyenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv-installer"&gt;Repositório oficial do pyenv-installer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv/wiki/Common-build-problems"&gt;Problemas que você pode vir a encarar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="linux"></category><category term="instalar python"></category><category term="pyenv"></category></entry><entry><title>Python uma linguagem de tipagem dinâmica e forte</title><link href="http://blog.abraseucodigo.com.br/python-uma-linguagem-de-tipagem-dinamica-e-forte.html" rel="alternate"></link><updated>2016-02-23T22:43:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-23:python-uma-linguagem-de-tipagem-dinamica-e-forte.html</id><summary type="html">&lt;p&gt;Todos que começam a estudar Python lêem que &amp;quot;Python é uma linguagem de tipagem dinâmica e forte&amp;quot; mas o que isso significa?&lt;/p&gt;
&lt;div class="section" id="tipagem-dinamica"&gt;
&lt;h2&gt;Tipagem dinâmica&lt;/h2&gt;
&lt;p&gt;Assim como Python hoje existem inúmeras linguagens no mercado que são dinamicamente tipadas.&lt;/p&gt;
&lt;p&gt;Referenciando especificamente o Python para explicar a questão: Tipagem dinâmica significa que o próprio interpretador do Python infere o tipo dos dados que uma variável recebe, sem a necessidade que você, o usuário da linguagem diga de que tipo determinada variável é. Exemplo de um script Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O resultado é: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos melhorar esta explicação com um exemplo de tipagem estática, a linguagem C. A linguagem C é estaticamente tipada, isso significa que deveremos sempre determinar qual o tipo de dados uma variável irá receber, exemplo de um programa em C:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O resultado é: &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ambos os programas acima fazem a mesma coisa, somam 10 e 20 e mostram um resultado na tela, a diferença é que em C os tipos são estáticos então é necessário que o programador diga quais os tipos que &lt;tt class="docutils literal"&gt;i&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;j&lt;/tt&gt; receberão como valores aceitáveis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tipagem-forte"&gt;
&lt;h2&gt;Tipagem forte&lt;/h2&gt;
&lt;p&gt;Assim como Python hoje existem inúmeras linguagens no mercado que são fortemente tipadas.&lt;/p&gt;
&lt;p&gt;Referenciando especificamente o Python para explicar a questão: Tipagem forte significa que o interpretador do Python avalia as expressões (evaluate) e não faz coerções automáticas entre tipos não compatíveis (conversões de valores), ou seja:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Rafael&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O resultado é: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Neste código acima definimos &lt;tt class="docutils literal"&gt;i&lt;/tt&gt; como &lt;tt class="docutils literal"&gt;10&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;j&lt;/tt&gt; como &lt;tt class="docutils literal"&gt;&amp;quot;Rafael&amp;quot;&lt;/tt&gt;, desta forma temos um inteiro em &lt;tt class="docutils literal"&gt;i&lt;/tt&gt; e uma string em &lt;tt class="docutils literal"&gt;j&lt;/tt&gt;, ao executar este código veja o que acontece:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;$ python3 teste.py
10
Rafael
Traceback (most recent call last):
  File &amp;quot;teste&amp;quot;, line 4, in &amp;lt;module&amp;gt;
    print(&amp;quot;O resultado é: &amp;quot;, i + j)
TypeError: unsupported operand type(s) for +: &amp;#39;int&amp;#39; and &amp;#39;str&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Recebo uma exception chamada &lt;tt class="docutils literal"&gt;TypeError&lt;/tt&gt; ou seja, ao fazer operações com tipos incompatíveis, o Python não converte automaticamente esses tipos pra você, ele vai dar erro! Isso é bom, pois assim você terá a certeza que o seu resultado é mais consistente.&lt;/p&gt;
&lt;p&gt;Agora assim como temos linguagens com tipagem forte, temos também linguagens com tipagem fraca como por exemplo Javascript, vejamos o código Javascript a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Rafael&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Executando o código anterior obteríamos o resultado &lt;tt class="docutils literal"&gt;10Rafael&lt;/tt&gt;. Isso prova que o Javascript diferente do Python converte (faz coerção de tipos) ao executar operações de forma automática, isso faz com que seja uma linguagem de tipagem fraca.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Espero que tenha ficado claro para você como é essa questão da tipagem do Python. Em caso de dúvidas/sugestão não deixe de fazer seu comentário abaixo do post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referências&lt;/h2&gt;
&lt;p&gt;Livro: Python para desenvolvedores 2.a edição.
Autor: Luiz Eduardo Borges
Distribuição gratuita no &lt;a class="reference external" href="http://ark4n.wordpress.com/python/"&gt;site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Também tem um &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/video-wat.html"&gt;vídeo&lt;/a&gt; muito interessante (e bem curtinho) que mostra mais coisas a respeito de como outras linguagens tratam alguns casos bem bizarros (alguns envolvendo tipagem fraca/forte estática/dinâmica).&lt;/p&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="tipagem dinâmica"></category><category term="tipagem forte"></category></entry><entry><title>Vídeo: 01 - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/video-01-grupo-de-estudos-python.html" rel="alternate"></link><updated>2016-02-22T23:52:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-22:video-01-grupo-de-estudos-python.html</id><summary type="html">&lt;p&gt;Hoje começamos a segunda turma de Introdução a Python no Grupo de Estudos Sorocaba. Segue vídeo gravado:&lt;/p&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/-x7DhVmSyJk" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;Logo menos neste mesmo post publicarei o conteúdo que foi falado durante o encontro (pois o vídeo não ficou muito bom).&lt;/p&gt;
</summary><category term="vídeo"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Segunda chamada para o curso introdutório de Python</title><link href="http://blog.abraseucodigo.com.br/segunda-chamada-para-o-curso-introdutorio-de-python.html" rel="alternate"></link><updated>2016-02-20T22:25:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-20:segunda-chamada-para-o-curso-introdutorio-de-python.html</id><summary type="html">&lt;p&gt;Começa nesta segunda-feira 22/02/2016 um novo curso online introdutório de Python e totalmente gratuito. Neste curso serão abordados aspectos básicos da linguagem de programação mais descolada do mercado &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/wink.png"&gt;&lt;/p&gt;
&lt;div class="section" id="como-me-inscrevo"&gt;
&lt;h2&gt;Como me inscrevo?&lt;/h2&gt;
&lt;p&gt;Não tem inscrição basta entrar no grupo do google python-sorocaba e antes das aulas será enviado um link para acesso ao Hangout. Link para o grupo:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;https://groups.google.com/forum/#!forum/python-sorocaba&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="que-horas-sera"&gt;
&lt;h2&gt;Que horas será?&lt;/h2&gt;
&lt;p&gt;Como trabalho fora da minha cidade o curso tem prazo mínimo e máximo para começar em termos de horário:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Prazo mínimo para iniciar a aula: a partir das 20hrs&lt;/li&gt;
&lt;li&gt;Término mínimo para terminar a aula: até 22hrs&lt;/li&gt;
&lt;li&gt;Prazo máximo para iniciar a aula: a partir das 21hrs&lt;/li&gt;
&lt;li&gt;Término máximo para finalizar a aula: até 23hrs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O horário de início está ligado ao horário que meu ônibus chega na minha casa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="que-dia-sera"&gt;
&lt;h2&gt;Que dia será?&lt;/h2&gt;
&lt;p&gt;As segundas-feiras a noite.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quanto-eu-pago"&gt;
&lt;h2&gt;Quanto eu pago?&lt;/h2&gt;
&lt;p&gt;NADA! Em dinheiro nada! Você paga em dedicação e força de vontade para estudar. Não pretendo ensinar nada a quem não quiser aprender.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-surgiu-essa-ideia"&gt;
&lt;h2&gt;Como surgiu essa idéia?&lt;/h2&gt;
&lt;p&gt;Pode ler este &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/grupo-de-estudos-python-sorocaba.html"&gt;post&lt;/a&gt; para saber mais sobre a história do Grupo de Estudos Python Sorocaba.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="com-quem-eu-falo-para-obter-informacoes-adicionais"&gt;
&lt;h2&gt;Com quem eu falo para obter informações adicionais?&lt;/h2&gt;
&lt;p&gt;Comigo... o autor deste blog. Meus contatos estão a esquerda desta página. Mas você também pode fazer comentários abaixo deste post caso ache mais legal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="por-que-as-segundas-foram-escolhidas-para-o-curso"&gt;
&lt;h2&gt;Por que as segundas foram escolhidas para o curso?&lt;/h2&gt;
&lt;p&gt;Por meio de votação, divulguei os resultados da &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/pesquisa-grupo-de-estudo-python-sorocaba.html"&gt;votação aqui&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Espero você lá no Hangout.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category><category term="curso de python"></category><category term="curso"></category><category term="introdução ao python"></category></entry><entry><title>Pesquisa Grupo de Estudo Python Sorocaba</title><link href="http://blog.abraseucodigo.com.br/pesquisa-grupo-de-estudo-python-sorocaba.html" rel="alternate"></link><updated>2016-02-20T13:02:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-20:pesquisa-grupo-de-estudo-python-sorocaba.html</id><summary type="html">&lt;p&gt;Semana passada criei um formulário do Google para fazer uma pesquisa com as pessoas interessadas no Grupo de Estudos Python Sorocaba, agora divulgo o resultado da pesquisa aqui no blog. Ao todo tivemos 28 pessoas interessadas no grupo que responderam a pesquisa.&lt;/p&gt;
&lt;p&gt;Com base nesses resultados vou iniciar na próxima segunda-feira um novo curso de Python para iniciantes.&lt;/p&gt;
&lt;div class="section" id="para-novos-membros-do-grupo"&gt;
&lt;h2&gt;Para novos membros do Grupo&lt;/h2&gt;
&lt;p&gt;Você ficou interessado em participar e não sabe como? Entre no grupo do Google &lt;a class="reference external" href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;python-sorocaba&lt;/a&gt; estou divulgando as novidades por lá.&lt;/p&gt;
&lt;p&gt;Mas basicamente não tem mistério para poder participar, basta estar presente segunda-feira no Hangout (o link para acesso vou mandar no grupo python-sorocaba perto deste horário) a partir das 21hrs.&lt;/p&gt;
&lt;p&gt;Não é necessário conhecimento prévio em Python, porém é necessário já conhecer alguma linguagem de programação ou pelo menos ter uma boa lógica em Algoritmos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resultado-da-pesquisa"&gt;
&lt;h2&gt;Resultado da pesquisa&lt;/h2&gt;
&lt;img alt="resultado da pesquisa" src="images/pesquisa-grupo-de-estudo-python-sorocaba.png" /&gt;
&lt;p&gt;That's all folks!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>virtualenv/pip pra que servem?</title><link href="http://blog.abraseucodigo.com.br/virtualenv-pip-pra-que-servem.html" rel="alternate"></link><updated>2016-02-17T21:18:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-17:virtualenv-pip-pra-que-servem.html</id><summary type="html">&lt;p&gt;Existem muitos posts pela internet afora dizendo como usar virtualenv e pip, e realmente é muito fácil. Mas para um iniciante a pergunta que vem a mente é... pra que serve virtualenv? Pra que serve pip?&lt;/p&gt;
&lt;div class="section" id="explicando-para-quem-nunca-desenvolveu-em-python"&gt;
&lt;h2&gt;Explicando para quem nunca desenvolveu em Python&lt;/h2&gt;
&lt;p&gt;Imagine que você tem um programa na sua máquina em uma versão 1.0.0 e em dado momento você quer instalar a versão 1.0.1, porém, você também precisa da versão 1.0.0 pois você tem algum arquivo que não abre na versão mais nova.&lt;/p&gt;
&lt;p&gt;Pois é, este problema também acontece com os desenvolvedores Python, e a solução criada para este problema foi o nosso amigo &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-virtualenv"&gt;
&lt;h2&gt;O virtualenv&lt;/h2&gt;
&lt;p&gt;Uilizando o &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; você consegue isolar as bibliotecas do projeto A em relação ao projeto B.&lt;/p&gt;
&lt;p&gt;Imagine que em determinado momento que o projeto A começou a ser desenvolvido você ainda não tinha Python3 e optou por usar Python2 e mais um monte de bibliotecas do Python2, porém o projeto B usa Python3 e obviamente você não vai querer usar as bibliotecas do Python2 pois você deu uma evoluída nesse projeto e quer usar tudo que existe de mais novo no mundo Python.&lt;/p&gt;
&lt;p&gt;Já imaginou a bagunça que seu sistema operacional vai fazer? O S.O. vai colocar a versão antiga e a nova no mesmo diretório e quando você chamar o comando &lt;cite&gt;import&lt;/cite&gt; do Python para importar sua biblioteca você sempre ficará em dúvida de qual a versão você importou. Isso vira um caos com o passar do tempo, principalmente depois de você instalar muitas bibliotecas.&lt;/p&gt;
&lt;p&gt;Apenas fazendo um comentário pertinente, biblioteca também pode ser chamadas de módulos em Python e vice-versa. Estou chamando de biblioteca pois fica mais fácil para as pessoas que vem de outras linguagens entenderem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-pip"&gt;
&lt;h2&gt;O pip&lt;/h2&gt;
&lt;p&gt;Falei um pouco sobre &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt;, mas e o &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;?&lt;/p&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; é o &amp;quot;gerenciador de pacotes&amp;quot; do Python. Assim como o &lt;a class="reference external" href="https://www.debian.org/doc/manuals/apt-howto/ch-apt-get.pt-br.html"&gt;apt-get&lt;/a&gt; e o &lt;a class="reference external" href="http://brew.sh/"&gt;homebrew&lt;/a&gt; que são os gerenciadores de pacotes do Ubuntu/Mac OSX o &lt;a class="reference external" href="https://pypi.python.org/pypi/pip"&gt;pip&lt;/a&gt; é o instalador de bibliotecas de terceiros padrão do Python.&lt;/p&gt;
&lt;p&gt;Com o pip você poderá instalar qualquer biblioteca disponível no famoso site de bibliotecas da Python Software Foundation o &lt;a class="reference external" href="https://pypi.python.org/pypi"&gt;PyPi&lt;/a&gt;. Eu não tenho ideia de como verificar quantas bibliotecas Python existem hoje no PyPi, mas posso dizer que são centenas, ou milhares! São muitos MESMO, para os mais variados fins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hands-on"&gt;
&lt;h2&gt;Hands-on&lt;/h2&gt;
&lt;p&gt;Vamos criar um projeto chamado &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt; e outro chamado &lt;tt class="docutils literal"&gt;myprojectB&lt;/tt&gt; para demonstrar o uso do isolamento de ambientes que &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; nos ajuda a fazer, também iremos instalar bibliotecas com o &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; durante o processo.&lt;/p&gt;
&lt;p&gt;Para executar este passo a passo estou usando Python 3.5.X:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Se você não tem Python 3.5.X instalado e usar Windows clique &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/instalando-python35-no-windows-7.html"&gt;aqui&lt;/a&gt; para ir ao post que escrevi ontem descrevendo este procedimento;&lt;/li&gt;
&lt;li&gt;Se você não tem Python 3.5.X instalado e usar Linux ou Mac OSX você poderá usar o apt-get, yum ou homebrew para instalar Python3.5.X no seu computador de forma absolutamente simples, porém ainda não fiz posts sobre isso.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No Windows vou abrir o &lt;tt class="docutils literal"&gt;Prompt de comandos&lt;/tt&gt; que terá essa cara:&lt;/p&gt;
&lt;img alt="prompt de comandos" src="images/prompt-windows-7.png" /&gt;
&lt;p&gt;Onde &lt;tt class="docutils literal"&gt;rafael&lt;/tt&gt; é meu nome de usuário e o caminho padrão que usarei é &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C:\Users\rafael&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;No Linux/Mac OSX vamos abrir um terminal que terá esta aparência:&lt;/p&gt;
&lt;img alt="terminal linux mac osx" src="images/terminal.png" /&gt;
&lt;p&gt;Onde &lt;tt class="docutils literal"&gt;rafael&lt;/tt&gt; também é meu nome de usuário e o caminho padrão que usarei é &lt;tt class="docutils literal"&gt;/home/rafael&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Clique abaixo para continuar o procedimento relativo ao seu sistema operacional:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#criando-virtualenv-e-utilizando-o-pip-no-windows"&gt;Criando virtualenv e utilizando o pip no Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#criando-virtualenv-e-utilizando-o-pip-no-linux-e-mac-osx"&gt;Criando virtualenv e utilizando o pip no Linux e Mac OSX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="criando-virtualenv-e-utilizando-o-pip-no-windows"&gt;
&lt;h2&gt;Criando virtualenv e utilizando o pip no Windows&lt;/h2&gt;
&lt;p&gt;Vamos criar o diretório do projeto &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C:\Users\rafael&amp;gt; mkdir myprojectA
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos entrar nesta pasta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C:\Users\rafael&amp;gt; cd myprojectA
C:\Users\rafael\myprojectA&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Posteriormente vamos criar um virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C:\Users\rafael\myprojectA&amp;gt; python -m venv .venv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pronto criamos um virtualenv onde este cara ficará armazenado em uma pasta nomeado como &lt;cite&gt;.venv&lt;/cite&gt;, como podemos ver abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C:\Users\rafael\myprojectA&amp;gt; dir
... linhas omitidas ...

02/16/2016   10:36 PM   &amp;lt;DIR&amp;gt;        .venv

... linhas omitidas ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para começar a usar esse virtualenv temos que ativá-lo para isso execute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;C:\Users\rafael\myprojectA&amp;gt; .venv\Scripts\activate.bat
(.venv) C:\Users\rafael\myprojectA&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perceba que o seu prompt vai ser modificado e o prefixo (.venv) será acrescentado no começo dele. Agora vamos instalar uma biblioteca, o ipython:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv) C:\Users\rafael\myprojectA&amp;gt; pip install ipython
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; tem várias dependências (que irão ser instaladas juntamente com ele, não se assuste) e sua função é seu um interpretador do Python com mais recursos. Quando eu não passo uma versão específica ao &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; ele vai instalar sempre a última versão estável da biblioteca, no momento que instalei no meu computador a versão corrente era a 4.1.1. Então neste projeto que chamei de &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt; teremos as seguintes bibliotecas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv) C:\Users\rafael\myprojectA&amp;gt; pip freeze
decorator==4.0.9
ipython==4.1.1
ipython-genutils==0.1.0
path.py==8.1.2
pickeshare==0.6
simplegeneric==0.8.1
traitlets==4.1.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Com o comando acima &lt;tt class="docutils literal"&gt;pip freeze&lt;/tt&gt; veremos todas as bibliotecas instaladas nesse &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; e suas respectivas versões. Não vou detalhar neste post todos os poderes do &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;, mas o parâmetro &lt;tt class="docutils literal"&gt;freeze&lt;/tt&gt; é extremamente importante para o desenvolvimento de sistemas em Python, futuramente posso fazer um post só explicando setup de projetos Python, se quiserem esse post rápido me dêem um toque ai nos comentários.&lt;/p&gt;
&lt;p&gt;Para não ser muito repetitivo (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRY&lt;/a&gt;) no post e para aplicar um exercício de fixação ao mesmo tempo, refaça os passos com o diretório &lt;tt class="docutils literal"&gt;myprojectB&lt;/tt&gt; mas antes disso desative o &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; atual:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv) C:\Users\rafael\myprojectA&amp;gt; .venv\Scripts\deactivate.bat
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ao chegar no passo em que você instala o &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; pelo &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; não faça isso desta vez, quando chegar nesta etapa execute o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv) C:\Users\rafael\myprojectB&amp;gt; pip install ipython==3.0.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta forma vamos testemunhar o isolamento de ambientes! Ao terminar a instalaçào do &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; (versão 3.0.0), verifique o que você acabou de instalar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv) C:\Users\rafael\myprojectB&amp;gt; pip freeze
ipython=3.0.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ai você vai me perguntar &amp;quot;ué!? cadê os requisitos!?&amp;quot; pois é... nesta versão do &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; ele não tinha tantos requisitos, só por essa demonstração já conseguimos ver o isolamento entre os ambientes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="criando-virtualenv-e-utilizando-o-pip-no-linux-e-mac-osx"&gt;
&lt;h2&gt;Criando virtualenv e utilizando o pip no Linux e Mac OSX&lt;/h2&gt;
&lt;p&gt;Vamos criar o diretório do projeto &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rafael@bloodmary:~$ mkdir myprojectA
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos entrar nesta pasta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rafael@bloodmary:~$ cd myprojectA
rafael@bloodmary:myprojectA$
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Posteriormente vamos criar um virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rafael@bloodmary:myprojectA$ python3.5 -m venv .venv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pronto criamos um virtualenv onde este cara ficará armazenado em uma pasta nomeado como &lt;cite&gt;.venv&lt;/cite&gt;, como podemos ver abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rafael@bloodmary:myprojectA$ ls -a
.  ..  .python-version  .venv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para começar a usar esse virtualenv temos que ativá-lo para isso execute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rafael@bloodmary:myprojectA$ source .venv/bin/activate
(.venv)rafael@bloodmary:myprojectA$
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perceba que o seu prompt vai ser modificado e o prefixo (.venv) será acrescentado no começo dele. Agora vamos instalar uma biblioteca, o ipython:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv)rafael@bloodmary:myprojectA$ pip install ipython
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; tem várias dependências (que irão ser instaladas juntamente com ele, não se assuste) e sua função é seu um interpretador do Python com mais recursos. Quando eu não passo uma versão específica ao &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; ele vai instalar sempre a última versão estável da biblioteca, no momento que instalei no meu computador a versão corrente era a 4.1.1. Então neste projeto que chamei de &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt; teremos as seguintes bibliotecas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv)rafael@bloodmary:myprojectA$ pip freeze
decorator==4.0.9
ipython==4.1.1
ipython-genutils==0.1.0
path.py==8.1.2
pexpect==4.0.1
pickleshare==0.6
ptyprocess==0.5.1
simplegeneric==0.8.1
traitlets==4.1.0
wheel==0.24.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Com o comando acima &lt;tt class="docutils literal"&gt;pip freeze&lt;/tt&gt; veremos todas as bibliotecas instaladas nesse &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; e suas respectivas versões. Não vou detalhar neste post todos os poderes do &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;, mas o parâmetro &lt;tt class="docutils literal"&gt;freeze&lt;/tt&gt; é extremamente importante para o desenvolvimento de sistemas em Python, futuramente posso fazer um post só explicando setup de projetos Python, se quiserem esse post rápido me dêem um toque ai nos comentários.&lt;/p&gt;
&lt;p&gt;Para não ser muito repetitivo (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRY&lt;/a&gt;) no post e para aplicar um exercício de fixação ao mesmo tempo, refaça os passos com o diretório &lt;tt class="docutils literal"&gt;myprojectB&lt;/tt&gt; mas antes disso desative o &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; atual:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv)rafael@bloodmary:myprojectA$ deactivate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ao chegar no passo em que você instala o &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; pelo &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; não faça isso desta vez, quando chegar nesta etapa execute o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv)rafael@bloodmary:myprojectB$ pip install ipython==3.0.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta forma vamos testemunhar o isolamento de ambientes! Ao terminar a instalaçào do &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; (versão 3.0.0), verifique o que você acabou de instalar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(.venv) rafael@bloodmary:myprojectB$ pip freeze
ipython==3.0.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ai você vai me perguntar &amp;quot;ué!? cadê os requisitos!?&amp;quot; pois é... nesta versão do &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; ele não tinha tantos requisitos, só por essa demonstração já conseguimos ver o isolamento entre os ambientes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; são dois &amp;quot;utilitários&amp;quot; muito bacanas do Python, eles te ajudam muito na hora de criar qualquer projeto em Python, espero que esse post seja útil, apesar de ter ficado bem grandinho, mas é que tinha muita coisa pra escrever mesmo e ainda ficou faltando coisa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias-bacanas"&gt;
&lt;h2&gt;Referências bacanas&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://garoa.net.br/wiki/Python/Ambiente_Virtual"&gt;Explicação sobre Ambiente Virtual contida na página do Garoa Hacker Clube de SP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://virtualenv.readthedocs.org/en/latest/index.html"&gt;Documentação oficial do virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://virtualenvwrapper.readthedocs.org/en/latest/"&gt;Documentação oficial do virtualenvwrapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/venv.html"&gt;Documentação oficial do Python explicando sobre virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="virtualenv"></category><category term="pip"></category></entry><entry><title>Instalando Python 3.5 no Windows 7</title><link href="http://blog.abraseucodigo.com.br/instalando-python35-no-windows-7.html" rel="alternate"></link><updated>2016-02-16T21:09:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-16:instalando-python35-no-windows-7.html</id><summary type="html">&lt;p&gt;Muitos tem a dúvida de como instalar Python no Windows, hoje vou postar aqui um passo a passo bem básico pra que você consiga instalar Python3 no Windows 7.&lt;/p&gt;
&lt;p&gt;Estou especificando as versões do Windows e a versão do Python pois como ambos evoluem com o tempo (e muito rapidamente) então creio eu que logo esse post irá ficar velho.&lt;/p&gt;
&lt;p&gt;Ao escrever este post também tenho conhecimento que o Windows 10 é o Windows &amp;quot;da moda&amp;quot; porém neste momento só tenho uma máquina virtual de Windows 7 e estou sem tempo para criar uma máquina virtual de Windows 10, mas pelas pesquisas e googladas na internet creio que este post também será útil para outras versões do Windows.&lt;/p&gt;
&lt;div class="section" id="baixando-o-python"&gt;
&lt;h2&gt;Baixando o Python&lt;/h2&gt;
&lt;p&gt;Você poderá baixar a versão oficial do Python neste site:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.python.org/downloads"&gt;https://www.python.org/downloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A página acessada será semelhante a esta:&lt;/p&gt;
&lt;img alt="python download" src="images/instalando-python35-no-windows-7/01.png" /&gt;
&lt;p&gt;Baixe a release 3.5.1 (disponível atualmente), se quiser baixar diretamente clique:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/ftp/python/3.5.1/python-3.5.1.exe"&gt;aqui para baixar a versão 32 bits&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/ftp/python/3.5.1/python-3.5.1-amd64.exe"&gt;aqui para baixar a versão 64 bits&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recomendo verificar qual a arquitetura do seu sistema operacional para isso pressione as teclas &lt;tt class="docutils literal"&gt;Windows + Pause Break&lt;/tt&gt; do seu teclado ou &lt;tt class="docutils literal"&gt;clique com o direito no ícone do Computador e posteriormente clique em propriedades&lt;/tt&gt;, a seguinte tela será apresentada:&lt;/p&gt;
&lt;img alt="system" src="images/instalando-python35-no-windows-7/02.png" /&gt;
&lt;p&gt;Observe que eu grifei em vermelho a arquitetura do meu Windows instalado que é de 32 bits.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalando-o-python"&gt;
&lt;h2&gt;Instalando o Python&lt;/h2&gt;
&lt;p&gt;Basicamente para instalar o Python depois de baixado clique duas vezes no executável baixado. A instalação é bem tranquila e bem next.. next.. finish.&lt;/p&gt;
&lt;p&gt;Ao clicar duas vezes no executável a seguinte tela será aberta:&lt;/p&gt;
&lt;img alt="python wizard 01" src="images/instalando-python35-no-windows-7/03.png" /&gt;
&lt;p&gt;Repare que aqui nesta tela inicial o que é mais importante é marcar a opção &lt;tt class="docutils literal"&gt;Add Python3.5 to PATH&lt;/tt&gt; desta forma você não precisará configurar as variáveis de ambiente do seu Windows posteriormente (pois isso é meio chato de se fazer manualmente). Marcada essa opção clique em &lt;tt class="docutils literal"&gt;Install Now&lt;/tt&gt;, ao clicar nesta opção o processo de instalação será iniciado:&lt;/p&gt;
&lt;img alt="python wizard 02" src="images/instalando-python35-no-windows-7/04.png" /&gt;
&lt;p&gt;Aguarde alguns instantes e esta outra tela será apresentada:&lt;/p&gt;
&lt;img alt="python wizard 03" src="images/instalando-python35-no-windows-7/05.png" /&gt;
&lt;p&gt;Feito isso clique em &lt;tt class="docutils literal"&gt;Close&lt;/tt&gt;, caso tenha algum problema nesta parte por favor me contate por email ou nos comentários abaixo deste post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conferindo-quais-programas-voce-ganhou"&gt;
&lt;h2&gt;Conferindo quais programas você &amp;quot;ganhou&amp;quot;&lt;/h2&gt;
&lt;p&gt;Vejamos inicialmente o que instalamos:&lt;/p&gt;
&lt;img alt="iniciar" src="images/instalando-python35-no-windows-7/06.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;IDLE&lt;/tt&gt;: Uma IDE de linha de comando muito simples para começar suas aventuras no mundo Python;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Python 3.5&lt;/tt&gt;: Irá abrir o interpretador do Python no seu &lt;tt class="docutils literal"&gt;Prompt de comandos&lt;/tt&gt;;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Python 3.5 Manuals&lt;/tt&gt;: Toda a documentação do Python que está online &lt;a class="reference external" href="https://docs.python.org/3/"&gt;aqui&lt;/a&gt; ficará no seu computador para você acessar offline (para casos extremos onde você ficou sem internet).&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Python 3.5 Module Docs&lt;/tt&gt;: Uma referência sobre os módulos Python, ao clicar neste carinha será iniciado um servidorzinho que te servirá essa documentação, quando quiser sair basta ir ao console aberto e digitar &lt;tt class="docutils literal"&gt;q&lt;/tt&gt; seguido de enter que o servidorzinho será desligado.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para começar seus estudos em Python é importante saber que a partir desta instalação você acaba de &amp;quot;ganhar&amp;quot; alguns programas que te ajudarão na sua jornada pelo conhecimento, alguns merecer destaque:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;: Um poderoso gerenciador de pacotes/bibliotecas do Python, com ele você pode instalar muitas e muitas bibliotecas de terceiros;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt;: Um cara &amp;quot;separador&amp;quot; de ambientes, não faz muito tempo este cara foi incorporado ao Python (antes ele era um cara fora do Python), ele serve para que você tenha diversas versões da mesma biblioteca para projetos diferentes sem que elas colidam e briguem entre si para ver qual a versão vai assumir e ficar a frente quando você chamar um &lt;tt class="docutils literal"&gt;import&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="referencia"&gt;
&lt;h2&gt;Referência&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/using/windows.html"&gt;Documentação oficial do uso do Python no Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Não é difícil instalar Python no Windows, mas tem que se atentar a alguns detalhes bem simples. No próximo post pretendo descrever como e pra que serve o &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; que você acabou de instalar.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="windows"></category><category term="instalar python"></category></entry><entry><title>Grupo de Estudos Python Sorocaba</title><link href="http://blog.abraseucodigo.com.br/grupo-de-estudos-python-sorocaba.html" rel="alternate"></link><updated>2015-09-19T23:43:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2015-09-19:grupo-de-estudos-python-sorocaba.html</id><summary type="html">&lt;p&gt;Perto do dia 2 de julho de 2015 eu o Rafael Gottsfritz e o Caio Carrara tivemos a iniciativa de nos misturar ao &lt;a class="reference external" href="http://hacklab.club/"&gt;Hacklab Sorocaba&lt;/a&gt; para tentar organizar um grupo de estudos sobre variados assuntos.
Nós queríamos trazer mais movimento de comunidades para Sorocaba e regiões próximas, visto que isso é muitíssimo popular em cidades como Campinas, São Paulo e São José dos Campos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://garoa.net.br/wiki/P%C3%A1gina_principal"&gt;Garoa Hacker Clube SP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lhc.net.br/wiki/P%C3%A1gina_principal"&gt;Laboratório Hacker Campinas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://campinas.rupy.com.br/"&gt;RuPy Campinas 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pgdaycampinas.com.br/"&gt;PG Day Campinas 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.meetup.com/pt/Grupy-SP/"&gt;GruPy-SP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.thedevelopersconference.com.br/tdc/2015/saopaulo/trilhas"&gt;TDC São Paulo 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.facebook.com/pyladiescps"&gt;Pyladies Campinas - Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://twitter.com/pyladiescps"&gt;Pyladies Campinas - Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pythonbrasil.github.io/pythonbrasil11-site/"&gt;Python Brasil 2015 - SJC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esses links acima foram apenas exemplos de eventos de comunidade ou um pouco mais comerciais que rolaram/rolam ainda por este ano (2015).&lt;/p&gt;
&lt;div class="section" id="o-inicio"&gt;
&lt;h2&gt;O início&lt;/h2&gt;
&lt;p&gt;Para tentar começar a trazer coisas legais pra Sorocaba, inicialmente divulguei na lista de &lt;a class="reference external" href="https://groups.google.com/forum/?hl=pt#!searchin/hackerspace-sorocaba/Sesc/hackerspace-sorocaba/ampID5hePrI/w0Jt_vIWSTEJ"&gt;email do Hacklab&lt;/a&gt; um bate-papo descontraído no SESC Sorocaba, era descontraído, mas para ter foco nessa &amp;quot;descontração&amp;quot; toda eu queria propor objetivos as conversas e que preferencialmente se baseasse em tecnologia (ou não, caso não tivessem muitos geeks na parada).&lt;/p&gt;
&lt;p&gt;Porém infelizmente (ou felizmente, ainda não descobri) somente EU coloquei um tema lá para discutir neste evento intitulado de &amp;quot;Quinta-feira Hacker&amp;quot; (o nome era bonito). Olha só que loucura que ficou o call4papers deste dia:&lt;/p&gt;
&lt;img alt="call4papers" src="images/grupo-de-estudos-python-sorocaba_01.png" /&gt;
&lt;p&gt;Bombando.... com &lt;a class="reference external" href="http://call4paperz.com/events/quinta-feira-hacker"&gt;1 call somente&lt;/a&gt;!!&lt;/p&gt;
&lt;p&gt;Inicialmente fiquei meio puto e imaginei que não ia aparecer ninguém no SESC, por fim foram várias pessoas (no mínimo umas 6 pelo que me recordo) ai eu fiquei mais feliz um pouco. Mas mesmo assim fiquei meio de queixo caído com o desinteresse geral das pessoas, pois eu chamei para o encontro no mínimo 50 e apareceram somente 6.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hacklab-no-sabado-rolando-ainda-quase-sempre"&gt;
&lt;h2&gt;Hacklab no sábado (rolando ainda quase sempre)&lt;/h2&gt;
&lt;p&gt;Alguns dias após este &amp;quot;big evento&amp;quot; fomos novamente os 6 mosqueteiros (quase todos que foram no SESC) no sábado para nos encontrar no &lt;a class="reference external" href="http://www.macs.org.br/"&gt;Museu de Arte Contemporânea de Sorocaba&lt;/a&gt;, lá tem uma sala MUITO MUITO BACANA onde o pessoal faz umas reuniões embaixo do Museu (não amigo não é culto satânico.. é parada de hacker mesmo).&lt;/p&gt;
&lt;p&gt;Neste dia conheci o Hudson que é o cara que toca o barco do Hacklab junto com o Guilherme que é um membro assíduo também, conversamos bastante e neste mesmo dia o Hudson me falou uma coisa importante que eu estava deixando passar...&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;quot;Cara pra ser um evento precisa de você e mais um&amp;quot;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Resumindo... acho que ele tinha razão, pois bastam 2 interessados para formar um pequeno grupo para fazer algo, se você estiver sozinho OK! Também é LEGAL! Porém você não tem o compromisso de estar na mesma hora no mesmo lugar para estudar algum assunto, imagino que isso seja o princípio da ideia de um &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hackerspace"&gt;hackerspace&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-grupo-de-estudos"&gt;
&lt;h2&gt;O grupo de estudos&lt;/h2&gt;
&lt;p&gt;Eis que neste dia um pouco depois surgiu a ideia de montarmos um &lt;a class="reference external" href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;Grupo de Estudos de Python em Sorocaba&lt;/a&gt;, um grupo com um caminho simples a trilhar:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Nivelar as pessoas em Python, para que discussões futuras sejam mais proveitosas (no ponto que estamos já estão sendo)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Para isso estou dando aulas eu mesmo via &lt;a class="reference external" href="http://www.google.com/intl/pt-BR_ALL/+/learnmore/hangouts/onair.html"&gt;Hangout on Air&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Todos nós aprendendo juntos&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Existem assuntos bem complexos no mundo Python aos quais eu não domino para esses precisamos já ter entendido o básico e estarmos nivelados a ponto de aprendermos juntos&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;A parte mais legal!!!&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Começar a contribuir ou criar projetos open source!!! Sem prazo nem cobranças.. fazer algo da legal que queremos pra aprendermos mais e mais&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;E o valor do curso!? O valor é DEDICAÇÃO E INTERESSE. Se você estiver afim de entrar no Grupo tem que ter no mínimo MUITA DEDICAÇÃO E MUITO INTERESSE pois é caro o curso em termos de valores honrosos hahaha.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quer-entrar-para-o-nosso-grupo"&gt;
&lt;h2&gt;Quer entrar para o nosso Grupo??&lt;/h2&gt;
&lt;p&gt;Basta se inscrever na lista &lt;a class="reference external" href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;Python-Sorocaba&lt;/a&gt; e acompanhar os emails, sempre fazemos nossos encontros nas quartas-feiras a noite próximo das 20hrs.&lt;/p&gt;
&lt;p&gt;Porém caso você queira entrar neste atual momento, agora, agorinha, me manda um tweet para que eu alinhe o que você precisa estudar, pois estamos indo para a aula 12 já. Mas podemos fazer novas aulas a partir da aula 1 se tiver mais gente interessada.&lt;/p&gt;
&lt;p&gt;E ai curtiram a ideia?&lt;/p&gt;
&lt;/div&gt;
</summary><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry></feed>