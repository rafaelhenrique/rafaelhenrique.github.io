<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Abra seu Código!!!</title><link href="http://blog.abraseucodigo.com.br/" rel="alternate"></link><link href="http://blog.abraseucodigo.com.br/feeds/all.atom.xml" rel="self"></link><id>http://blog.abraseucodigo.com.br/</id><updated>2018-01-03T23:52:00-02:00</updated><entry><title>Não guarde conhecimento! Compartilhe!</title><link href="http://blog.abraseucodigo.com.br/nao-guarde-conhecimento-compartilhe.html" rel="alternate"></link><published>2018-01-03T23:52:00-02:00</published><updated>2018-01-03T23:52:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2018-01-03:/nao-guarde-conhecimento-compartilhe.html</id><summary type="html">&lt;p class="first last"&gt;Compartilhe! Compartilhe! E compartilhe!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Estive pensando muito sobre as minhas atitudes como desenvolvedor de software e também como pessoa. Cheguei a conclusão que eu sou um cara perfeccionista a um nível muito extremo e gostaria de explicar por que isso não deve acontecer com as pessoas de modo geral.&lt;/p&gt;
&lt;div class="section" id="feito-e-melhor-que-perfeito"&gt;
&lt;h2&gt;Feito é melhor que perfeito&lt;/h2&gt;
&lt;p&gt;Sempre quando eu vou escrever um post, ou qualquer outra coisa que fique pública na internet eu penso em MUITA coisa:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;O texto está bem escrito gramaticalmente?&lt;/li&gt;
&lt;li&gt;O texto está bem escrito ortograficamente?&lt;/li&gt;
&lt;li&gt;O pessoal vai se interessar pelo assunto?&lt;/li&gt;
&lt;li&gt;A linguagem está clara e objetiva o suficiente?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essas perguntas te TRAVAM e fazem com que você demore mais a compartilhar o conhecimento que você tem. Cheguei a esta conclusão a pouco pois guardei um &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/melhorando-seus-logs-com-elk.html"&gt;post&lt;/a&gt; deste blog por 1 ANO! 1 ANO! Isso é MUITO tempo! Eu poderia ter ajudado muitas pessoas neste 1 ano parado :(.&lt;/p&gt;
&lt;p&gt;Eis que me lembrei do meu blog antigo, que era feito no blogger e ainda vive &lt;a class="reference external" href="http://abraseucodigo.blogspot.com.br/"&gt;até hoje&lt;/a&gt;, olhei mais uma vez pra ele e pensei &amp;quot;porra Rafael, naquela época você compartilhava conhecimento baseado em porra nenhuma&amp;quot;, e ao meu ver esse é o espírito de um blog que talvez eu tenha esquecido, o espírito é o que sempre ouço na &lt;a class="reference external" href="https://cargobr.com/"&gt;empresa que trabalho&lt;/a&gt; atualmente que o &amp;quot;feito é melhor que o perfeito!&amp;quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="filosofando-sobre-o-que-acontece-com-o-conhecimento"&gt;
&lt;h2&gt;Filosofando sobre o que acontece com o conhecimento&lt;/h2&gt;
&lt;p&gt;Fiz um post a um tempo atrás sobre &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/instalando-qualquer-versao-do-python-no-linux-macosx-utilizando-pyenv.html"&gt;como instalar Python&lt;/a&gt; e é um dos posts que mais tem movimento neste blog e por que isso acontece? Por que ele é um post perfeito? NÃO! Porque ele é um post &amp;quot;humano&amp;quot; que ajuda as pessoas e as pessoas fazem comentários embaixo dele usando o disqus que ajuda outras pessoas que lêem o post e isso é maravilhoso!&lt;/p&gt;
&lt;p&gt;Pois o blog acaba não sendo construído só por mim, eu aprendo com os comentários e as pessoas do comentário ensinam outras pessoas e o conhecimento se propaga, e isso é maravilhoso.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Não se apegue a falsas ilusões de que você fará um texto perfeito, um blog não tem foco acadêmico e nem o mesmo rigor (digo isso pois estou cursando como aluno especial o programa de mestrado da UFSCar de Sorocaba), portanto ESCREVA, e se não quiser escrever PALESTRE, e se não quiser palestrar FAÇA VÍDEOS e publique na internet, porém sempre compartilhe conhecimento pois você vai aprender mais com isso.&lt;/p&gt;
&lt;p&gt;Siga a dica do &lt;a class="reference external" href="https://youtu.be/-ANx41sZNIQ?t=59s"&gt;ET Bilú&lt;/a&gt; e busque conhecimento mas não se esqueça de compartilhar ;).&lt;/p&gt;
&lt;img alt="bilu" src="images/nao-guarde-conhecimento-compartilhe/01.jpg" /&gt;
&lt;p&gt;PS: A parte do Bilú foi só pela zueira mesmo hahaha, se não conhecem o ET Bilú vale a pena clicar no link.&lt;/p&gt;
&lt;/div&gt;
</content><category term="conhecimento"></category><category term="perfeccionismo"></category><category term="pensamento"></category></entry><entry><title>Melhorando seus logs com Elasticsearch + Kibana + Logstash</title><link href="http://blog.abraseucodigo.com.br/melhorando-seus-logs-com-elk.html" rel="alternate"></link><published>2018-01-03T23:50:00-02:00</published><updated>2018-01-03T23:50:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2018-01-03:/melhorando-seus-logs-com-elk.html</id><summary type="html">&lt;p class="first last"&gt;Deixe seus logs mais legíveis, rastreáveis e bonitos&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Em meu último post &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/a-importancia-de-um-log.html"&gt;A importância de um log&lt;/a&gt; expliquei um pouco porque é importante ter logs em uma aplicação.&lt;/p&gt;
&lt;p&gt;Neste post demonstrarei como centralizar seus logfiles usando a stack ELK (Elasticsearch + Logstash + Kibana). Existem ferramentas que já salvam o log da aplicação diretamente no Logstash, este não será o foco deste post, quem sabe um próximo ;).&lt;/p&gt;
&lt;p&gt;AVISO IMPORTANTE: Faz algum tempo que venho guardando este post, e mesmo ele estando incompleto (me desculpem pelo perfeccionismo) já vou postar logo, pois eu mesmo sinto falta de ler o que está aqui, já precisei subir essa stack 2 vezes e tive que consultar um arquivo markdown meio feio. Então colaborem! Quando quiserem me perguntem qualquer coisa sobre o assunto e estarei disposto a ajudar e a melhorar o que escrevi aqui.&lt;/p&gt;
&lt;div class="section" id="antes-de-mais-nada"&gt;
&lt;h2&gt;Antes de mais nada...&lt;/h2&gt;
&lt;p&gt;O que é Elastic? A &lt;a class="reference external" href="https://www.elastic.co/"&gt;Elastic&lt;/a&gt; é uma empresa sensacional (opinião minha) que criou várias ferramentas interessantes para facilitar a vida do desenvolvedor :). Os produtos que serão abordados neste post são:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Elasticsearch: Uma ferramenta muito utilizada para indexar/armazenar dados e devolvê-los de forma rápida a quem consulta estes dados através de uma API bem poderosa;&lt;/li&gt;
&lt;li&gt;Logstash: Recebe dados de diversas fontes diferentes, simultaneamente, processa e armazena estes dados em algum &lt;a class="reference external" href="https://www.elastic.co/guide/en/logstash/current/output-plugins.html"&gt;lugar&lt;/a&gt;, funciona como se fosse analogamente um &amp;quot;roteador de logs&amp;quot;;&lt;/li&gt;
&lt;li&gt;Kibana: Nosso visualizador de logs que consome a api do Elasticsearch e mostra essa informação em forma gráfica ou textual;&lt;/li&gt;
&lt;li&gt;Filebeat: Um client que lê logs de algum host e os envia para o logstash.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="instalar-jdk"&gt;
&lt;h2&gt;Instalar JDK&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install openjdk-8-jre-headless
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Elastic search 2.x não funciona com Java9.&lt;/p&gt;
&lt;p&gt;Referência: &lt;a class="reference external" href="https://github.com/elastic/elasticsearch/issues/18761"&gt;https://github.com/elastic/elasticsearch/issues/18761&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalar-elasticsearch"&gt;
&lt;h2&gt;Instalar Elasticsearch&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
echo &amp;quot;deb https://packages.elastic.co/elasticsearch/2.x/debian stable main&amp;quot; | sudo tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list
apt-get update &amp;amp;&amp;amp; sudo apt-get install elasticsearch
update-rc.d elasticsearch defaults 95 10
/bin/systemctl daemon-reload
/bin/systemctl enable elasticsearch.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configurar arquivo &lt;cite&gt;/etc/elasticsearch/elasticsearch.yml&lt;/cite&gt; com a entrada:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;network.host: localhost
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Isso serve para não abrir o elastic search para fora, senão outras pessoas podem controlar o cluster.&lt;/p&gt;
&lt;p&gt;Referências:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-ubuntu-14-04"&gt;https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-ubuntu-14-04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-repositories.html"&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-repositories.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="instalar-kibana"&gt;
&lt;h2&gt;Instalar Kibana&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo &amp;quot;deb https://packages.elastic.co/kibana/4.6/debian stable main&amp;quot; | sudo tee -a /etc/apt/sources.list.d/kibana.list
apt-get update &amp;amp;&amp;amp; sudo apt-get install kibana
update-rc.d kibana defaults 95 10
/bin/systemctl daemon-reload
/bin/systemctl enable kibana.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configurar arquivo &lt;cite&gt;/opt/kibana/config/kibana.yml&lt;/cite&gt; com a entrada:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;server.host: &amp;quot;localhost&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para deixar Kibana acessível somente a localhost, para sair externamente vamos usar um proxy reverso no Nginx.&lt;/p&gt;
&lt;p&gt;Referência: &lt;a class="reference external" href="https://www.elastic.co/guide/en/kibana/current/setup-repositories.html"&gt;https://www.elastic.co/guide/en/kibana/current/setup-repositories.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalar-nginx"&gt;
&lt;h2&gt;Instalar Nginx&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install nginx apache2-utils
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gerar senha/usuário para acesso ao painel do kibana:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;htpasswd -c /etc/nginx/htpasswd.users kibanaadmin
unlink /etc/nginx/sites-enabled/default
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configurar/criar o arquivo &lt;cite&gt;/etc/nginx/sites-available/kibana&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;server {
    listen 80;

    # server_name example.com;

    auth_basic &amp;quot;Restricted Access&amp;quot;;
    auth_basic_user_file /etc/nginx/htpasswd.users;

    location / {
        proxy_pass http://localhost:5601;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection &amp;#39;upgrade&amp;#39;;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Criar link simbólico:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ln -sf /etc/nginx/sites-available/kibana /etc/nginx/sites-enabled/kibana
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reiniciar o serviço do Nginx para aplicar nova configuração:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo service nginx restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esta configuração faz com que o Nginx se comporte como um &lt;cite&gt;websocket-proxy&lt;/cite&gt; em que após a autenticação o usuário seja redirecionado para o painel do Kibana.&lt;/p&gt;
&lt;p&gt;Após fazer esta configuração você poderá testar no seu browser se o painel está acessível da forma que você configurou:&lt;/p&gt;
&lt;img alt="login painel kibana" src="images/melhorando-seus-logs-com-elk/01.png" /&gt;
&lt;img alt="painel kibana" src="images/melhorando-seus-logs-com-elk/02.png" /&gt;
&lt;p&gt;Referências:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.nginx.com/blog/websocket-nginx/"&gt;https://www.nginx.com/blog/websocket-nginx/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-ubuntu-14-04"&gt;https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-ubuntu-14-04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="instalar-logstash"&gt;
&lt;h2&gt;Instalar logstash&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
echo &amp;quot;deb https://packages.elastic.co/logstash/2.4/debian stable main&amp;quot; | sudo tee -a /etc/apt/sources.list
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install logstash
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logstash está instalado mas ainda não foi configurado, será configurado mais abaixo neste mesmo post. :)&lt;/p&gt;
&lt;p&gt;Referência:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.elastic.co/guide/en/logstash/current/installing-logstash.html"&gt;https://www.elastic.co/guide/en/logstash/current/installing-logstash.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="gerando-certificados-ssl"&gt;
&lt;h2&gt;Gerando certificados SSL&lt;/h2&gt;
&lt;p&gt;Para começar a usar o Filebeat nos nossos servers clientes &amp;quot;conectados&amp;quot; ao nosso servidor Elastic, nós precisamos criar um par de certificados SSL. O certificado é usado pelo Filebeat para verificar a identidade no servidor Elastic. Crie os diretórios segundo os comandos abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /etc/pki/tls/certs
mkdir /etc/pki/tls/private
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nós faremos a configuração baseada em IP pois vamos partir do pressuposto que você não tenha DNS caso você esteja usando DNS (com resolução de nomes tudo bonitinho) nos seus servidores então siga os passos da &lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elk-stack-on-ubuntu-14-04#generate-ssl-certificates"&gt;Option 2&lt;/a&gt; do tutorial da Digital Ocean.&lt;/p&gt;
&lt;p&gt;Vamos adicionar nosso ip privado ao subjectAltName (SAN), para fazer isso vamos editar o arquivo &lt;cite&gt;/etc/ssl/openssl.cnf&lt;/cite&gt;, encontre a sessão &lt;cite&gt;[ v3_ca ]&lt;/cite&gt; e adicione seu ip conforme mostrado abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;subjectAltName = IP: ELK_server_private_IP
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora gere os certificados e chaves privadas nos locais apropriados (/etc/pki/tls) com os comandos abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /etc/pki/tls
sudo openssl req -config /etc/ssl/openssl.cnf -x509 -days 3650 -batch -nodes -newkey rsa:2048 -keyout private/logstash-forwarder.key -out certs/logstash-forwarder.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O certificado &lt;cite&gt;logstash-forwarder.crt&lt;/cite&gt; será copiado para todos os servidores que irão enviar log para o Logstash.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="configurando-logstash"&gt;
&lt;h2&gt;Configurando Logstash&lt;/h2&gt;
&lt;p&gt;A configuração é feita em formato JSON, e fica em &lt;cite&gt;/etc/logstash/conf.d&lt;/cite&gt;. A configuração consiste em três seções: entradas (inputs), filtros (filters) e saídas (outputs).&lt;/p&gt;
&lt;p&gt;Vamos criar um arquivo de configuração chamado &lt;cite&gt;/etc/logstash/conf.d/02-beats-input.conf&lt;/cite&gt; e setar nossa entrada &lt;cite&gt;Filebeat&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;input {
  beats {
    port =&amp;gt; 5044
    ssl =&amp;gt; true
    ssl_certificate =&amp;gt; &amp;quot;/etc/pki/tls/certs/logstash-forwarder.crt&amp;quot;
    ssl_key =&amp;gt; &amp;quot;/etc/pki/tls/private/logstash-forwarder.key&amp;quot;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Esta configuração especifica que o entrada do &lt;cite&gt;beats&lt;/cite&gt; irá escutar na porta 5044 e irá usar nosso certificado e chave privada criados anteriormente.&lt;/p&gt;
&lt;p&gt;Agora vamos criar uma configuração chamada &lt;cite&gt;/etc/logstash/conf.d/10-syslog-filter.conf&lt;/cite&gt;, onde nós vamos adicionar um &lt;cite&gt;filter&lt;/cite&gt; para as nossas mensagens de syslog:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;filter {
  if [type] == &amp;quot;syslog&amp;quot; {
    grok {
      match =&amp;gt; { &amp;quot;message&amp;quot; =&amp;gt; &amp;quot;%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}&amp;quot; }
      add_field =&amp;gt; [ &amp;quot;received_at&amp;quot;, &amp;quot;%{@timestamp}&amp;quot; ]
      add_field =&amp;gt; [ &amp;quot;received_from&amp;quot;, &amp;quot;%{host}&amp;quot; ]
    }
    syslog_pri { }
    date {
      match =&amp;gt; [ &amp;quot;syslog_timestamp&amp;quot;, &amp;quot;MMM  d HH:mm:ss&amp;quot;, &amp;quot;MMM dd HH:mm:ss&amp;quot; ]
    }
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este &lt;cite&gt;filter&lt;/cite&gt; analisa os logs rotulados como tipo &amp;quot;syslog&amp;quot; e tenta usar &lt;cite&gt;grok&lt;/cite&gt; para parsear os logs entrantes para deixá-los estruturados e &lt;cite&gt;queryáveis&lt;/cite&gt; (pesquisáveis via query).&lt;/p&gt;
&lt;p&gt;Agora por fim vamos criar uma configuração chamada &lt;cite&gt;/etc/logstash/conf.d/30-elasticsearch-output.conf&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;output {
  elasticsearch {
    hosts =&amp;gt; [&amp;quot;localhost:9200&amp;quot;]
    sniffing =&amp;gt; true
    manage_template =&amp;gt; false
    index =&amp;gt; &amp;quot;%{[@metadata][beat]}-%{+YYYY.MM.dd}&amp;quot;
    document_type =&amp;gt; &amp;quot;%{[@metadata][type]}&amp;quot;
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este &lt;cite&gt;output&lt;/cite&gt; basicamente configura o Logstash para armazenar os dados do beats no Elasticsearch que está rodando em &lt;cite&gt;localhost:9200&lt;/cite&gt; e indexa por nome posteriormente.&lt;/p&gt;
&lt;p&gt;Agora vamos testar a configuração criada com o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;service logstash configtest
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se a configuração estiver OK então prossiga com os comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;service logstash restart
update-rc.d logstash defaults 95 10
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="baixar-e-instalar-dashboards-do-kibana"&gt;
&lt;h2&gt;Baixar e instalar Dashboards do Kibana&lt;/h2&gt;
&lt;p&gt;Elastic provê diversos exemplos de Dashboard do Kibana e padrões de index do Beats para te ajudar a iniciar com o Kibana.&lt;/p&gt;
&lt;p&gt;Baixe os dashboards no diretório home:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# cd ~
# curl -L -O http://download.elastic.co/beats/dashboards/beats-dashboards-1.3.1.zip
# apt-get install unzip
# unzip beats-dashboards-1.3.1.zip
# cd beats-dashboards-1.3.1/
# ./load.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora alguns indexes vão estar disponíveis no painel do Kibana:&lt;/p&gt;
&lt;img alt="indexes painel kibana" src="images/melhorando-seus-logs-com-elk/03.png" /&gt;
&lt;p&gt;Referência:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.elastic.co/guide/en/beats/libbeat/current/load-kibana-dashboards.html"&gt;https://www.elastic.co/guide/en/beats/libbeat/current/load-kibana-dashboards.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="adicionando-o-certificado-nos-clientes"&gt;
&lt;h2&gt;Adicionando o certificado nos clientes&lt;/h2&gt;
&lt;p&gt;Copie o certificado para o servidor cliente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scp /etc/pki/tls/certs/logstash-forwarder.crt user@client_server_private_address:/tmp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Trocar &lt;cite&gt;user&lt;/cite&gt; por um usuário válido e &lt;cite&gt;client_server_private_address&lt;/cite&gt; por um IP privado válido.&lt;/p&gt;
&lt;p&gt;No cliente mova o certificado para o local correto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /etc/pki/tls/certs
cp /tmp/logstash-forwarder.crt /etc/pki/tls/certs/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="instalando-filebeat-nos-clientes"&gt;
&lt;h2&gt;Instalando Filebeat nos clientes&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.elastic.co/guide/en/beats/libbeat/1.3/setup-repositories.html"&gt;https://www.elastic.co/guide/en/beats/libbeat/1.3/setup-repositories.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl https://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add -
echo &amp;quot;deb https://packages.elastic.co/beats/apt stable main&amp;quot; |  sudo tee -a /etc/apt/sources.list.d/beats.list
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install filebeat
sudo update-rc.d filebeat defaults 95 10
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configurando-filebeat-nos-clientes"&gt;
&lt;h2&gt;Configurando Filebeat nos clientes&lt;/h2&gt;
&lt;p&gt;Agora precisamos configurar o Filebeat para que ele conecte no nosso servidor Elastic. Vamos configurar o Filebeat, a configuração fica em &lt;cite&gt;/etc/filebeat/filebeat.yml&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nota importante: O arquivo de configuração do Filebeat é em formato YAML a indentação é muito importante! Se a configuração não for indentada adequadamente os procedimentos abaixo poderão não funcionar.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Abaixo da seção &lt;cite&gt;prospectors&lt;/cite&gt; do arquivo podemos ver a seção &lt;cite&gt;paths&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;############################# Filebeat ######################################
filebeat:
  # List of prospectors to fetch data.
  prospectors:
    # Each - is a prospector. Below are the prospector specific configurations
    -
      # Paths that should be crawled and fetched. Glob based paths.
      # To fetch all &amp;quot;.log&amp;quot; files from a specific level of subdirectories
      # /var/log/*/*.log can be used.
      # For each file found under this path, a harvester is started.
      # Make sure not file is defined twice as this can lead to unexpected behaviour.
      paths:
        - /var/log/*.log
        #- c:\programdata\elasticsearch\logs\*
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A configuração padrão faz com que o Filebeat receba todos os logs de &lt;cite&gt;/var/log/&lt;/cite&gt; justamente por isso é usado o wildcard &lt;cite&gt;*.log&lt;/cite&gt;. Para que não sejam enviados todos os logs podemos especificar os arquivos desejados, como por exemplo o arquivo &lt;cite&gt;auth.log&lt;/cite&gt; que armazena registros de autenticação do sistema operacional. Vamos modificar este trecho do arquivo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;############################# Filebeat ######################################
filebeat:
  # List of prospectors to fetch data.
  prospectors:
    # Each - is a prospector. Below are the prospector specific configurations
    -
      # Paths that should be crawled and fetched. Glob based paths.
      # To fetch all &amp;quot;.log&amp;quot; files from a specific level of subdirectories
      # /var/log/*/*.log can be used.
      # For each file found under this path, a harvester is started.
      # Make sure not file is defined twice as this can lead to unexpected behaviour.
      paths:
        - /var/log/auth.log
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora vamos procurar uma linha onde tem um parâmetro chamado &lt;cite&gt;document_type&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Type to be published in the &amp;#39;type&amp;#39; field. For Elasticsearch output,
# the type defines the document type these entries should be stored
# in. Default: log
#document_type: log
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Altere esta linha para:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Type to be published in the &amp;#39;type&amp;#39; field. For Elasticsearch output,
# the type defines the document type these entries should be stored
# in. Default: log
document_type: syslog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Isso especifica para o servidor Elastic que este tipo de log se refere ao &lt;cite&gt;syslog&lt;/cite&gt;. Podem ser criados outros &lt;cite&gt;prospectors&lt;/cite&gt; com diferentes tipos de log, mas cuidado com a indentação do arquivo sempre!&lt;/p&gt;
&lt;p&gt;Agora próximo da seção &lt;cite&gt;output&lt;/cite&gt; na seção &lt;cite&gt;#logstash&lt;/cite&gt; temos as seguintes linhas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.
output:


  .. linhas omitidas ..

  ### Logstash as output
  #logstash:
    # The Logstash hosts
    #hosts: [&amp;quot;localhost:5044&amp;quot;]

    # Number of workers per Logstash host.
    #worker: 1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos descomentar a linha da seção do &lt;cite&gt;logstash&lt;/cite&gt; para habilitar esta seção e modificar o parâmetro &lt;cite&gt;hosts&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.
output:


  .. linhas omitidas ..

  ### Logstash as output
  logstash:
    # The Logstash hosts
    hosts: [&amp;quot;ELK_server_private_IP:5044&amp;quot;]

    # Number of workers per Logstash host.
    #worker: 1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Na seção &lt;cite&gt;tls&lt;/cite&gt; temos o seguinte trecho:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#tls:
  # List of root certificates for HTTPS server verifications
  #certificate_authorities: [&amp;quot;/etc/pki/root/ca.pem&amp;quot;]

  # Certificate for TLS client authentication
  #certificate: &amp;quot;/etc/pki/client/cert.pem&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Iremos descomentar a linha &lt;cite&gt;tls&lt;/cite&gt; para habilitarmos a seção e vamos acrescentar o nosso certificado no parâmetro &lt;cite&gt;certificate_authorities&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tls:
  # List of root certificates for HTTPS server verifications
  certificate_authorities: [&amp;quot;/etc/pki/tls/certs/logstash-forwarder.crt&amp;quot;]

  # Certificate for TLS client authentication
  #certificate: &amp;quot;/etc/pki/client/cert.pem&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora execute os comandos abaixo antes de continuar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo service filebeat restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="testando-a-instalacao-do-filebeat"&gt;
&lt;h2&gt;Testando a instalação do Filebeat&lt;/h2&gt;
&lt;p&gt;Descubra seus indexes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET http://localhost:9200/_cat/indices?v
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Consulte dados dos nós do elasticsearch indexes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET http://localhost:9200/_cat/nodes?v
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Consulte a saúde do cluster:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET http://localhost:9200/_cat/health?v
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apagando indexes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X DELETE &amp;quot;http://localhost:9200/*meta*&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Consulte dados dos seus indexes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -X GET &amp;#39;http://localhost:9200/filebeat-*/_search?pretty&amp;#39;
{
  &amp;quot;took&amp;quot; : 1,
  &amp;quot;timed_out&amp;quot; : false,
  &amp;quot;_shards&amp;quot; : {
    &amp;quot;total&amp;quot; : 25,
    &amp;quot;successful&amp;quot; : 25,
    &amp;quot;failed&amp;quot; : 0
  },
  &amp;quot;hits&amp;quot; : {
    &amp;quot;total&amp;quot; : 1342,
    &amp;quot;max_score&amp;quot; : 1.0,
    &amp;quot;hits&amp;quot; : [ {
      &amp;quot;_index&amp;quot; : &amp;quot;filebeat-2016.10.12&amp;quot;,
      &amp;quot;_type&amp;quot; : &amp;quot;syslog&amp;quot;,
      &amp;quot;_id&amp;quot; : &amp;quot;AVfTM99Ff0lITMzrGB2j&amp;quot;,
      &amp;quot;_score&amp;quot; : 1.0,
      &amp;quot;_source&amp;quot; : {
        &amp;quot;message&amp;quot; : &amp;quot;Oct 12 11:37:06 bloodmary mate-screensaver-dialog: gkr-pam: unlocked login keyring&amp;quot;,
        &amp;quot;@version&amp;quot; : &amp;quot;1&amp;quot;,
        &amp;quot;@timestamp&amp;quot; : &amp;quot;2016-10-12T15:37:06.000Z&amp;quot;,
        &amp;quot;source&amp;quot; : &amp;quot;/var/log/auth.log&amp;quot;,
        &amp;quot;offset&amp;quot; : 1063,
        &amp;quot;fields&amp;quot; : null,
        &amp;quot;beat&amp;quot; : {
          &amp;quot;hostname&amp;quot; : &amp;quot;bloodmary&amp;quot;,
          &amp;quot;name&amp;quot; : &amp;quot;bloodmary&amp;quot;
        },
        &amp;quot;type&amp;quot; : &amp;quot;syslog&amp;quot;,
        &amp;quot;input_type&amp;quot; : &amp;quot;log&amp;quot;,
        &amp;quot;count&amp;quot; : 1,
        &amp;quot;host&amp;quot; : &amp;quot;bloodmary&amp;quot;,
        &amp;quot;tags&amp;quot; : [ &amp;quot;beats_input_codec_plain_applied&amp;quot; ],
        &amp;quot;syslog_timestamp&amp;quot; : &amp;quot;Oct 12 11:37:06&amp;quot;,
        &amp;quot;syslog_hostname&amp;quot; : &amp;quot;bloodmary&amp;quot;,
        &amp;quot;syslog_program&amp;quot; : &amp;quot;mate-screensaver-dialog&amp;quot;,
        &amp;quot;syslog_message&amp;quot; : &amp;quot;gkr-pam: unlocked login keyring&amp;quot;,
        &amp;quot;received_at&amp;quot; : &amp;quot;2016-10-17T15:12:51.070Z&amp;quot;,
        &amp;quot;received_from&amp;quot; : &amp;quot;bloodmary&amp;quot;,
        &amp;quot;syslog_severity_code&amp;quot; : 5,
        &amp;quot;syslog_facility_code&amp;quot; : 1,
        &amp;quot;syslog_facility&amp;quot; : &amp;quot;user-level&amp;quot;,
        &amp;quot;syslog_severity&amp;quot; : &amp;quot;notice&amp;quot;
      }
    },

... linhas omitidas...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se esta consulta dos indexes trouxe 0 registros então Elasticsearch não está recebendo/indexando seus logs como deveria.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="setando-seu-index-principal"&gt;
&lt;h2&gt;Setando seu index principal&lt;/h2&gt;
&lt;p&gt;Para poder visualizar seus logs no menu Discover do Kibana basta setar seu index principal conforme mostrando no gif abaixo:&lt;/p&gt;
&lt;img alt="setando index principal" src="images/melhorando-seus-logs-com-elk/04.gif" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Esta imagem foi copiada do tutorial da digital ocean a qual esse post se baseou&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feito isso agora basta criar seus dashboards personalizados e trabalhar com queries para analisar seus logs :)... quem sabe em um futuro próximo eu posto sobre isso também, mas pra você não ficar ai esperando leia a documentação da Elastic, pois é muito boa! Segue o link da doc oficial para continuar os estudos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.elastic.co/guide/index.html"&gt;https://www.elastic.co/guide/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="em-caso-de-erros"&gt;
&lt;h2&gt;Em caso de erros&lt;/h2&gt;
&lt;p&gt;Depurar filebeat:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;filebeat -e -v -d &amp;#39;*&amp;#39; -c /etc/filebeat/filebeat.yml
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No meu notebook deu problema pois o filebeat tentava bater no elasticsearch pela localhost:9200 e dava erro, removi essa conf e tudo ficou bem.&lt;/p&gt;
&lt;p&gt;Pela minha análise preliminar se ele não alcança algum host ele não sobe log pra nenhum.&lt;/p&gt;
&lt;p&gt;Para depurar a conexão SSL: &lt;a class="reference external" href="https://www.elastic.co/guide/en/beats/filebeat/current/configuring-tls-logstash.html"&gt;https://www.elastic.co/guide/en/beats/filebeat/current/configuring-tls-logstash.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="logstash"></category><category term="kibana"></category><category term="filebeat"></category><category term="elasticsearch"></category><category term="log"></category></entry><entry><title>A importância de um log</title><link href="http://blog.abraseucodigo.com.br/a-importancia-de-um-log.html" rel="alternate"></link><published>2017-01-14T10:43:00-02:00</published><updated>2017-01-14T10:43:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2017-01-14:/a-importancia-de-um-log.html</id><summary type="html">&lt;p class="first last"&gt;O que é log? E pra que logar?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Imagine que você criou uma aplicação Web (independente da linguagem de programação) e que durante o seu desenvolvimento você usou &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/Test_Driven_Development"&gt;TDD&lt;/a&gt; bem certinho, como deve ser. Usando &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Code_coverage"&gt;testes de cobertura&lt;/a&gt; junto ao TDD você consegue garantir que um determinado percentual do seu código está assegurado pelos testes que você escreveu, e isso é lindo!&lt;/p&gt;
&lt;p&gt;Porém o que você não consegue garantir com TDD é se o teu usuário final está acessando sua aplicação da maneira que você programou para ele acessar, exceções sempre vão acontecer meu amigo! Esta é a vida dura de um desenvolvedor.&lt;/p&gt;
&lt;p&gt;Seja por um desvio de comunicação entre quem programa e quem irá usar o programa, ou seja por um deslize qualquer que você como programador tenha cometido, exceções sempre irão acontecer, não adianta falar que não!&lt;/p&gt;
&lt;p&gt;Agora cabe a você entender e tratar estas exceções, mas como? Sua aplicação está lá longe de você, rodando em alguma máquina em alguma Cloud XYZ e você está aqui &amp;quot;cego&amp;quot;, você não vê as exceções acontecerem e quando elas acontecem, quem vê geralmente é o teu cliente, e provavelmente quando ele ver a exceção acontecer isso irá gerar insatisfação e até falta de segurança pra ele.&lt;/p&gt;
&lt;p&gt;Como resolver isso? Como visualizar suas exceções para que elas não aconteçam mais? A resposta é simples meu amigo! Faça com que sua aplicação gere logs!&lt;/p&gt;
&lt;div class="section" id="o-que-e-um-log"&gt;
&lt;h2&gt;O que é um log?&lt;/h2&gt;
&lt;p&gt;Log por essência é um arquivo de texto puro, com linhas, onde cada linha tem hora e data de uma ação que tem determinada importância na aplicação.&lt;/p&gt;
&lt;p&gt;Hoje existem formas mais legais do que simplesmente armazenar em um arquivo texto, dentre as opções que temos você pode mandar estes logs para o &lt;a class="reference external" href="https://logentries.com/"&gt;Logentries&lt;/a&gt;, podemos mandar logs como se fossem mensagens para o &lt;a class="reference external" href="https://slack.com/"&gt;Slack&lt;/a&gt; ou &lt;a class="reference external" href="https://telegram.org/"&gt;Telegram&lt;/a&gt;, mandar o arquivo de log para o &lt;a class="reference external" href="https://aws.amazon.com/pt/s3/"&gt;S3&lt;/a&gt; e analisar com alguma ferramenta sua, ou pode usar a stack da &lt;a class="reference external" href="https://www.elastic.co/"&gt;Elastic&lt;/a&gt; (Logstash, Kibana e Elasticsearch) entre outras inúmeras opções.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-eu-preciso-logar"&gt;
&lt;h2&gt;O que eu preciso logar?&lt;/h2&gt;
&lt;p&gt;Você deve logar tudo que é importante para o bom funcionamento das operações que sua aplicação executa, entretanto, quando você não sabe o que é importante, tudo é importante.&lt;/p&gt;
&lt;p&gt;Quando você não sabe o que logar, faça log de tudo! Sim, isso mesmo!&lt;/p&gt;
&lt;p&gt;Isso vai ser chato no no começo, pois tudo que acontecer no sistema vai aparecer pra você e você terá que analisar, mas uma coisa é certa, a primeira vez que você ler um log que contêm tudo da sua aplicação algumas coisas vão acontecer com certeza:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Um entendimento melhor sobre o seu sistema: Quando você loga tudo, você consegue ver o comportamento real do seu sistema, como ele está funcionando de verdade, qual o fluxo das operações que ele faz e baseado nisso você consegue melhorar as operações e o fluxo como um todo de maneira que tenha um melhor desempenho para você e também para o seu cliente (até em termos de usabilidade);&lt;/li&gt;
&lt;li&gt;Chateação: Quando você chega ao momento de se perguntar &lt;cite&gt;Por que eu estou logando essa ação?&lt;/cite&gt; provavelmente essa linha de log não é importante pra você, pense sobre isso e veja se realmente faz diferença pra você, se não é importante, prontamente pare de logar isso, a leitura do log ficará mais fácil;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ainda sobre &lt;cite&gt;Chateação&lt;/cite&gt; existem algumas abordagens para resolver isso, uma delas é você separar os logs por nível de importância.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="separar-por-nivel-de-importancia"&gt;
&lt;h2&gt;Separar por nível de importância&lt;/h2&gt;
&lt;p&gt;No Python temos alguns loglevels que podemos usar:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;info / debug: Usado para propósitos informativos, onde info é para informações menos detalhadas e debug para informações mais detalhadas;&lt;/li&gt;
&lt;li&gt;warning: Usado para logar uma ação que precisa ser notada, mas não é algo crítico ainda;&lt;/li&gt;
&lt;li&gt;error / exception / critical: Erros e problemas críticos no geral, usamos error para problemas que não são críticos, critical para problemas críticos e exception para logar exceptions juntamente ao Traceback.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Porém é mais fácil entender isso na prática.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="saindo-um-pouco-da-teoria-e-indo-para-a-pratica"&gt;
&lt;h2&gt;Saindo um pouco da teoria e indo para a prática&lt;/h2&gt;
&lt;p&gt;Vamos imaginar que já temos um programa que é nada mais nada menos do que uma calculadora:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mul&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ZeroDivisionError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Impossível dividir por 0!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mul&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ao executar este nosso programinha teríamos a seguinte saída:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python calc.py
12
32
2.0
Impossível dividir por 0!
None
4
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Até ai tudo bem certo? Tudo bem pois não vamos executar cálculos &amp;quot;ilegais&amp;quot;, agora se você fosse um usuário desavisado com certeza você tentaria fazer operações deste tipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mul&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ou seja, este cálculo resultaria em uma exceção não tratada por você o que resultaria em problema e insatisfação por parte do usuário.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-logar-as-acoes-da-nossa-calculadora"&gt;
&lt;h2&gt;Como logar as ações da nossa calculadora?&lt;/h2&gt;
&lt;p&gt;Para isso vamos usar o módulo &lt;a class="reference external" href="https://docs.python.org/3/howto/logging.html"&gt;logger&lt;/a&gt; embutido (built-in) no Python.&lt;/p&gt;
&lt;p&gt;Vamos ver como fica:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
 &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mycalculator.log&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="mi"&gt;3&lt;/span&gt;                      &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%(asctime)s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(levelname)s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(funcName)s&lt;/span&gt;&lt;span class="s1"&gt; =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;%(message)s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="mi"&gt;4&lt;/span&gt;
 &lt;span class="mi"&gt;5&lt;/span&gt;
 &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="mi"&gt;7&lt;/span&gt;      &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;paramethers: x={}, y={}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
 &lt;span class="mi"&gt;8&lt;/span&gt;      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
 &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mul&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;      &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;paramethers: x={}, y={}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;13&lt;/span&gt;      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="mi"&gt;14&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="mi"&gt;16&lt;/span&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="mi"&gt;17&lt;/span&gt;      &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;paramethers: x={}, y={}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;18&lt;/span&gt;      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="mi"&gt;19&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="mi"&gt;21&lt;/span&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="mi"&gt;22&lt;/span&gt;      &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;23&lt;/span&gt;          &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;paramethers: x={}, y={}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;24&lt;/span&gt;          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;span class="mi"&gt;25&lt;/span&gt;      &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ZeroDivisionError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;26&lt;/span&gt;          &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;paramethers: x={}, y={}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Impossível dividir por 0!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;28&lt;/span&gt;
&lt;span class="mi"&gt;29&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;30&lt;/span&gt;      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;31&lt;/span&gt;      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mul&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;32&lt;/span&gt;      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;33&lt;/span&gt;      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;34&lt;/span&gt;      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Explicando separadamente:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Linha 1: Faço o import do módulo de logging;&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Linha 2: Defino como será o meu log:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;cite&gt;filename&lt;/cite&gt;: Qual será o nome do meu arquivo de log;&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;format&lt;/cite&gt;: Qual o formato as linhas do meu log serão gravadas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Linha 7, 12, 17: Ao chamar a função &lt;cite&gt;add&lt;/cite&gt; será gravado um log de debug com os parâmetros que usamos para chamar a função;&lt;/li&gt;
&lt;li&gt;Linha 26: Quando a função &lt;cite&gt;div&lt;/cite&gt; causar &lt;cite&gt;ZeroDivisionError&lt;/cite&gt; esta exceção será gravada no log juntamente com o traceback.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ao executar este programinha um arquivo &lt;cite&gt;mycalculator.log&lt;/cite&gt; será gerado com o log das operações executadas, veja só:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python calc.py
12
32
2.0
Impossível dividir por 0!
None
4
$ cat mycalculator.log
2017-01-14 14:06:44,351 DEBUG add =&amp;gt; paramethers: x=8, y=4
2017-01-14 14:06:44,351 DEBUG mul =&amp;gt; paramethers: x=8, y=4
2017-01-14 14:06:44,351 DEBUG div =&amp;gt; paramethers: x=8, y=4
2017-01-14 14:06:44,351 DEBUG div =&amp;gt; paramethers: x=8, y=0
2017-01-14 14:06:44,351 ERROR div =&amp;gt; paramethers: x=8, y=0
Traceback (most recent call last):
  File &amp;quot;calc.py&amp;quot;, line 24, in div
    return x / y
ZeroDivisionError: division by zero
2017-01-14 14:06:44,352 DEBUG sub =&amp;gt; paramethers: x=8, y=4
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Repare que o traceback da função &lt;cite&gt;div&lt;/cite&gt; foi gravado quando a exceção ocorreu.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-mitigar-excecoes-desconhecidas"&gt;
&lt;h2&gt;Como mitigar exceções desconhecidas?&lt;/h2&gt;
&lt;p&gt;Um pouco mais acima eu havia dito que se você não sabe o que é importante é legal fazer log de tudo e com o tempo remover o que você achar desnecessário.&lt;/p&gt;
&lt;p&gt;Esta prática é muito útil quando você não tem pleno conhecimento do funcionamento da aplicação em que você vai trabalhar (supondo que ela não tenha log de nada).&lt;/p&gt;
&lt;p&gt;Podemos logar todas as exceções não tratadas para irmos resolvendo ao longo do tempo, para fazer isso é simples, vamos ver como isso ficaria na nossa função &lt;cite&gt;add&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;paramethers: x={}, y={}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Unknown exception&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O que aconteceu agora? Todas as exceções &amp;quot;genéricas&amp;quot; serão gravadas no nosso log para fazermos uma análise do que aconteceu. Vamos observar o efeito disso:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python calc.py
12
Traceback (most recent call last):
  File &amp;quot;calc.py&amp;quot;, line 33, in &amp;lt;module&amp;gt;
    print(add(8, &amp;#39;a&amp;#39;))
  File &amp;quot;calc.py&amp;quot;, line 9, in add
    return x + y
TypeError: unsupported operand type(s) for +: &amp;#39;int&amp;#39; and &amp;#39;str&amp;#39;

$ cat mycalculator.log
2017-01-14 14:15:10,939 DEBUG add =&amp;gt; paramethers: x=8, y=4
2017-01-14 14:15:10,939 DEBUG add =&amp;gt; paramethers: x=8, y=a
2017-01-14 14:15:10,939 ERROR add =&amp;gt; Unknown exception
Traceback (most recent call last):
  File &amp;quot;calc.py&amp;quot;, line 9, in add
    return x + y
TypeError: unsupported operand type(s) for +: &amp;#39;int&amp;#39; and &amp;#39;str&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="cuidado-que-voce-deve-ter-ao-logar-as-excecoes-genericamente"&gt;
&lt;h2&gt;Cuidado que você deve ter ao logar as exceções genericamente&lt;/h2&gt;
&lt;p&gt;Perceba que usamos o &lt;cite&gt;raise&lt;/cite&gt; após logar a exceção para propagar a exceção, pois quando ela é uma exceção desconhecida não podemos ignorá-la, o código abaixo é considerado uma má prática:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ISSO NÃO DEVE SER FEITO&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;paramethers: x={}, y={}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Unknown exception&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ISSO NÃO DEVE SER FEITO&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta forma acima quando o nosso código levantar uma exceção irá retornar &lt;cite&gt;None&lt;/cite&gt; seja ela qual for! Isso é horrível! Dificulta a programação e a depuração em diversos aspectos.&lt;/p&gt;
&lt;p&gt;Se você tomar esta precaução não terá problema você fazer logs para exceções genéricas e isso te ajudará muito (principalmente quando você não conhece o sistema como um todo), e você poderá ir criando exceções mais claras posteriormente quando você já tiver um entendimento legal do código :).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Criar logs te ajuda a entender mais sobre o sistema e não é uma tarefa complexa, comece aos poucos e logo você estará viciado em fazer logs pois você verá por si a vantagem que te proporciona no dia a dia.&lt;/p&gt;
&lt;p&gt;Dúvidas, sugestões e críticas deixe seu comentário abaixo!&lt;/p&gt;
&lt;p&gt;Espero que tenham gostado! ;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referências&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/howto/logging.html#when-to-use-logging"&gt;When to use logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/howto/logging.html"&gt;Logging HOWTO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="log"></category><category term="python"></category></entry><entry><title>Problemas com sequences no PostgreSQL usando Django</title><link href="http://blog.abraseucodigo.com.br/problemas-com-postgres-django-sequences.html" rel="alternate"></link><published>2016-12-22T10:58:00-02:00</published><updated>2016-12-22T10:58:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-12-22:/problemas-com-postgres-django-sequences.html</id><summary type="html">&lt;p class="first last"&gt;Sua sequence não incrementa corretamente, este post pode te ajudar&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Tive um problema bem estranho estes dias, fui criar um novo objeto de model Django e persistí-lo no banco com o método &lt;cite&gt;.save()&lt;/cite&gt; (como todos vocês devem fazer milhares de vezes por dia), porém isso não aconteceu e recebi um erro deste tipo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;IntegrityError: duplicate key value violates unique constraint &amp;quot;core_pessoa_pkey&amp;quot;
DETAIL:  Key (id)=(2) already exists.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos entender por que isso aconteceu.&lt;/p&gt;
&lt;div class="section" id="qual-a-causa-para-isso-ter-acontecido"&gt;
&lt;h2&gt;Qual a causa para isso ter acontecido?&lt;/h2&gt;
&lt;p&gt;Você sempre se faz essa pergunta quando se depara com uma situação bizarra? Bem, eu também. A uns dias atrás precisei rodar um script no Django que inseria vários objetos no banco de dados, porém como esta operação já havia sido testada e retestada em outra máquina os objetos já tinham uma pk associada, então imagine um model do Django hipotético com esta estrutura:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;class Pessoa(models.Model):
    nome = models.CharField(max_length=50)
    idade = models.IntegerField()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;E para persistir um novo objeto no banco você faz:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; from django-test.core.models import Pessoa
&amp;gt;&amp;gt;&amp;gt; p = Pessoa(id=1, nome=&amp;quot;Rafael&amp;quot;, idade=28)
&amp;gt;&amp;gt;&amp;gt; p.save()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta maneira iríamos persistir esta pessoa na nossa base de dados PostgreSQL tranquilamente. Porém!!! Porém!!! Porém!!! Isso tem um problema. Quando criamos um objeto novo já com uma pk (o id do nosso exemplo) associada e persistimos este objeto a sequence dele NÃO É INCREMENTADA! Ou seja, quando você for persistir um outro objeto sem passar a pk o Django te mandará esta exception abaixo bem no meio da sua cara:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;IntegrityError: duplicate key value violates unique constraint &amp;quot;core_pessoa_pkey&amp;quot;
DETAIL:  Key (id)=(1) already exists.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como consigo ver este efeito acontecer? Simples, basta tentar persistir uma pessoa sem passar a pk:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; from pessoa.models import Pessoa
&amp;gt;&amp;gt;&amp;gt; p1 = Pessoa(id=2, nome=&amp;quot;Rafael&amp;quot;, idade=28)
&amp;gt;&amp;gt;&amp;gt; p1.save()
&amp;gt;&amp;gt;&amp;gt; p2 = Pessoa(nome=&amp;quot;Rafael&amp;quot;, idade=28)
&amp;gt;&amp;gt;&amp;gt; p2.save()
django.db.utils.IntegrityError: duplicate key value violates unique constraint &amp;quot;core_pessoa_pkey&amp;quot;
DETAIL:  Key (id)=(1) already exists.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este efeito foi observado no PostgreSQL e não sei se aconteceria usando MySQL ou outros SGBDs por exemplo... é questão de experimentar e ver o efeito.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-eu-resolvo-isso"&gt;
&lt;h2&gt;Como eu resolvo isso?&lt;/h2&gt;
&lt;p&gt;Você conseguirá resolver este problema setando um valor NA MÃO para a sua sequence que não foi incrementada. No PostgreSQL até que foi simples, primeiro fiz uma query para descobrir quais eram TODAS as minhas sequences:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT c.relname FROM pg_class c WHERE c.relkind = &amp;#39;S&amp;#39;;

      relname
-----------------------------------
 django_migrations_id_seq
 django_content_type_id_seq
 auth_permission_id_seq
 auth_group_id_seq
 auth_group_permissions_id_seq
 auth_user_id_seq
 auth_user_groups_id_seq
 auth_user_user_permissions_id_seq
 django_admin_log_id_seq
 core_pessoa_id_seq
(10 registros)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Neste caso a sequence que queremos é a do &lt;cite&gt;id&lt;/cite&gt; que está na app chamada &lt;cite&gt;core&lt;/cite&gt; e no model &lt;cite&gt;Pessoa&lt;/cite&gt;, que se chama &lt;cite&gt;core_pessoa_id_seq&lt;/cite&gt; no meu exemplo. Vamos dar uma olhada como esta sequence está no momento:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT * FROM core_pessoa_id_seq;

   sequence_name    | last_value | start_value | increment_by |      max_value      | min_value | cache_value | log_cnt | is_cycled | is_called
--------------------+------------+-------------+--------------+---------------------+-----------+-------------+---------+-----------+-----------
 core_pessoa_id_seq |          1 |           1 |            1 | 9223372036854775807 |         1 |           1 |      32 | f         | t
(1 registro)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perceba que nossa sequence possui o valor &lt;cite&gt;last_value&lt;/cite&gt; igual a 1, o que não é verdade pois já temos 2 objetos na nossa tabela &lt;cite&gt;pessoa&lt;/cite&gt;, como podemos ver na query abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT * FROM core_pessoa;

 id |  nome  | idade
----+--------+-------
  1 | Rafael |    28
  2 | Rafael |    28
(2 registros)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para verificar isso mais facilmente (em caso de muitos registros) também podemos usar um count nesta query:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT count(*) FROM core_pessoa;

 count
-------
     2
(1 registro)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora o próximo passo é setar o &lt;cite&gt;last_value&lt;/cite&gt; de maneira correta, para isso vamos executar o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT setval(&amp;#39;core_pessoa_id_seq&amp;#39;, 2);

 setval
--------
      2
(1 registro)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Depois podemos consultar o valor da nossa sequence de novo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SELECT * FROM core_pessoa_id_seq;

   sequence_name    | last_value | start_value | increment_by |      max_value      | min_value | cache_value | log_cnt | is_cycled | is_called
--------------------+------------+-------------+--------------+---------------------+-----------+-------------+---------+-----------+-----------
 core_pessoa_id_seq |          2 |           1 |            1 | 9223372036854775807 |         1 |           1 |       0 | f         | t
(1 registro)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Podemos ver que foi alterado de fato! Agora vamos tentar inserir um objeto sem id novamente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; from pessoa.models import Pessoa
&amp;gt;&amp;gt;&amp;gt; p = Pessoa(nome=&amp;quot;Rafael&amp;quot;, idade=28)
&amp;gt;&amp;gt;&amp;gt; p.save()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;E tudo funcionou normalmente de novo como deveria ser!! Dúvidas/sugestões e críticas?? Use essa caixinha mágica ai em baixo :)&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="django"></category><category term="postgresql"></category><category term="sequences"></category></entry><entry><title>Resolução exercício: 03 - Blackjack parte 01 - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/resolucao-03-blackjack-parte-01-grupo-de-estudos-python.html" rel="alternate"></link><published>2016-04-10T23:53:00-03:00</published><updated>2016-04-10T23:53:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-04-10:/resolucao-03-blackjack-parte-01-grupo-de-estudos-python.html</id><summary type="html">&lt;p class="first last"&gt;Resolução do exercício blackjack parte 1 passado no Grupo de Estudos Python&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Como este exercício foi complexo, a resolução é em forma de vídeo!&lt;/p&gt;
&lt;div class="section" id="para-voce-meu-amigo-leitor"&gt;
&lt;h2&gt;Para você meu amigo leitor ...&lt;/h2&gt;
&lt;p&gt;Para quem só lê os posts e não vê os vídeos do grupo de estudos, resolvi fazer uma repostagem dos vídeos neste post para ficar indexado de forma que as pessoas que só acompanham pelo blog consigam achar a resolução e enteder o exercício também.&lt;/p&gt;
&lt;p&gt;Se você quiser ver os 4 vídeos de maneira passo-a-passo como eu resolvi o exercício continue até o final do post. Caso você seja mais do tipo...&lt;/p&gt;
&lt;img alt="show me the code" src="images/resolucao-03-blackjack-parte-01-grupo-de-estudos-python.png" /&gt;
&lt;p&gt;... temos um repositório no github com a resolução do exercício de várias pessoas (não só a minha)...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nosso-repositorio"&gt;
&lt;h2&gt;Nosso repositório&lt;/h2&gt;
&lt;p&gt;Neste repositório contêm todas as resoluções para o exercício, e não somente a minha:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/rafaelhenrique/python_study_group/tree/master/blackjack"&gt;https://github.com/rafaelhenrique/python_study_group/tree/master/blackjack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Quer colocar a sua resolução lá? Solicite acesso ao repositório que eu libero.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="videos"&gt;
&lt;h2&gt;Vídeos&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="aula-06-parte-1"&gt;
&lt;h2&gt;Aula 06 - Parte 1&lt;/h2&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/L48rYYEH8_Q" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="section" id="aula-06-parte-2"&gt;
&lt;h2&gt;Aula 06 - Parte 2&lt;/h2&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/FsgFZDpxHWk" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="section" id="aula-07"&gt;
&lt;h2&gt;Aula 07&lt;/h2&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/nXHh9yiBi_I" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="section" id="aula-07-finalizando-o-exercicio-blackjack"&gt;
&lt;h2&gt;Aula 07 - Finalizando o exercício blackjack&lt;/h2&gt;
&lt;div class="youtube youtube-16x9"&gt;&lt;iframe src="https://www.youtube.com/embed/amulYdX9XHM" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="section" id="palavras-finais"&gt;
&lt;h2&gt;Palavras finais&lt;/h2&gt;
&lt;p&gt;Dúvidas? Críticas? Sugestões? Sempre são bem vindas! Comenta ai!&lt;/p&gt;
&lt;p&gt;That's all folks!&lt;/p&gt;
&lt;/div&gt;
</content><category term="exercício"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Exercício: 04 - Agenda Pythônica - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/exercicio-04-agenda-pythonica-grupo-de-estudos-python.html" rel="alternate"></link><published>2016-04-10T23:14:00-03:00</published><updated>2016-04-10T23:14:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-04-10:/exercicio-04-agenda-pythonica-grupo-de-estudos-python.html</id><summary type="html">&lt;p class="first last"&gt;Exercício para resolução&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Vamos fazer uma agenda!&lt;/p&gt;
&lt;div class="section" id="passo-a-passo"&gt;
&lt;h2&gt;Passo a passo...&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Passo 1: Primeiro receberemos os campos que o usuário vai querer na agenda. O usuário poderá digitar uma quantidade variável de campos. Exemplo de campos: data, nome, compromisso, observação, prioridade e etc.&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Após receber estes campos você deverá criar as chaves respectivas de um dicionário usando estes nomes;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Passo 2: Salve o formato (as keys do seu dicionário) da sua agenda em um arquivo texto (se quiser inovar pode ser um banco de dados também);&lt;/li&gt;
&lt;li&gt;Passo 3: Faça seu sistema ler o formato do dicionário e criar as keys quando ele rodar, caso ele não ache o arquivo com o formato ele deverá executar o passo 1 e 2 de novo;&lt;/li&gt;
&lt;li&gt;Passo 4: Depois que seu sistema leu o formato, receba as informações de compromisso (respeitando as keys do dicionário) do usuário e salve essas informações em outro arquivo (ou pode ser no mesmo apesar de eu achar isso mais complexo);&lt;/li&gt;
&lt;li&gt;Passo 5: Crie uma opção para que o usuário possa ler os compromissos cadastrados.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para facilitar a resolução pense em dicionários, listas, tuplas e estruturas de repetição (for e while).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="importante"&gt;
&lt;h2&gt;Importante&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;TODOS os passos devem ser feitos utilizando TDD, sempre pensando no teste primeiro e codificar depois! Esse exercício serve para ajudar a fixar a prática do TDD!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pode ser usado doctest e/ou unittest ou outra ferramenta qualquer que vocês queiram estudar/aprender. Entre doctest e unittest prefiro que vocês desenvolvam com unittest, pois é uma ferramenta melhor/mais usada (vocês conseguem vagas de emprego com isso) para vocês aplicarem no &amp;quot;mundo real&amp;quot;.&lt;/p&gt;
&lt;p&gt;Se ainda não se sentem confortáveis com o unittest é melhor entender bem o funcionamento dele antes de estudar novas ferramentas para teste.&lt;/p&gt;
&lt;p&gt;Se vocês quiserem &amp;quot;inovar&amp;quot; e aprender ferramentas novas para teste recomendo algumas:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pytest.org/latest/"&gt;Pytest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nose.readthedocs.org/en/latest/"&gt;Nose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pythonhosted.org/behave/tutorial.html"&gt;Behave&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lettuce.it/tutorial/simple.html"&gt;Lettuce&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Não estou tirando o crédito do unittest, pelo contrário, acho uma ótima ferramenta, porém caso queiram estudar MAIS ou caso estejam com tempo sobrando convêm dar uma olhada nessas outras ferramentas.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="dicas-extras"&gt;
&lt;h2&gt;Dicas extras&lt;/h2&gt;
&lt;p&gt;Você poderá estudar o módulo &lt;a class="reference external" href="https://docs.python.org/3/library/json.html"&gt;json&lt;/a&gt; e o &lt;a class="reference external" href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects"&gt;file object&lt;/a&gt; do Python 3 para te ajudar na resolução.&lt;/p&gt;
&lt;p&gt;A saída do seu sistema deverá ser algo similar a esta abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ls
&lt;span class="go"&gt;agenda.py&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; python agenda.py
&lt;span class="go"&gt;Digite um campo novo [c=cancelar]: nome&lt;/span&gt;
&lt;span class="go"&gt;Digite um campo novo [c=cancelar]: dia&lt;/span&gt;
&lt;span class="go"&gt;Digite um campo novo [c=cancelar]: compromisso&lt;/span&gt;
&lt;span class="go"&gt;Digite um campo novo [c=cancelar]: ano&lt;/span&gt;
&lt;span class="go"&gt;Digite um campo novo [c=cancelar]: mes&lt;/span&gt;
&lt;span class="go"&gt;Digite um campo novo [c=cancelar]: c&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; ls
&lt;span class="go"&gt;agenda.py  structure.json&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; python agenda.py
&lt;span class="go"&gt;O que deseja fazer?&lt;/span&gt;
&lt;span class="go"&gt;1. Acrescentar compromissos&lt;/span&gt;
&lt;span class="go"&gt;2. Ler compromissos&lt;/span&gt;
&lt;span class="go"&gt;3. Sair&lt;/span&gt;
&lt;span class="go"&gt;2&lt;/span&gt;
&lt;span class="go"&gt;Nenhum compromisso cadastrado!&lt;/span&gt;
&lt;span class="go"&gt;O que deseja fazer?&lt;/span&gt;
&lt;span class="go"&gt;1. Acrescentar compromissos&lt;/span&gt;
&lt;span class="go"&gt;2. Ler compromissos&lt;/span&gt;
&lt;span class="go"&gt;3. Sair&lt;/span&gt;
&lt;span class="go"&gt;1&lt;/span&gt;
&lt;span class="go"&gt;Digite um novo valor para nome: Rafael&lt;/span&gt;
&lt;span class="go"&gt;Digite um novo valor para mes: Abril&lt;/span&gt;
&lt;span class="go"&gt;Digite um novo valor para ano: 2016&lt;/span&gt;
&lt;span class="go"&gt;Digite um novo valor para compromisso: Ir dormir&lt;/span&gt;
&lt;span class="go"&gt;Digite um novo valor para dia: 10&lt;/span&gt;
&lt;span class="go"&gt;O que deseja fazer?&lt;/span&gt;
&lt;span class="go"&gt;1. Acrescentar compromissos&lt;/span&gt;
&lt;span class="go"&gt;2. Ler compromissos&lt;/span&gt;
&lt;span class="go"&gt;3. Sair&lt;/span&gt;
&lt;span class="go"&gt;2&lt;/span&gt;
&lt;span class="go"&gt;nome: Rafael&lt;/span&gt;
&lt;span class="go"&gt;mes: Abril&lt;/span&gt;
&lt;span class="go"&gt;ano: 2016&lt;/span&gt;
&lt;span class="go"&gt;compromisso: Ir dormir&lt;/span&gt;
&lt;span class="go"&gt;dia: 10&lt;/span&gt;
&lt;span class="go"&gt;-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~&lt;/span&gt;
&lt;span class="go"&gt;O que deseja fazer?&lt;/span&gt;
&lt;span class="go"&gt;1. Acrescentar compromissos&lt;/span&gt;
&lt;span class="go"&gt;2. Ler compromissos&lt;/span&gt;
&lt;span class="go"&gt;3. Sair&lt;/span&gt;
&lt;span class="go"&gt;3&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; ls
&lt;span class="go"&gt;agenda.py  structure.json  tasks.json&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;** Preste atenção ao &lt;tt class="docutils literal"&gt;ls&lt;/tt&gt; que executei, em um primeiro momento criei somente o arquivo de estrutura (structure.json) e depois criei o arquivo contendo as tarefas (tasks.json)&lt;/p&gt;
&lt;p&gt;Semana que vem posto a resolução!&lt;/p&gt;
&lt;p&gt;That's all folks!&lt;/p&gt;
&lt;/div&gt;
</content><category term="exercício"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>O que são métodos/funções in-place no Python?</title><link href="http://blog.abraseucodigo.com.br/o-que-sao-metodos-funcoes-inplace-no-python.html" rel="alternate"></link><published>2016-04-04T16:36:00-03:00</published><updated>2016-04-04T16:36:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-04-04:/o-que-sao-metodos-funcoes-inplace-no-python.html</id><summary type="html">&lt;p class="first last"&gt;O que são estes métodos in-place? Onde vivem? Do que se alimentam?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Métodos/funções in-place no Python são carinhas que alteram o objeto original ao executar determinada funcionalidade.&lt;/p&gt;
&lt;div class="section" id="in-place"&gt;
&lt;h2&gt;IN PLACE&lt;/h2&gt;
&lt;p&gt;Vamos a um exemplo prático:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ipython
&lt;span class="go"&gt;Python 3.5.1 (default, Feb 10 2016, 10:59:15)&lt;/span&gt;
&lt;span class="go"&gt;Type &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.&lt;/span&gt;

&lt;span class="go"&gt;IPython 4.1.2 -- An enhanced Interactive Python.&lt;/span&gt;
&lt;span class="go"&gt;?         -&amp;gt; Introduction and overview of IPython&amp;#39;s features.&lt;/span&gt;
&lt;span class="gp"&gt;%&lt;/span&gt;quickref -&amp;gt; Quick reference.
&lt;span class="go"&gt;help      -&amp;gt; Python&amp;#39;s own help system.&lt;/span&gt;
&lt;span class="go"&gt;object?   -&amp;gt; Details about &amp;#39;object&amp;#39;, use &amp;#39;object??&amp;#39; for extra details.&lt;/span&gt;

&lt;span class="go"&gt;In [1]: teste = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]&lt;/span&gt;

&lt;span class="go"&gt;In [2]: teste.reverse&lt;/span&gt;
&lt;span class="go"&gt;teste.reverse&lt;/span&gt;

&lt;span class="go"&gt;In [2]: teste.reverse?&lt;/span&gt;
&lt;span class="go"&gt;Docstring: L.reverse() -- reverse *IN PLACE*&lt;/span&gt;
&lt;span class="go"&gt;Type:      builtin_function_or_method&lt;/span&gt;

&lt;span class="go"&gt;In [3]: reversed?&lt;/span&gt;
&lt;span class="go"&gt;Init signature: reversed(self, /, *args, **kwargs)&lt;/span&gt;
&lt;span class="go"&gt;Docstring:&lt;/span&gt;
&lt;span class="go"&gt;reversed(sequence) -&amp;gt; reverse iterator over values of the sequence&lt;/span&gt;

&lt;span class="go"&gt;Return a reverse iterator&lt;/span&gt;
&lt;span class="go"&gt;Type:           type&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;** Neste exemplo (utilizando o ipython) usei um recurso bem bacana do ipython que mostra a docstring de um método/função python utilizando o caractere &lt;tt class="docutils literal"&gt;?&lt;/tt&gt;, usem isso é bem legal :)&lt;/p&gt;
&lt;p&gt;Podemos ver que de acordo com a docstring do método &lt;a class="reference external" href="https://docs.python.org/3.5/tutorial/datastructures.html#more-on-lists"&gt;reverse&lt;/a&gt; de uma lista chamada &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt; o método &lt;tt class="docutils literal"&gt;reverse&lt;/tt&gt; é IN PLACE, ao contrário da função &lt;a class="reference external" href="https://docs.python.org/3/library/functions.html#reversed"&gt;reversed&lt;/a&gt; (builtin do Python) que não é IN PLACE. Bem ai já temos uma ideia de como começar nossos estudos. Vamos ver o que o método &lt;tt class="docutils literal"&gt;reverse&lt;/tt&gt; da lista &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt; é capaz de fazer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;In [6]: id(teste)&lt;/span&gt;
&lt;span class="go"&gt;Out[6]: 140323076029960&lt;/span&gt;

&lt;span class="go"&gt;In [7]: teste&lt;/span&gt;
&lt;span class="go"&gt;Out[7]: [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]&lt;/span&gt;

&lt;span class="go"&gt;In [8]: teste.reverse()&lt;/span&gt;

&lt;span class="go"&gt;In [9]: id(teste)&lt;/span&gt;
&lt;span class="go"&gt;Out[9]: 140323076029960&lt;/span&gt;

&lt;span class="go"&gt;In [10]: teste&lt;/span&gt;
&lt;span class="go"&gt;Out[10]: [&amp;#39;c&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;a&amp;#39;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;execução [6]: eu usei uma função também builtin do Python chamada &lt;a class="reference external" href="https://docs.python.org/3/library/functions.html#id"&gt;id&lt;/a&gt; que retorna a identidade de um objeto Python, o endereço retornado é o endereço do objeto em memória, um objeto diferente não possui o mesmo endereço de id NUNCA;&lt;/li&gt;
&lt;li&gt;execução [7]: podemos visualizar quais dados temos na lista &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt;;&lt;/li&gt;
&lt;li&gt;execução [8]: aplico o reverse na lista &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt; e podemos ver que este método não retorna dados pois não temos a linha Out após sua execução;&lt;/li&gt;
&lt;li&gt;execução [9]: podemos ver que o id continua o mesmo, logo podemos concluir que nosso objeto ainda é o mesmo objeto (em memória);&lt;/li&gt;
&lt;li&gt;execução [10]: nossa lista chamada &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt; foi modificada IN PLACE, ou seja, no mesmo objeto em que foi chamado o método reverse.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Observação importante: Nem todo IN PLACE mantêm o id do objeto original, a regra é o método/função alterar o objeto dentro dele mesmo, mas isso não significa que o id será sempre o mesmo, pois ele poderá criar um novo objeto e depositar esse objeto SOBRESCREVENDO sua variável antiga.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-nao-e-in-place"&gt;
&lt;h2&gt;O que não é IN PLACE&lt;/h2&gt;
&lt;p&gt;Um método/função não IN PLACE não modifica o objeto original para aplicar suas funcionalidades, mas sim cria um novo objeto! Vamos ao exemplo, pegando o gancho do exemplo acima:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;In [15]: teste&lt;/span&gt;
&lt;span class="go"&gt;Out[15]: [&amp;#39;c&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;a&amp;#39;]&lt;/span&gt;

&lt;span class="go"&gt;In [16]: id(teste)&lt;/span&gt;
&lt;span class="go"&gt;Out[16]: 140323076029960&lt;/span&gt;

&lt;span class="go"&gt;In [17]: reversed(teste)&lt;/span&gt;
&lt;span class="go"&gt;Out[17]: &amp;lt;list_reverseiterator at 0x7f9f8313c9b0&amp;gt;&lt;/span&gt;

&lt;span class="go"&gt;In [18]: teste&lt;/span&gt;
&lt;span class="go"&gt;Out[18]: [&amp;#39;c&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;a&amp;#39;]&lt;/span&gt;

&lt;span class="go"&gt;In [19]: id(teste)&lt;/span&gt;
&lt;span class="go"&gt;Out[19]: 140323076029960&lt;/span&gt;

&lt;span class="go"&gt;In [20]: teste2 = list(reversed(teste))&lt;/span&gt;

&lt;span class="go"&gt;In [21]: teste2&lt;/span&gt;
&lt;span class="go"&gt;Out[21]: [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]&lt;/span&gt;

&lt;span class="go"&gt;In [22]: id(teste)&lt;/span&gt;
&lt;span class="go"&gt;Out[22]: 140323076029960&lt;/span&gt;

&lt;span class="go"&gt;In [23]: id(teste2)&lt;/span&gt;
&lt;span class="go"&gt;Out[23]: 140323075691656&lt;/span&gt;

&lt;span class="go"&gt;In [24]: teste&lt;/span&gt;
&lt;span class="go"&gt;Out[24]: [&amp;#39;c&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;a&amp;#39;]&lt;/span&gt;

&lt;span class="go"&gt;In [25]: teste2&lt;/span&gt;
&lt;span class="go"&gt;Out[25]: [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;execução [15]: temos a nossa mesma lista com os mesmos elementos, na mesma ordem;&lt;/li&gt;
&lt;li&gt;execução [16]: temos o mesmo id da nossa lista original;&lt;/li&gt;
&lt;li&gt;execução [17]: executamos o &lt;tt class="docutils literal"&gt;reversed&lt;/tt&gt; na lista &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt; e o resultado de Out é outro tipo de objeto chamado &lt;tt class="docutils literal"&gt;list_reverseiterator&lt;/tt&gt;, um objeto em diferente do que tínhamos anteriormente;&lt;/li&gt;
&lt;li&gt;execução [18]: nossa lista &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt; continua com os elementos na mesma posição após a execução da função;&lt;/li&gt;
&lt;li&gt;execução [19]: o id da nossa lista &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt; também continua sendo o mesmo;&lt;/li&gt;
&lt;li&gt;execução [20]: agora vou guardar o resultado da função &lt;tt class="docutils literal"&gt;reversed&lt;/tt&gt; aplicar outra função &lt;tt class="docutils literal"&gt;list&lt;/tt&gt; para criar um novo objeto &lt;tt class="docutils literal"&gt;teste2&lt;/tt&gt; a partir da lista &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt;;&lt;/li&gt;
&lt;li&gt;execução [21]: aqui temos uma nova lista ordenada de forma diferente da &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt;;&lt;/li&gt;
&lt;li&gt;execução [22]: o id da lista &lt;tt class="docutils literal"&gt;teste&lt;/tt&gt; ainda permanece o mesmo;&lt;/li&gt;
&lt;li&gt;execução [23]: o id da lista &lt;tt class="docutils literal"&gt;teste2&lt;/tt&gt; é outro, pois ele é outro objeto;&lt;/li&gt;
&lt;li&gt;execução [24][25]: por fim vemos que os resultados das duas listas são diferentes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Entender o que é um método/função IN PLACE e como isso funciona no Python é muito importante para o aprendizado da linguagem e também evita o aparecimento de bugs :P.&lt;/p&gt;
&lt;p&gt;That's all folks&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="inplace"></category><category term="metodos"></category><category term="builtin"></category><category term="in-place"></category></entry><entry><title>Exercício: 03 - Blackjack parte 01 - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/exercicio-03-blackjack-parte-01-grupo-de-estudos-python.html" rel="alternate"></link><published>2016-03-22T20:49:00-03:00</published><updated>2016-03-22T20:49:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-03-22:/exercicio-03-blackjack-parte-01-grupo-de-estudos-python.html</id><summary type="html">&lt;p class="first last"&gt;Exercício para resolução passado no Grupo de Estudos Python&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Como exercício desta semana gostaria que vocês começassem a implementação de um jogo de Blackjack, também conhecido como 21 (aqui no Brasil).&lt;/p&gt;
&lt;p&gt;As regras do Blackjack que usaremos como base são essas da &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/Blackjack"&gt;Wikipédia&lt;/a&gt;. Também tem um joguinho pronto nos jogos da UOL que pode ser usado para entender melhor como é o jogo, &lt;a class="reference external" href="http://jogosonline.uol.com.br/blackjack_2654.html"&gt;clique aqui&lt;/a&gt; pra ver o jogo.&lt;/p&gt;
&lt;div class="section" id="recomendacoes"&gt;
&lt;h2&gt;Recomendações&lt;/h2&gt;
&lt;p&gt;Como o jogo é complexo vamos fazer algumas regras primeiro, e em outro momento escrevemos outras, até terminar o jogo todo, BABY STEPS (passos de bebê, pé ante pé, bem devagar porém com segurança).&lt;/p&gt;
&lt;p&gt;Lembre-se de usar a técnica de &lt;a class="reference external" href="https://pt.wikipedia.org/wiki/Test_Driven_Development"&gt;TDD&lt;/a&gt; para exercitar sua cabeça a pensar em testes, escreva sempre os testes primeiro para depois começar a programar algo realmente útil.&lt;/p&gt;
&lt;p&gt;Utilize o módulo &lt;tt class="docutils literal"&gt;doctest&lt;/tt&gt; do Python conforme mencionei na &lt;a class="reference external" href="https://www.youtube.com/watch?v=OLTUoD4jaGA"&gt;Aula 05&lt;/a&gt; para escrever seus testes de maneira básica.&lt;/p&gt;
&lt;p&gt;Ressalto aqui, o jogo não precisa estar pronto até o final! Escrevam testes para as funções mencionadas abaixo e as implemente. Nem precisa ter nada abaixo do &lt;tt class="docutils literal"&gt;if __name__ == &amp;quot;__main__&amp;quot;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-exercicio"&gt;
&lt;h2&gt;O exercício&lt;/h2&gt;
&lt;p&gt;Na &lt;a class="reference external" href="https://www.youtube.com/watch?v=OLTUoD4jaGA"&gt;aula 05&lt;/a&gt; nós já implementamos um baralho simples, conforme vemos o código abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;Doctest deck&lt;/span&gt;

&lt;span class="sd"&gt;&amp;gt;&amp;gt;&amp;gt; deck = create_deck()  # Test create_deck&lt;/span&gt;
&lt;span class="sd"&gt;&amp;gt;&amp;gt;&amp;gt; len(deck)&lt;/span&gt;
&lt;span class="sd"&gt;52&lt;/span&gt;
&lt;span class="sd"&gt;&amp;gt;&amp;gt;&amp;gt; ten_firsts = deck[0:10]  # Test shuffle&lt;/span&gt;
&lt;span class="sd"&gt;&amp;gt;&amp;gt;&amp;gt; shuffle(deck)&lt;/span&gt;
&lt;span class="sd"&gt;&amp;gt;&amp;gt;&amp;gt; deck[0:10] != ten_firsts&lt;/span&gt;
&lt;span class="sd"&gt;True&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_deck&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;This function create an deck with 52 cards&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Q&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;J&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s2"&gt;&amp;quot;K&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;suits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;♣&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;♦&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;♥&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;♠&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;deck&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;suit&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;suits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;deck&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{}{}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;suit&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;deck&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deck&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;This function shuffle one deck&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;deck&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deck&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;deck&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_deck&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deck&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deck&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;** Também serve de exercício dar uma olhada nessas funções acima e refatorá-las, sempre da pra melhorar!&lt;/p&gt;
&lt;p&gt;Como exercício implementem as funções abaixo:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;função &lt;tt class="docutils literal"&gt;hit&lt;/tt&gt;: Nesta função você comprará cartas e irá sempre remover uma carta do baralho original, pois no momento que você compra uma carta a mesma não poderá existir mais no mesmo baralho (pista: dê uma lida na documentação do módulo &lt;a class="reference external" href="https://docs.python.org/3/library/random.html"&gt;random&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;função &lt;tt class="docutils literal"&gt;show_hand&lt;/tt&gt;: Nesta função você deverá mostrar quantas cartas você já comprou e quais são elas;&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;função &lt;tt class="docutils literal"&gt;show_points&lt;/tt&gt;: Nesta função você deverá mostrar quantos pontos acumulados você tem com as cartas que você já comprou;&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Ás vale 1 ponto;&lt;/li&gt;
&lt;li&gt;Cartas de números valem a mesma quantidade do número;&lt;/li&gt;
&lt;li&gt;Cartas de figuras (K, J, Q) valem 10.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;função &lt;tt class="docutils literal"&gt;surrender&lt;/tt&gt;: Mostra os pontos que você conseguiu até agora e finaliza a execução do jogo.&lt;/li&gt;
&lt;li&gt;função &lt;tt class="docutils literal"&gt;show_money&lt;/tt&gt;: Mostrar seu saldo atual (em dinheiro), o saldo inicial deverá ser 2000 reais, que pode ser representado por uma variável simples que será lida como uma variável global ao longo de todo sistema;&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;função &lt;tt class="docutils literal"&gt;bet&lt;/tt&gt;: Esta é uma das funções mais complexas e legais do jogo, nela você deverá ver o seu saldo atual (em dinheiro) e comprar o número de fichas correspondentes com a aposta em dinheiro. Imagine assim:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Eu tenho 2000 reais iniciais;&lt;/li&gt;
&lt;li&gt;Eu posso comprar fichas de 1, 5, 25 e 100 reais;&lt;/li&gt;
&lt;li&gt;Eu posos comprar fichas (por enquanto) a hora que eu quiser e bem entender;&lt;/li&gt;
&lt;li&gt;Se meu dinheiro for menor do que o valor em fichas que eu quero comprar, eu não posso comprar.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Acho que por enquanto essas 5 funções serão suficientes para o divertimento garantido hehehe. E não se esqueça: ESCREVA OS TESTES PRIMEIRO, ANTES DE SAIR PROGRAMANDO IGUAL UM MALUCO!&lt;/p&gt;
&lt;p&gt;Senão...&lt;/p&gt;
&lt;img alt="TDD" src="images/exercicio-03-blackjack-parte-01-grupo-de-estudos-python.png" /&gt;
&lt;p&gt;** Sobre TDD aqui tem um texto muito bacana intitulado &lt;a class="reference external" href="http://tableless.com.br/tdd-por-que-usar/"&gt;TDD, por que usar?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Em caso de dúvidas estou aqui para lhes auxiliar no processo, não deixem de me perguntar caso fiquem perdidos em algum ponto.&lt;/p&gt;
&lt;p&gt;Gostaria MUITO que vocês terminassem este exercício até dia 28/03/2016 que vai ser a nossa próxima aula, sem fazer este exercício vocês não irão conseguir medir o quanto aprenderam até agora sobre Python.&lt;/p&gt;
&lt;p&gt;Vamos considerar que esse é o primeiro exercício IMPORTANTE que passei pra vocês pois com ele vocês terão a possibilidade de usar TODOS os conhecimentos vistos até agora: Tipos básicos, Dicionários, Listas, Estrutura condicional, Estruturas de repetição, Testes (com doctest) e Funções.&lt;/p&gt;
&lt;p&gt;Então... mãos a obra.&lt;/p&gt;
&lt;p&gt;That's all folks.&lt;/p&gt;
&lt;/div&gt;
</content><category term="exercício"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Resolução exercício: 02 - Média de alunos - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/resolucao-02-media-de-alunos-grupo-de-estudos-python.html" rel="alternate"></link><published>2016-03-16T21:56:00-03:00</published><updated>2016-03-16T21:56:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-03-16:/resolucao-02-media-de-alunos-grupo-de-estudos-python.html</id><summary type="html">&lt;p class="first last"&gt;Resolução do exercício média de alunos passado no Grupo de Estudos Python&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Dia 07/03 postei um exercício para resolução, fazer um cálculo de média ponderada de notas de alunos, o post contendo o enunciado pode ser &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/exercicio-02-media-de-alunos-grupo-de-estudos-python.html"&gt;visto aqui&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="o-codigo-lixo-que-eu-fiz-no-hangout"&gt;
&lt;h2&gt;O código lixo que eu fiz no Hangout&lt;/h2&gt;
&lt;p&gt;Lixo é um nome muito forte, vamos chamar de RUIM somente por favor. Quando brincamos de live coding as coisas todas são diferentes do seu mundo real, devido a pressão, ou alguma coisa que passa na sua cabeça.&lt;/p&gt;
&lt;p&gt;No live coding que fiz no Hangout tentei focar em muitas técnicas para manipulação de dicionários e listas, espero que isso tenha ficado claro no vídeo da &lt;a class="reference external" href="https://www.youtube.com/watch?v=kZbIeqcycPU"&gt;aula 04 disponível neste post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Então vamos ao código que mencionei:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;bimestre_final&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;

&lt;span class="n"&gt;notas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;aluno1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;aluno2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;notas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="n"&gt;alunos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Alexsandro&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Arieh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;bimestres&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{} Bim&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;numero&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="c1"&gt;# esse é o for sem a list comprehenssion ai de cima&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# bimestres = []&lt;/span&gt;
&lt;span class="c1"&gt;# for numero in range(1, 7):&lt;/span&gt;
&lt;span class="c1"&gt;#    bimestres.append(&amp;quot;{} Bim&amp;quot;.format(numero))&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="n"&gt;pesos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;1 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;2 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;3 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;4 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;5 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;6 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;aluno&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;alunos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Aluno: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;notas&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;bimestre&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;bimestres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite a nota do {}: &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bimestre&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nota&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;notas&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;bimestre&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nota&lt;/span&gt;

&lt;span class="c1"&gt;# (7*2 + 5*3 + 3*3 + 10*4 + 9*5 + 8*5) /&lt;/span&gt;
&lt;span class="c1"&gt;# (2 + 3 + 3 + 4 + 5 + 5) = 7.40&lt;/span&gt;
&lt;span class="n"&gt;numerador&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="n"&gt;denominador&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;aluno&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;alunos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;numerador&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;denominador&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;bimestre&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;notas&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;peso&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pesos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bimestre&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;numerador&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;peso&lt;/span&gt;
        &lt;span class="n"&gt;denominador&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;peso&lt;/span&gt;

&lt;span class="n"&gt;resultado_final&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;aluno&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;alunos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado_final&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numerador&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;denominador&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Nota maior que 9 teve menção A&lt;/span&gt;
&lt;span class="c1"&gt;# Nota maior que 7 e menor ou igual a 9 teve menção B&lt;/span&gt;
&lt;span class="c1"&gt;# Nota maior que 5 e menor ou igual a 7 teve menção C&lt;/span&gt;
&lt;span class="c1"&gt;# Nota menor que 5 teve menção D&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;nome&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;resultado_final&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota final {}: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nome&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nota&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota B&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota C&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos analisar os problemas deste código acima:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Tem muitos fors ai galera, isso vai ficar lento, bem lento mesmo;&lt;/li&gt;
&lt;li&gt;As exceptions não estão tratadas de forma legal, mas você poderá estudar mais sobre isso lendo &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/resolucao-01-calculadora-basica-grupo-de-estudos.html"&gt;este post&lt;/a&gt;, considere isso um exercício;&lt;/li&gt;
&lt;li&gt;O código não está pythônico, limpo e claro, tem muita coisa que faz muita coisa.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="refatorando-as-variaveis-e-dicionarios"&gt;
&lt;h2&gt;Refatorando as variáveis e dicionários&lt;/h2&gt;
&lt;p&gt;Começando do início:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;bimestre_final&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;

&lt;span class="n"&gt;notas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;aluno1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;aluno2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este dicionário de &lt;tt class="docutils literal"&gt;notas&lt;/tt&gt; não é muito necessário, pois quando eu recebo a nota do aluno eu já posso ir calculando durante a execução do primeiro for, isso é legal pois vai fazer com que a gente ganhe velocidade.&lt;/p&gt;
&lt;p&gt;A variável &lt;tt class="docutils literal"&gt;bimestre_final&lt;/tt&gt; é inútil também, pois como tenho uma lista com todos os bimestres abaixo deste trecho eu sei o número de bimestres que eu tenho a partir do dicionário intitulado como &lt;tt class="docutils literal"&gt;bimestres&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Só ai já eliminei duas coisas inúteis no script. Continuando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;bimestres&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{} Bim&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;numero&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O que acham deste &lt;a class="reference external" href="https://docs.python.org/3.5/tutorial/datastructures.html#list-comprehensions"&gt;list comprehenssion&lt;/a&gt;? Este cara está mais ou menos bacana. Existem outras formas mais simples de escrever este cara, justamente porque são somente 6 bimestres. Soluções aceitáveis:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Primeira forma: Mais legível&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;bimestres&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;1 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;2 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;3 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;4 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;5 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;6 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Segunda forma: Mais &amp;quot;chata&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;bimestres&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;numero&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;bimestres&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{} Bim&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Terceira forma: &amp;quot;Splitada&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;bimestres&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1-Bim 2-Bim 3-Bim 4-Bim 5-Bim 6-Bim&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Eu particularmente opto pela &lt;tt class="docutils literal"&gt;Primeira forma&lt;/tt&gt; ou pela &lt;tt class="docutils literal"&gt;Terceira forma&lt;/tt&gt; como estou optando por legibilidade e sem muita complexidade para este post vou escolher a primeira.&lt;/p&gt;
&lt;p&gt;A &lt;tt class="docutils literal"&gt;Terceira forma&lt;/tt&gt; achei legal mostrar, pois o bacana disso é que o &lt;a class="reference external" href="https://docs.python.org/3/library/stdtypes.html#str.split"&gt;split&lt;/a&gt; (que pode ser usado com strings) irá dividir a string onde tem os espaços, transformando assim essa string comprida em uma lista, que praticamente daria o mesmo resultado também (exceto pelo sinal do hífen).&lt;/p&gt;
&lt;p&gt;O caso do dicionário &lt;tt class="docutils literal"&gt;pesos&lt;/tt&gt; achei bacana, não vou mexer, mas aceito sugestões, se acharem uma solução mais legal me contem por favor.&lt;/p&gt;
&lt;p&gt;Depois dessa primeira refatorada, comecei a criar um novo script, que ficou com o começo deste jeito:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;alunos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Rafael1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Rafael2&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;bimestres&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;1 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;2 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;3 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;4 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;5 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;6 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;pesos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;1 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;2 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;3 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;4 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;5 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;6 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;numerador&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="n"&gt;denominador&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pesos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Eu particularmente achei bem mais bonito e claro de entender as coisas. Só tem uma coisa diferente ai, que a é função &lt;tt class="docutils literal"&gt;sum&lt;/tt&gt; que já é padrão do Python e faz soma de valores de um iterador, vamos ver como isso funciona:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python
&lt;span class="go"&gt;Python 3.5.1 (default, Feb 22 2016, 23:22:06)&lt;/span&gt;
&lt;span class="go"&gt;[GCC 4.9.2] on linux&lt;/span&gt;
&lt;span class="go"&gt;Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;pesos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="go"&gt;...         &amp;quot;1 Bim&amp;quot;: 2.0,&lt;/span&gt;
&lt;span class="go"&gt;...         &amp;quot;2 Bim&amp;quot;: 3.0,&lt;/span&gt;
&lt;span class="go"&gt;...         &amp;quot;3 Bim&amp;quot;: 3.0,&lt;/span&gt;
&lt;span class="go"&gt;...         &amp;quot;4 Bim&amp;quot;: 4.0,&lt;/span&gt;
&lt;span class="go"&gt;...         &amp;quot;5 Bim&amp;quot;: 5.0,&lt;/span&gt;
&lt;span class="go"&gt;...         &amp;quot;6 Bim&amp;quot;: 5.0,&lt;/span&gt;
&lt;span class="go"&gt;...     }&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; pesos.values&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="go"&gt;dict_values([5.0, 2.0, 4.0, 5.0, 3.0, 3.0])&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; type&lt;span class="o"&gt;(&lt;/span&gt;pesos.values&lt;span class="o"&gt;())&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;class &amp;#39;dict_values&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; sum&lt;span class="o"&gt;(&lt;/span&gt;pesos.values&lt;span class="o"&gt;())&lt;/span&gt;
&lt;span class="go"&gt;22.0&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;lista&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="m"&gt;2&lt;/span&gt;, &lt;span class="m"&gt;3&lt;/span&gt;, &lt;span class="m"&gt;4&lt;/span&gt;, &lt;span class="m"&gt;5&lt;/span&gt;, &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; sum&lt;span class="o"&gt;(&lt;/span&gt;lista&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;21&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; sum&lt;span class="o"&gt;(&lt;/span&gt;range&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;,100&lt;span class="o"&gt;))&lt;/span&gt;
&lt;span class="go"&gt;4950&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; pesos.keys&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="go"&gt;dict_keys([&amp;#39;5 Bim&amp;#39;, &amp;#39;1 Bim&amp;#39;, &amp;#39;4 Bim&amp;#39;, &amp;#39;6 Bim&amp;#39;, &amp;#39;3 Bim&amp;#39;, &amp;#39;2 Bim&amp;#39;])&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt;&amp;gt;&amp;gt; sum&lt;span class="o"&gt;(&lt;/span&gt;pesos.keys&lt;span class="o"&gt;())&lt;/span&gt;
&lt;span class="go"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;TypeError: unsupported operand type(s) for +: &amp;#39;int&amp;#39; and &amp;#39;str&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Olhe que curioso esse teste acima, quando uso &lt;tt class="docutils literal"&gt;pesos.values()&lt;/tt&gt; pego todos os valores do dicionário pesos em forma de iterável (assunto pra outra hora o que é um iterável), ai quando uso &lt;tt class="docutils literal"&gt;sum&lt;/tt&gt; somo todos esses valores e o resultado é 22.&lt;/p&gt;
&lt;p&gt;Consigo somar também listas, e também consigo somar um range de números gerados a partir da função &lt;tt class="docutils literal"&gt;range&lt;/tt&gt;. Porém quando tento somar strings (que são minhas keys do dicionário pesos) isso me retorna um erro dizendo que não consigo somar int e strings, essa soma não é possível. Espero que com esse exemplo tenha ficado claro o uso da função &lt;tt class="docutils literal"&gt;sum&lt;/tt&gt;. Mais informações na &lt;a class="reference external" href="https://docs.python.org/3/library/functions.html#sum"&gt;documentação do Python&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="refatorando-os-loops"&gt;
&lt;h2&gt;Refatorando os loops&lt;/h2&gt;
&lt;p&gt;Depois de organizar melhor as variáveis/dicionários e listas que vamos trabalhar fica mais fácil organizar os nossos loops, vamos ver como ficou o script completo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;alunos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Rafael1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;Rafael2&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;bimestres&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;1 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;2 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;3 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;4 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;5 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;6 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;pesos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;1 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;2 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;3 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;4 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;5 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;6 Bim&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;numerador&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="n"&gt;denominador&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pesos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;aluno&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;alunos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Aluno: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;numerador&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;bimestre&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;bimestres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite a nota do {}: &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bimestre&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nota&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;numerador&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;nota&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pesos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bimestre&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numerador&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;denominador&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota final {}: {:.2f}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aluno&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota B&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota C&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nota D&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Agora sim! Ficou um script clean, mais pythônico do que era antes. De 6 loops reduzi para 2 loops somente.&lt;/p&gt;
&lt;p&gt;A criação de um dicionário dinamicamente ainda é usada na linha &lt;tt class="docutils literal"&gt;numerador[aluno] = 0&lt;/tt&gt; porém de forma bem mais simples, somente é inicializado com 0 para poder ir somando as notas do aluno no numerador da nossa equação. Para entender como ficou a estrutura do nosso dicionário numerador veja o exemplo abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python media_alunos_dict.py
&lt;span class="go"&gt;Aluno:  Rafael1&lt;/span&gt;
&lt;span class="go"&gt;Digite a nota do 1 Bim: 7&lt;/span&gt;
&lt;span class="go"&gt;Digite a nota do 2 Bim: 5&lt;/span&gt;
&lt;span class="go"&gt;Digite a nota do 3 Bim: 3&lt;/span&gt;
&lt;span class="go"&gt;Digite a nota do 4 Bim: 10&lt;/span&gt;
&lt;span class="go"&gt;Digite a nota do 5 Bim: 9&lt;/span&gt;
&lt;span class="go"&gt;Digite a nota do 6 Bim: 8&lt;/span&gt;
&lt;span class="gp"&gt;&amp;gt;&lt;/span&gt; /home/rafael/Dropbox/Grupo de estudos Python/nivel_mediano/media_ponderada/media_alunos_dict.py&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;35&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&amp;lt;module&amp;gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="go"&gt;     34     import ipdb; ipdb.set_trace()&lt;/span&gt;
&lt;span class="go"&gt;---&amp;gt; 35     media = numerador[aluno] / denominador&lt;/span&gt;
&lt;span class="go"&gt;     36     print(&amp;quot;Nota final {}: {:.2f}&amp;quot;.format(aluno, media))&lt;/span&gt;

&lt;span class="go"&gt;ipdb&amp;gt; numerador&lt;/span&gt;
&lt;span class="go"&gt;{&amp;#39;Rafael1&amp;#39;: 163.0}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O numerador terá uma chave para cada nome de aluno contendo a soma total realizada. Neste exemplo foi realizado o seguinte cálculo no numerador do aluno &lt;tt class="docutils literal"&gt;Rafael1&lt;/tt&gt;: &lt;tt class="docutils literal"&gt;(7*2 + 5*3 + 3*3 + 10*4 + 9*5 + 8*5) = 163.0&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Quando continuo a execução do script temos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ipdb&amp;gt; numerador
{&amp;#39;Rafael1&amp;#39;: 163.0, &amp;#39;Rafael2&amp;#39;: 158.0}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Neste caso cálculo realizado para o aluno &lt;tt class="docutils literal"&gt;Rafael2&lt;/tt&gt; é: &lt;tt class="docutils literal"&gt;(5*2 + 4*3 + 6*3 + 7*4 + 8*5 + 10*5) = 158.0&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Espero que ao final dessa solução refatorada do live coding que rolou na &lt;a class="reference external" href="https://www.youtube.com/watch?v=kZbIeqcycPU"&gt;aula 04&lt;/a&gt;, você tenha entendido mais coisas sobre listas, dicionários e estruturas de repetição. Caso tenha alguma dúvida/sugestão/crítica comenta ai.&lt;/p&gt;
&lt;p&gt;That's all folks!&lt;/p&gt;
&lt;/div&gt;
</content><category term="exercício"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category><category term="estruturas de repetição"></category><category term="for"></category><category term="lista"></category><category term="dicionários"></category></entry><entry><title>Resolução exercício: 01 - Calculadora básica - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/resolucao-01-calculadora-basica-grupo-de-estudos.html" rel="alternate"></link><published>2016-03-16T20:54:00-03:00</published><updated>2016-03-16T20:54:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-03-16:/resolucao-01-calculadora-basica-grupo-de-estudos.html</id><summary type="html">&lt;p class="first last"&gt;Resolução do exercício calculadora básica usando um pouco de tratamento de exceções&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Dia 29/02 postei um exercício para resolução, uma calculadora básica, o post contendo o enunciado pode ser &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/exercicio-01-calculadora-basica-grupo-de-estudos-python.html"&gt;visto aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Resolução simples do exercício:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;primeiro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite o primeiro número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;segundo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite o segundo número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite a operação: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;primeiro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;segundo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;primeiro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;segundo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;primeiro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;segundo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;primeiro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;segundo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Operação não existente!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Resultado: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se executarmos este exercício passo a passo poderemos ver alguns problemas e curiosidades a respeito dele que podem ser aprimorados em relação ao código simples que escrevi acima. Problemas encontrados:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Se o usuário digitar uma letra isso irá causar uma exceção do tipo ValueError onde o Python informará que é impossível converter uma string em float;&lt;/li&gt;
&lt;li&gt;A divisão por 0 também causará uma exceção, mas desta vez do tipo ZeroDivisionError.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Vamos visualizar estes erros na prática:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python calculadora.py
&lt;span class="go"&gt;Qual operação deseja fazer? ( * / - +)&lt;/span&gt;
&lt;span class="go"&gt;*&lt;/span&gt;
&lt;span class="go"&gt;Digite operando1:&lt;/span&gt;
&lt;span class="go"&gt;a&lt;/span&gt;
&lt;span class="go"&gt;Digite operando2:&lt;/span&gt;
&lt;span class="go"&gt;a&lt;/span&gt;
&lt;span class="go"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;calculadora00.py&amp;quot;, line 16, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;    resultado = float(operando1) * float(operando2)&lt;/span&gt;
&lt;span class="go"&gt;ValueError: could not convert string to float: &amp;#39;a&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python calculadora.py
&lt;span class="go"&gt;Qual operação deseja fazer? ( * / - +)&lt;/span&gt;
&lt;span class="go"&gt;/&lt;/span&gt;
&lt;span class="go"&gt;Digite operando1:&lt;/span&gt;
&lt;span class="go"&gt;1&lt;/span&gt;
&lt;span class="go"&gt;Digite operando2:&lt;/span&gt;
&lt;span class="go"&gt;0&lt;/span&gt;
&lt;span class="go"&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class="go"&gt;  File &amp;quot;calculadora00.py&amp;quot;, line 18, in &amp;lt;module&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;    resultado = float(operando1) / float(operando2)&lt;/span&gt;
&lt;span class="go"&gt;ZeroDivisionError: float division by zero&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como tratar estes erros de forma bem simples? Basta fazer algumas modificações, vejamos esta resolução que utiliza try / except:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Qual operação deseja fazer? ( * / - +)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite operando1:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;operando2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite operando2:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite somente números nos operandos 1 e 2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;operando2&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;operando2&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;operando2&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;operando2&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ZeroDivisionError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Operação inválida: Divisão por 0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Operação não existente!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Resultado: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Neste código foram acrescentadas as estruturas try / except, focando especificamente nas exceptions ValueError e ZeroDivisionError.&lt;/p&gt;
&lt;p&gt;Todo código entre o bloco try ao levantar uma exceção esta será verificada na chamada except, caso ela tenha o mesmo nome da exceção levantada o bloco except correspondente será executado.&lt;/p&gt;
&lt;p&gt;Acrescentei também a este código o import do módulo &lt;tt class="docutils literal"&gt;sys&lt;/tt&gt; para usar o método &lt;tt class="docutils literal"&gt;sys.exit(1)&lt;/tt&gt; que finaliza o script com um retorno de erro (1).&lt;/p&gt;
&lt;p&gt;No Python temos uma infinidade de exceções para tratamento dos mais variados erros, porém esses dias &amp;quot;passeando&amp;quot; pelo Twitter encontrei uma imagem bem interessante que desenha um fluxograma explicando as principais exceptions que acontecem no Python (enquanto você está programando, geralmente), veja a imagem:&lt;/p&gt;
&lt;img alt="exceções comuns do Python" src="images/resolucao-01-calculadora-basica-grupo-de-estudos/01.png" /&gt;
&lt;p&gt;Esta imagem da uma noção bem bacana de como analisar erros comuns no Python. Abaixo deixo outra versão do código que também funcionaria tranquilamente, mas desta vez verificando se o operando 2 é um número 0:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Qual operação deseja fazer? ( * / - +)&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite operando1:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;operando2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite operando2:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite somente números nos operandos 1 e 2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;operando2&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;operando2&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;operando2&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;operando2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Operação inválida: Divisão por 0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;resultado&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operando1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;operando2&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Operação não existente!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Resultado: {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultado&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Informação impotantíssima: Todo erro se torna um problema desde que não seja tratado adequadamente, então, sempre tenha em mente quando usar try / except em seu código.&lt;/p&gt;
&lt;p&gt;E ai gostaram? Deixem suas críticas/sugestões e dúvidas abaixo do post e lembre-se que nenhuma dúvida é ruim, o ruim é você permanecer com ela.&lt;/p&gt;
&lt;p&gt;That's all folks!&lt;/p&gt;
&lt;/div&gt;
</content><category term="exercício"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category><category term="try"></category><category term="except"></category><category term="tratamento de exceções"></category></entry><entry><title>Exercício: 02 - Média de alunos - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/exercicio-02-media-de-alunos-grupo-de-estudos-python.html" rel="alternate"></link><published>2016-03-07T23:43:00-03:00</published><updated>2016-03-07T23:43:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-03-07:/exercicio-02-media-de-alunos-grupo-de-estudos-python.html</id><summary type="html">&lt;p class="first last"&gt;Exercício para resolução passado no Grupo de Estudos Python&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Receba a nota (de 0 a 10) de 6 bimestres de 2 alunos, realize uma média ponderada de notas para cada aluno, sabendo que cada bimestre tem pesos diferentes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Primeiro bimestre: peso 2&lt;/li&gt;
&lt;li&gt;Segundo bimestre: peso 3&lt;/li&gt;
&lt;li&gt;Terceiro bimestre: peso 3&lt;/li&gt;
&lt;li&gt;Quarto bimestre: peso 4&lt;/li&gt;
&lt;li&gt;Quinto bimestre: peso 5&lt;/li&gt;
&lt;li&gt;Sexto bimestre: peso 5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Exemplo de cálculo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Aluno 1 tirou as notas: 7, 5, 3, 10, 9 e 8&lt;/li&gt;
&lt;li&gt;(7*2 + 5*3 + 3*3 + 10*4 + 9*5 + 8*5) / (2 + 3 + 3 + 4 + 5 + 5) = 7.40&lt;/li&gt;
&lt;li&gt;Aluno 1 tirou a nota B&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feito o cálculo exiba a nota nos intervalos abaixo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Nota maior que 9 teve menção A&lt;/li&gt;
&lt;li&gt;Nota maior que 7 e menor ou igual a 9 teve menção B&lt;/li&gt;
&lt;li&gt;Nota maior que 5 e menor ou igual a 7 teve menção C&lt;/li&gt;
&lt;li&gt;Nota menor que 5 teve menção D&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para facilitar a resolução pense em dicionários, listas, tuplas e estruturas de repetição (for e while).&lt;/p&gt;
&lt;p&gt;Semana que vem posto a resolução (todas as resoluções que conseguirmos).&lt;/p&gt;
</content><category term="exercício"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Você conhece o Grupy-SP ??</title><link href="http://blog.abraseucodigo.com.br/voce-conhece-o-grupy-sp.html" rel="alternate"></link><published>2016-03-01T19:45:00-03:00</published><updated>2016-03-01T19:45:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-03-01:/voce-conhece-o-grupy-sp.html</id><summary type="html">&lt;p class="first last"&gt;Explicando um brevemente o funcionamento do Grupy-SP.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;O Grupy-SP é um Grupo de Python que se reune em São Paulo (capital e interior também) mensalmente (geralmente) para unir as pessoas da comunidade Python, mas não só de Python, pois essa galera é bem receptiva.&lt;/p&gt;
&lt;div class="section" id="como-sei-quando-acontecera-um-encontros"&gt;
&lt;h2&gt;Como sei quando acontecerá um encontros?&lt;/h2&gt;
&lt;p&gt;Você precisará se cadastrar no &lt;a class="reference external" href="http://www.meetup.com/pt-BR/Grupy-SP/"&gt;Meetup do Grupy-SP&lt;/a&gt; para receber mais novidades sobre os encontros, eles geralmente são mensais porém não tem data definida.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="onde-acontecem-os-encontros"&gt;
&lt;h2&gt;Onde acontecem os encontros?&lt;/h2&gt;
&lt;p&gt;Podemos chamar o Grupy-SP de um evento &amp;quot;itinerante&amp;quot; pois precisamos de um lugar e precisamos de um coordenador, quando acontece a junção destes dois elementos acontece um encontro!&lt;/p&gt;
&lt;p&gt;O Grupy-SP nunca é no mesmo lugar, o grupo precisa de colaboradores e de lugares para acontecer, você conhece um lugar bacana? Quer nos ajudar? Divulgue isso para nós, quem sabe você não poderá sediar um encontro na sua cidade!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quem-pode-participar-do-grupy-sp"&gt;
&lt;h2&gt;Quem pode participar do Grupy-SP?&lt;/h2&gt;
&lt;p&gt;Todas as pessoas podem participar do Grupy-SP.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-o-nivel-das-palestras-participantes"&gt;
&lt;h2&gt;Qual o nível das palestras/participantes?&lt;/h2&gt;
&lt;p&gt;As palestras e participantes são desde quem está começando no mundo Python até quem é &lt;a class="reference external" href="https://twitter.com/ramalhoorg"&gt;Luciano Ramalho&lt;/a&gt; (brincadeira hehehe).... mais experiente no mundo Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quanto-paga-para-participar-do-grupy-sp"&gt;
&lt;h2&gt;Quanto paga para participar do Grupy-SP?&lt;/h2&gt;
&lt;p&gt;Não paga nada! Até hoje nunca foi cobrado nem um centavo de ninguém.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qual-a-dinamica-dos-encontros"&gt;
&lt;h2&gt;Qual a dinâmica dos encontros?&lt;/h2&gt;
&lt;p&gt;Geralmente sempre tem um espaço para a galera bater papo (o que eu acho sensacional) e também tem palestras voluntárias e lightining talks (palestras menores de 5 a 15min). Quando existem doações ou patrocínio também tem coffe-breaks.... você trabalha com coffe-breaks e quer ajudar? Divulgue isso para a galera, também seria bacana!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quando-e-o-proximo-encontro"&gt;
&lt;h2&gt;Quando é o próximo encontro?&lt;/h2&gt;
&lt;p&gt;O ideal é sempre ficar de olho no &lt;a class="reference external" href="http://www.meetup.com/pt-BR/Grupy-SP/"&gt;Meetup do Grupy-SP&lt;/a&gt; o próximo encontro agora é dia 12/03/2016 e acontecerá na USP Leste em SP.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="onde-consigo-o-material-das-palestras-anteriores"&gt;
&lt;h2&gt;Onde consigo o material das palestras anteriores?&lt;/h2&gt;
&lt;p&gt;O Grupy-SP tem um repositório no &lt;a class="reference external" href="https://github.com/grupy-sp/"&gt;Github&lt;/a&gt; onde tem um material bem bacana. Se quiser ir direto verificar o material de encontros anteriores &lt;a class="reference external" href="https://github.com/grupy-sp/encontros"&gt;clique aqui&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-entrar-em-contato-com-os-membros-do-grupy-sp"&gt;
&lt;h2&gt;Como entrar em contato com os membros do Grupy-SP?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Github - &lt;a class="reference external" href="https://github.com/grupy-sp/encontros"&gt;https://github.com/grupy-sp/encontros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Facebook - &lt;a class="reference external" href="https://www.facebook.com/grupysp"&gt;https://www.facebook.com/grupysp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter - &lt;a class="reference external" href="https://twitter.com/grupysp"&gt;https://twitter.com/grupysp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slack - &lt;a class="reference external" href="https://grupysp.herokuapp.com"&gt;https://grupysp.herokuapp.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Meetup - &lt;a class="reference external" href="http://www.meetup.com/pt/Grupy-SP/"&gt;http://www.meetup.com/pt/Grupy-SP/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google Groups - &lt;a class="reference external" href="https://groups.google.com/forum/#!forum/grupy-sp"&gt;https://groups.google.com/forum/#!forum/grupy-sp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Site - &lt;a class="reference external" href="http://grupy-sp.github.io/"&gt;http://grupy-sp.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="concluindo"&gt;
&lt;h2&gt;Concluindo&lt;/h2&gt;
&lt;p&gt;Eu já palestrei diversas vezes no Grupy-SP e pretendo continuar palestrando, como não tenho um espaço fácil para sediar o evento minha forma de contribuição é palestrando, se vocês se interessarem, abaixo deixo o link das palestras que fiz no Grupy-SP:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://speakerdeck.com/rafaelhenrique/nao-trabalho-com-python-como-posso-aprender"&gt;Não trabalho com Python, como posso aprender?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://speakerdeck.com/rafaelhenrique/mongodb-crud-create-read-update-e-delete-com-pymongo"&gt;MongoDB CRUD (Create, Read, Update e Delete) com Pymongo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=bd3T8ORvWXY"&gt;Vídeo: MongoDB CRUD (Create, Read, Update e Delete) com Pymongo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://speakerdeck.com/rafaelhenrique/raspagem-de-dados-com-scrapy"&gt;Raspagem de dados com Scrapy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all folks!&lt;/p&gt;
&lt;/div&gt;
</content><category term="grupy-sp"></category><category term="python"></category><category term="grupo de python"></category><category term="são paulo"></category></entry><entry><title>Exercício: 01 - Calculadora básica - Grupo de Estudos Python</title><link href="http://blog.abraseucodigo.com.br/exercicio-01-calculadora-basica-grupo-de-estudos-python.html" rel="alternate"></link><published>2016-02-29T23:43:00-03:00</published><updated>2016-02-29T23:43:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-29:/exercicio-01-calculadora-basica-grupo-de-estudos-python.html</id><summary type="html">&lt;p class="first last"&gt;Exercício para resolução passado no Grupo de Estudos Python&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Baseado no script abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;primeiro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite o primeiro número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;segundo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite o segundo número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite a operação: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;operacao&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;primeiro&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;primeiro&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;segundo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;segundo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Resultado: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;primeiro&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;segundo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Você digitou a operação errada! Digite: + - / *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos terminar a calculadora básica (com as 4 operações pelo menos) em Python?
Se precisar de ajuda para resolver o exercício me contate ou assista o vídeo (que está upando neste momento) da aula 02 do Grupo de Estudos Python.&lt;/p&gt;
&lt;p&gt;Se você quiser estudar um pouquinho mais e não somente resolver o exercício você poderá acrescentar novas funcionalidades a nossa calculadora, tais como: fazer exponenciação, calcular seno, calcular coseno ... etc&lt;/p&gt;
&lt;p&gt;Para facilitar seu divertimento use a biblioteca &lt;a class="reference external" href="https://docs.python.org/3.5/library/math.html"&gt;math&lt;/a&gt; padrão do Python.&lt;/p&gt;
&lt;p&gt;Você poderá ver a &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/resolucao-01-calculadora-basica-grupo-de-estudos.html"&gt;resolução aqui&lt;/a&gt;.&lt;/p&gt;
</content><category term="exercício"></category><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Instalando qualquer versão do Python no Linux/Mac OSX utilizando pyenv</title><link href="http://blog.abraseucodigo.com.br/instalando-qualquer-versao-do-python-no-linux-macosx-utilizando-pyenv.html" rel="alternate"></link><published>2016-02-24T21:21:00-03:00</published><updated>2016-02-24T21:21:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-24:/instalando-qualquer-versao-do-python-no-linux-macosx-utilizando-pyenv.html</id><summary type="html">&lt;p class="first last"&gt;Muitos tem a dúvida de como instalar Python no Linux e Mac OSX, hoje vou postar aqui um passo a passo bem básico pra que você consiga instalar Python 3.5 (e qualquer outra) no Linux e com poucas modificações também no Mac OSX&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Muitos tem a dúvida de como instalar Python no Linux e Mac OSX, hoje vou postar aqui um passo a passo bem básico pra que você consiga instalar Python 3.5 (e qualquer outra) no Linux e com poucas modificações também no Mac OSX.&lt;/p&gt;
&lt;p&gt;Não abordarei especificamente o passo a passo para realizar a instalação no Mac OSX, pois no atual momento não disponho de um computador com tal Sistema operacional em mãos. Porém já ajudei alguns amigos a realizar o procedimento mostrado neste post também no Mac OSX, e sem muitas dores extras conseguimos realizar estes mesmos procedimentos no Mac OSX.&lt;/p&gt;
&lt;p&gt;Vou usar como Linux base a distribuição Debian (a qual gosto muito) na versão Jessie 8.3.0. Estou especificando a versão do Debian e a versão do Python (estável) pois como ambos evoluem com o tempo (e muito rapidamente) então creio eu que logo esse post irá ficar velho.&lt;/p&gt;
&lt;div class="section" id="baixar-instalar-e-compilar"&gt;
&lt;h2&gt;Baixar, instalar e compilar?&lt;/h2&gt;
&lt;p&gt;Para os usuários mais &amp;quot;roots&amp;quot; do sistema operacional Linux a primeira coisa que vem em mente é &lt;tt class="docutils literal"&gt;&amp;quot;vou baixar o tar.gz, descompactar, configurar e compilar e o negócio vai sair funcionando lindamente&amp;quot;&lt;/tt&gt;, e realmente este processo funciona. Porém somos programadores, e programadores pensam em fazer a coisa da forma mais fácil possível e mais durável possível.&lt;/p&gt;
&lt;p&gt;Agora imagina se você pudesse instalar diversas versões do Python digitando apenas um comando e que ainda você pudesse trocar de versão facilmente entre todas as instaladas no seu computador.... pensou?&lt;/p&gt;
&lt;p&gt;Pois é os caras que criaram o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; também!&lt;/p&gt;
&lt;p&gt;Porém não confunda, &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; é uma coisa e &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; é outra. Abordei o assunto &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; em outro post, para &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/virtualenv-pip-pra-que-servem.html"&gt;entender melhor sobre o virtualenv clique aqui&lt;/a&gt; .&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-que-e-o-pyenv"&gt;
&lt;h2&gt;O que é o pyenv?&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Pyenv&lt;/tt&gt; é um projeto muito legal que faz com que você consiga ter várias versões do Python na sua máquina e que eles coexistam em paz. Também torna mais fácil (absurdamente fácil) a instalação de QUALQUER distribuição do Python, inclusive as mais &amp;quot;exóticas&amp;quot; como o Anaconda, Miniconda, IronPython, Jython e o Pypy. Dentre estas versões possíveis também é possível instalar o Python 3.5.1 muito facilmente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalando-pyenv"&gt;
&lt;h2&gt;Instalando pyenv&lt;/h2&gt;
&lt;p&gt;Se você usa Mac OSX pode começar com este link:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv#homebrew-on-mac-os-x"&gt;Homebrew on Mac OS X&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Se você usa Linux você vai começar instalando as dependências de um script que facilita a instalação do &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; pra você. Este script depende de dois comandos &lt;tt class="docutils literal"&gt;git&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;curl&lt;/tt&gt;, caso você não os tenha instalados, execute o comando abaixo (este comando você precisa executar como root ou com sudo):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get install curl git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Feito isso vamos prosseguir com instalação usando um script automatizado que a galera do &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; fez. Execute como usuário normal (não root e sem sudo) o seguinte script abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ao terminar a execução deste script uma saída assim será exibida:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;WARNING: seems you still have not added &amp;#39;pyenv&amp;#39; to the load path.

# Load pyenv automatically by adding
# the following to ~/.bash_profile:

export PATH=&amp;quot;/home/rafael/.pyenv/bin:$PATH&amp;quot;
eval &amp;quot;$(pyenv init -)&amp;quot;
eval &amp;quot;$(pyenv virtualenv-init -)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obviamente que o caminho dentro da sua variável PATH estará diferente do meu, pois o meu usuário se chama &lt;tt class="docutils literal"&gt;rafael&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Basicamente ao final da instalação conforme mostrado acima o &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pyenv-installer&lt;/span&gt;&lt;/tt&gt; manda você adicionar as linhas que ele te mostra no seu arquivo &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bash_profile&lt;/span&gt;&lt;/tt&gt;, eu sinceramente não gosto de adicionar essas coisas no &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bash_profile&lt;/span&gt;&lt;/tt&gt; ao invés disso eu sempre adiciono ao &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Então vamos fazer isso, abra seu arquivo &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt; com seu editor favorito e adicione essas linhas no final do arquivo, conforme mostrado nesta imagem abaixo:&lt;/p&gt;
&lt;img alt=".bashrc" src="images/instalando-qualquer-versao-do-python-no-linux-macosx-utilizando-pyenv/01.png" /&gt;
&lt;p&gt;Fiz um comentário (linha em azul) apenas para informar que esta é a configuração do &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; e manter as coisas organizadas. Feita esta configuração basta executar (como usuário normal não root nem sudo) o comando abaixo, para que seu ambiente seja &amp;quot;populado&amp;quot; com as novas variáveis da configuração que você fez:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ source ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta forma você poderá chamar o comando &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; no seu terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv
pyenv 20160202-10-ga6f1f48
Usage: pyenv &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]

Some useful pyenv commands are:
   commands    List all available pyenv commands
   local       Set or show the local application-specific Python version
   global      Set or show the global Python version
   shell       Set or show the shell-specific Python version
   install     Install a Python version using python-build
   uninstall   Uninstall a specific Python version
   rehash      Rehash pyenv shims (run this after installing executables)
   version     Show the current Python version and its origin
   versions    List all Python versions available to pyenv
   which       Display the full path to an executable
   whence      List all Python versions that contain the given executable

See `pyenv help &amp;lt;command&amp;gt;&amp;#39; for information on a specific command.
For full documentation, see: https://github.com/yyuu/pyenv#readme
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;De cara você vai ter um help bem bacana para entender os comandos. Se quando você executou &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; a saída mostrada foi parecida, sua instalação correu perfeitamente bem! Caso tenha sido diferente e precisar de alguma ajuda, pode comentar abaixo do post ou me chamar am alguns dos contatos ao lado esquerdo do blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="verificando-as-versoes-disponiveis-para-instalacao"&gt;
&lt;h2&gt;Verificando as versões disponíveis para instalação&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv install -l
Available versions:
  .... linhas omitidas ....

  3.0.1
  3.1
  3.1.1
  3.1.2
  3.1.3
  3.1.4
  3.1.5
  3.2-dev
  3.2
  3.2.1
  3.2.2
  3.2.3
  3.2.4
  3.2.5
  3.2.6
  3.3.0
  3.3-dev
  3.3.1
  3.3.2
  3.3.3
  3.3.4
  3.3.5
  3.3.6
  3.4.0
  3.4-dev
  3.4.1
  3.4.2
  3.4.3
  3.4.4
  3.5.0
  3.5-dev
  3.5.1
  3.6-dev

  .... linhas omitidas ....
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Omiti algumas linhas para que a saída não ficasse tão grande, pois realmente são muitas as versões.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalando-o-python-3-5-1"&gt;
&lt;h2&gt;Instalando o Python 3.5.1&lt;/h2&gt;
&lt;p&gt;No Debian (Ubuntu também usa os mesmos pacotes) você precisará instalar algumas dependências para que o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; compile o Python para você, como root ou usando sudo execute o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Caso você esteja usando outro sistema operacional que não seja o Debian, você poderá consultar as dependências que precisará instalar neste link:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv/wiki/Common-build-problems"&gt;https://github.com/yyuu/pyenv/wiki/Common-build-problems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Depois de instalar as dependências necessárias, execute (como usuário normal sem root e sem sudo) o comando para instalação do Python 3.5.1 conforme mostrado abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv install 3.5.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A saída será similar a esta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Downloading Python-3.5.1.tgz...
-&amp;gt; https://www.python.org/ftp/python/3.5.1/Python-3.5.1.tgz
Installing Python-3.5.1...
Installed Python-3.5.1 to /home/rafael/.pyenv/versions/3.5.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Se a sua saída foi similar a esta o Python 3.5.1 foi instalado com sucesso! Caso tenha sido diferente e precisar de alguma ajuda, pode comentar abaixo do post ou me chamar am alguns dos contatos ao lado esquerdo do blog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-usar-o-s-python-s-instalado-s"&gt;
&lt;h2&gt;Como usar o(s) Python(s) instalado(s)?&lt;/h2&gt;
&lt;p&gt;Todo sistema Linux/Mac OSX geralmente já vem com alguma versão do Python instalada (2.6, 2.7, 3 ou 3.4 geralmente), o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; vai isolar a versão do Python do sistema operacional caso você precise dele posteriormente você conseguirá usá-lo sem problemas.&lt;/p&gt;
&lt;p&gt;Para ver as versões disponíveis para uso execute o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv versions
* system (set by /home/rafael/.pyenv/version)
  3.5.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No caso agora no meu sistema eu tenho a versão &lt;tt class="docutils literal"&gt;system&lt;/tt&gt; que é a que estava instalada anteriormente com meu sistema operacional e também a versão 3.5.1. O símbolo &lt;tt class="docutils literal"&gt;*&lt;/tt&gt; especifica qual a versão você está utilizando neste momento.&lt;/p&gt;
&lt;p&gt;Você poderá mudar a versão utilizada usando o parâmetro &lt;tt class="docutils literal"&gt;global&lt;/tt&gt; do &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; desta maneira:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv global 3.5.1
$ pyenv versions
  system
* 3.5.1 (set by /home/rafael/.pyenv/version)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Observe que ao executar &lt;tt class="docutils literal"&gt;pyenv versions&lt;/tt&gt; novamente ele mostrou que a versão a ser utilizada agora é 3.5.1, vamos executar o interpretador Python para ver se tudo correu bem:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python
Python 3.5.1 (default, Feb 24 2016, 21:38:32)
[GCC 4.9.2] on linux
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perfeitamente bem! Agora vamos mudar para a versão &lt;tt class="docutils literal"&gt;system&lt;/tt&gt; e chamar o interpretador novamente para ver o que acontece:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyenv global system
$ pyenv versions
* system (set by /home/rafael/.pyenv/version)
  3.5.1
$ python
$ python
Python 2.7.9 (default, Mar  1 2015, 12:57:24)
[GCC 4.9.2] on linux2
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Funcionou perfeitamente bem novamente!&lt;/p&gt;
&lt;p&gt;Então agora você possui um &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; funcional juntamente com uma versão 3.5.1 do Python já instalada e apto a instalar qualquer outra disponível!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="voce-e-um-cara-preocupado-eu-tambem"&gt;
&lt;h2&gt;Você é um cara preocupado? Eu também...&lt;/h2&gt;
&lt;p&gt;Outra coisa que você não precisa se preocupar é que o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; instala e faz modificações no seu sistema a nível de usuário, ou seja, nada do que você faça com ele vai desgraçar seu sistema operacional inteiro, no máximo vai dar uma zuada na configuração do Python do seu usuário somente, em casos extremos você poderá desinstalar o &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; de forma fácil simplesmente apagando a pasta dele que fica em sua home:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ rm -fr ~/.pyenv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;E posteriormente remover as configurações de variáveis que colocamos no &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.bashrc&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;pyenv&lt;/tt&gt; facilita muito as coisas pra nós, com ele podemos testar distribuições do Python das quais nunca ouvimos falar antes, sem o mínimo esforço para instalar e também para desinstalar (utilizando o parâmetro &lt;tt class="docutils literal"&gt;uninstall&lt;/tt&gt; do pyenv). Espero que tenham gostado do post! Deixem seus comentários!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referências&lt;/h2&gt;
&lt;p&gt;Links (ambos com documentações em seus próprios repositórios):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv"&gt;Repositório oficial do pyenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv-installer"&gt;Repositório oficial do pyenv-installer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/yyuu/pyenv/wiki/Common-build-problems"&gt;Problemas que você pode vir a encarar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="linux"></category><category term="instalar python"></category><category term="pyenv"></category></entry><entry><title>Python uma linguagem de tipagem dinâmica e forte</title><link href="http://blog.abraseucodigo.com.br/python-uma-linguagem-de-tipagem-dinamica-e-forte.html" rel="alternate"></link><published>2016-02-23T22:43:00-03:00</published><updated>2016-02-23T22:43:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-23:/python-uma-linguagem-de-tipagem-dinamica-e-forte.html</id><summary type="html">&lt;p class="first last"&gt;O que significa tipagem dinâmica? E tipagem forte?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Todos que começam a estudar Python lêem que &amp;quot;Python é uma linguagem de tipagem dinâmica e forte&amp;quot; mas o que isso significa?&lt;/p&gt;
&lt;div class="section" id="tipagem-dinamica"&gt;
&lt;h2&gt;Tipagem dinâmica&lt;/h2&gt;
&lt;p&gt;Assim como Python hoje existem inúmeras linguagens no mercado que são dinamicamente tipadas.&lt;/p&gt;
&lt;p&gt;Referenciando especificamente o Python para explicar a questão: Tipagem dinâmica significa que o próprio interpretador do Python infere o tipo dos dados que uma variável recebe, sem a necessidade que você, o usuário da linguagem diga de que tipo determinada variável é. Exemplo de um script Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O resultado é: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos melhorar esta explicação com um exemplo de tipagem estática, a linguagem C. A linguagem C é estaticamente tipada, isso significa que deveremos sempre determinar qual o tipo de dados uma variável irá receber, exemplo de um programa em C:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O resultado é: &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ambos os programas acima fazem a mesma coisa, somam 10 e 20 e mostram um resultado na tela, a diferença é que em C os tipos são estáticos então é necessário que o programador diga quais os tipos que &lt;tt class="docutils literal"&gt;i&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;j&lt;/tt&gt; receberão como valores aceitáveis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tipagem-forte"&gt;
&lt;h2&gt;Tipagem forte&lt;/h2&gt;
&lt;p&gt;Assim como Python hoje existem inúmeras linguagens no mercado que são fortemente tipadas.&lt;/p&gt;
&lt;p&gt;Referenciando especificamente o Python para explicar a questão: Tipagem forte significa que o interpretador do Python avalia as expressões (evaluate) e não faz coerções automáticas entre tipos não compatíveis (conversões de valores), ou seja:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Rafael&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O resultado é: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Neste código acima definimos &lt;tt class="docutils literal"&gt;i&lt;/tt&gt; como &lt;tt class="docutils literal"&gt;10&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;j&lt;/tt&gt; como &lt;tt class="docutils literal"&gt;&amp;quot;Rafael&amp;quot;&lt;/tt&gt;, desta forma temos um inteiro em &lt;tt class="docutils literal"&gt;i&lt;/tt&gt; e uma string em &lt;tt class="docutils literal"&gt;j&lt;/tt&gt;, ao executar este código veja o que acontece:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python3 teste.py
10
Rafael
Traceback (most recent call last):
  File &amp;quot;teste&amp;quot;, line 4, in &amp;lt;module&amp;gt;
    print(&amp;quot;O resultado é: &amp;quot;, i + j)
TypeError: unsupported operand type(s) for +: &amp;#39;int&amp;#39; and &amp;#39;str&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Recebo uma exception chamada &lt;tt class="docutils literal"&gt;TypeError&lt;/tt&gt; ou seja, ao fazer operações com tipos incompatíveis, o Python não converte automaticamente esses tipos pra você, ele vai dar erro! Isso é bom, pois assim você terá a certeza que o seu resultado é mais consistente.&lt;/p&gt;
&lt;p&gt;Agora assim como temos linguagens com tipagem forte, temos também linguagens com tipagem fraca como por exemplo Javascript, vejamos o código Javascript a seguir:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Rafael&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Executando o código anterior obteríamos o resultado &lt;tt class="docutils literal"&gt;10Rafael&lt;/tt&gt;. Isso prova que o Javascript diferente do Python converte (faz coerção de tipos) ao executar operações de forma automática, isso faz com que seja uma linguagem de tipagem fraca.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Espero que tenha ficado claro para você como é essa questão da tipagem do Python. Em caso de dúvidas/sugestão não deixe de fazer seu comentário abaixo do post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referências&lt;/h2&gt;
&lt;p&gt;Livro: Python para desenvolvedores 2.a edição.
Autor: Luiz Eduardo Borges
Distribuição gratuita no &lt;a class="reference external" href="http://ark4n.wordpress.com/python/"&gt;site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Também tem um &lt;a class="reference external" href="https://www.destroyallsoftware.com/talks/wat"&gt;vídeo&lt;/a&gt; muito interessante (e bem curtinho) que mostra mais coisas a respeito de como outras linguagens tratam alguns casos bem bizarros (alguns envolvendo tipagem fraca/forte estática/dinâmica).&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="tipagem dinâmica"></category><category term="tipagem forte"></category></entry><entry><title>Segunda chamada para o curso introdutório de Python</title><link href="http://blog.abraseucodigo.com.br/segunda-chamada-para-o-curso-introdutorio-de-python.html" rel="alternate"></link><published>2016-02-20T22:25:00-02:00</published><updated>2016-02-20T22:25:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-20:/segunda-chamada-para-o-curso-introdutorio-de-python.html</id><summary type="html">&lt;p class="first last"&gt;Começa nesta segunda-feira 22/02/2016 um novo curso online introdutório de Python e totalmente gratuito&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Começa nesta segunda-feira 22/02/2016 um novo curso online introdutório de Python e totalmente gratuito. Neste curso serão abordados aspectos básicos da linguagem de programação mais descolada do mercado &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/wink.png"&gt;&lt;/p&gt;
&lt;div class="section" id="como-me-inscrevo"&gt;
&lt;h2&gt;Como me inscrevo?&lt;/h2&gt;
&lt;p&gt;Não tem inscrição basta entrar no grupo do google python-sorocaba e antes das aulas será enviado um link para acesso ao Hangout. Link para o grupo:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;https://groups.google.com/forum/#!forum/python-sorocaba&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="que-horas-sera"&gt;
&lt;h2&gt;Que horas será?&lt;/h2&gt;
&lt;p&gt;Como trabalho fora da minha cidade o curso tem prazo mínimo e máximo para começar em termos de horário:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Prazo mínimo para iniciar a aula: a partir das 20hrs&lt;/li&gt;
&lt;li&gt;Término mínimo para terminar a aula: até 22hrs&lt;/li&gt;
&lt;li&gt;Prazo máximo para iniciar a aula: a partir das 21hrs&lt;/li&gt;
&lt;li&gt;Término máximo para finalizar a aula: até 23hrs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O horário de início está ligado ao horário que meu ônibus chega na minha casa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="que-dia-sera"&gt;
&lt;h2&gt;Que dia será?&lt;/h2&gt;
&lt;p&gt;As segundas-feiras a noite.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quanto-eu-pago"&gt;
&lt;h2&gt;Quanto eu pago?&lt;/h2&gt;
&lt;p&gt;NADA! Em dinheiro nada! Você paga em dedicação e força de vontade para estudar. Não pretendo ensinar nada a quem não quiser aprender.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="como-surgiu-essa-ideia"&gt;
&lt;h2&gt;Como surgiu essa idéia?&lt;/h2&gt;
&lt;p&gt;Pode ler este &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/grupo-de-estudos-python-sorocaba.html"&gt;post&lt;/a&gt; para saber mais sobre a história do Grupo de Estudos Python Sorocaba.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="com-quem-eu-falo-para-obter-informacoes-adicionais"&gt;
&lt;h2&gt;Com quem eu falo para obter informações adicionais?&lt;/h2&gt;
&lt;p&gt;Comigo... o autor deste blog. Meus contatos estão a esquerda desta página. Mas você também pode fazer comentários abaixo deste post caso ache mais legal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="por-que-as-segundas-foram-escolhidas-para-o-curso"&gt;
&lt;h2&gt;Por que as segundas foram escolhidas para o curso?&lt;/h2&gt;
&lt;p&gt;Por meio de votação, divulguei os resultados da &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/pesquisa-grupo-de-estudo-python-sorocaba.html"&gt;votação aqui&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Espero você lá no Hangout.&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category><category term="curso de python"></category><category term="curso"></category><category term="introdução ao python"></category></entry><entry><title>Pesquisa Grupo de Estudo Python Sorocaba</title><link href="http://blog.abraseucodigo.com.br/pesquisa-grupo-de-estudo-python-sorocaba.html" rel="alternate"></link><published>2016-02-20T13:02:00-02:00</published><updated>2016-02-20T13:02:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-20:/pesquisa-grupo-de-estudo-python-sorocaba.html</id><summary type="html">&lt;p class="first last"&gt;Semana passada criei um formulário do Google para fazer uma pesquisa com as pessoas interessadas no Grupo de Estudos Python Sorocaba, agora divulgo o resultado da pesquisa aqui no blog&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Semana passada criei um formulário do Google para fazer uma pesquisa com as pessoas interessadas no Grupo de Estudos Python Sorocaba, agora divulgo o resultado da pesquisa aqui no blog. Ao todo tivemos 28 pessoas interessadas no grupo que responderam a pesquisa.&lt;/p&gt;
&lt;p&gt;Com base nesses resultados vou iniciar na próxima segunda-feira um novo curso de Python para iniciantes.&lt;/p&gt;
&lt;div class="section" id="para-novos-membros-do-grupo"&gt;
&lt;h2&gt;Para novos membros do Grupo&lt;/h2&gt;
&lt;p&gt;Você ficou interessado em participar e não sabe como? Entre no grupo do Google &lt;a class="reference external" href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;python-sorocaba&lt;/a&gt; estou divulgando as novidades por lá.&lt;/p&gt;
&lt;p&gt;Mas basicamente não tem mistério para poder participar, basta estar presente segunda-feira no Hangout (o link para acesso vou mandar no grupo python-sorocaba perto deste horário) a partir das 21hrs.&lt;/p&gt;
&lt;p&gt;Não é necessário conhecimento prévio em Python, porém é necessário já conhecer alguma linguagem de programação ou pelo menos ter uma boa lógica em Algoritmos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="resultado-da-pesquisa"&gt;
&lt;h2&gt;Resultado da pesquisa&lt;/h2&gt;
&lt;img alt="resultado da pesquisa" src="images/pesquisa-grupo-de-estudo-python-sorocaba.png" /&gt;
&lt;p&gt;That's all folks!&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Django assertFormErrorCode com py.test e com TestCase</title><link href="http://blog.abraseucodigo.com.br/django-assertformerrorcode-com-pytest-e-com-testcase.html" rel="alternate"></link><published>2016-02-18T21:16:00-02:00</published><updated>2016-02-18T21:16:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-18:/django-assertformerrorcode-com-pytest-e-com-testcase.html</id><summary type="html">&lt;p class="first last"&gt;Pra que serve assertFormErrorCode do Django? Como utilizá-lo no py.test de forma tranquila?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Estive trabalhando em um teste hoje utilizando py.test e queria usar assertFormErrorCode padrão da suite de testes do Django, porém não queria extender meu teste de TestCase, como fazer?&lt;/p&gt;
&lt;p&gt;Ta legal, se perdeu? Continue lendo abaixo que vou explicar o que é o assertFormErrorCode e também como utilizá-lo sem depender da suite de testes do Django.&lt;/p&gt;
&lt;div class="section" id="introducao"&gt;
&lt;h2&gt;Introdução&lt;/h2&gt;
&lt;p&gt;Aprendi a usar recentemente vários asserts poderosos que o Django já te dá de presente na sua suite de testes. Quem me mostrou isso foi o &lt;a class="reference external" href="https://twitter.com/henriquebastos"&gt;Henrique Bastos&lt;/a&gt; no curso &lt;a class="reference external" href="http://welcometothedjango.com.br/"&gt;Welcome to the Django&lt;/a&gt; o qual recomendo a todos que façam, pois é um ótimo curso, e gostaria de fazer um agradecimento especial neste post! Parabéns Henrique pelo ótimo curso!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="codigos-postados-aqui"&gt;
&lt;h2&gt;Códigos postados aqui&lt;/h2&gt;
&lt;p&gt;Os códigos de exemplo deste post em sua maioria podem ser visualizados e estudados no github em um commit anterior ao atual do projeto wttd, clique &lt;a class="reference external" href="https://github.com/rafaelhenrique/wttd/tree/85c702631923cd3b47ec992c4cfcb06d9f172827"&gt;aqui para visualizar o projeto como um todo.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mas-o-que-e-assertformerrorcode"&gt;
&lt;h2&gt;Mas o que é assertFormErrorCode?&lt;/h2&gt;
&lt;p&gt;Este assert é mais um dos asserts interessantíssimos que o Django tem na sua suite de testes. Vejamos um exemplo de como esse cara pode ser usado nos seus testes:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Formulário básico de inscrição&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;wttd/eventex/subscriptions/forms.py&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.exceptions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ValidationError&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;validate_cpf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CPF deve conter apenas números&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;digits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CPF deve ter 11 números&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;length&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SubscriptionForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Nome&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cpf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CPF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;validators&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;validate_cpf&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EmailField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;phone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Telefone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perceba que este é um formulário bem básico onde podemos ver claramente que o campo &lt;tt class="docutils literal"&gt;cpf&lt;/tt&gt; é validado com regras bem básicas onde somente verificamos 2 coisas:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;se o cpf digitado não contem caracteres que não sejam números&lt;/li&gt;
&lt;li&gt;se o cpf tem 11 dígitos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O que eu acho mais interessante deste código é a questão do &lt;tt class="docutils literal"&gt;ErrorCode&lt;/tt&gt;! Em todo &lt;tt class="docutils literal"&gt;ValidationError&lt;/tt&gt; de podemos passar um &lt;tt class="docutils literal"&gt;ErrorCode&lt;/tt&gt; como parâmetro, que no caso das duas validações acima, podemos visualizar os códigos de erro &lt;tt class="docutils literal"&gt;digits&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;length&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Ta legal, você não curtiu? É eu também não via sentido nisso antes de ver o que era possível fazer com isso.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pra-que-especificar-errorcodes-nos-seus-validationerror"&gt;
&lt;h2&gt;Pra que especificar &lt;tt class="docutils literal"&gt;ErrorCodes&lt;/tt&gt; nos seus &lt;tt class="docutils literal"&gt;ValidationError&lt;/tt&gt;?&lt;/h2&gt;
&lt;p&gt;Quando você cria um teste comumente você vai querer saber quais as mensagens de erro o seu formulário está exibindo para os usuários, porém ai vem a questão, se você tem milhares de formulários com milhares de mensagens de erro, como é o trabalho que você terá?&lt;/p&gt;
&lt;p&gt;Se você mudar uma mensagem de erro você terá que sair garimpando no seu código onde você estava usando aquela mensagem para poder modificar para a nova e isso gasta TEMPO e consequentemente DINHEIRO! Fora que é chato pra caramba!&lt;/p&gt;
&lt;p&gt;Pensando nisso você pode criar seus testes apontando para o &lt;tt class="docutils literal"&gt;ErrorCode&lt;/tt&gt; assim se a mensagem mudar o &lt;tt class="docutils literal"&gt;ErrorCode&lt;/tt&gt; permanecerá o mesmo e você não quebra nenhum teste! Sensacional isso!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="show-me-the-code"&gt;
&lt;h2&gt;Show me the code&lt;/h2&gt;
&lt;p&gt;Vejamos abaixo um teste criado no Django utilizando a verificação por &lt;tt class="docutils literal"&gt;ErrorCode&lt;/tt&gt;:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Teste do formulário básico de inscrição&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;wttd/eventex/subscriptions/tests/test_form_subscription.py&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.test&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TestCase&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;eventex.subscriptions.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SubscriptionForm&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SubscriptionFormTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_cpf_is_digit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;CPF must only accept digits&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_validated_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cpf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ABCD5678901&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertFormErrorCode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;digits&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Olha ai que bacana esse teste! Limpo! Se você mudar a mensagem de erro no form o teste independe da mensagem, ele sempre irá olhar para o &lt;tt class="docutils literal"&gt;ErrorCode&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tudo-bonito-e-maravilhoso-mas"&gt;
&lt;h2&gt;Tudo bonito e maravilhoso mas...&lt;/h2&gt;
&lt;p&gt;Mas... se você não usar a suite de testes do Django (herdando a classe TestCase) você não ganha esse assert maravilhoso chamado &lt;tt class="docutils literal"&gt;assertFormErrorCode&lt;/tt&gt;. E agora?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="procurando-uma-solucao-que-funciona-independente-do-testcase"&gt;
&lt;h2&gt;Procurando uma solução que funciona independente do TestCase&lt;/h2&gt;
&lt;p&gt;Depois de garimpar algum tempo na internet (e amolar um amigo do trabalho) achei este post &lt;a class="reference external" href="http://stackoverflow.com/questions/18781492/forms-validationerror-and-error-code"&gt;aqui&lt;/a&gt; no stack overflow, o padroeiro dos desenvolvedores de software.&lt;/p&gt;
&lt;p&gt;Neste post o cara colocou uma forma diferente de conseguir pegar o &lt;tt class="docutils literal"&gt;ErrorCode&lt;/tt&gt; que está na exception do &lt;tt class="docutils literal"&gt;ValidationError&lt;/tt&gt;, ele usou:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; print(form.errors.as_json())
{&amp;quot;__all__&amp;quot;: [
    {&amp;quot;message&amp;quot;: &amp;quot;Your account has not been activated.&amp;quot;, &amp;quot;code&amp;quot;: &amp;quot;inactive&amp;quot;}
]}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta forma o cara trouxe o erro do form em json e depois desta maneira ele consegue pegar uma key chamada &amp;quot;code&amp;quot; onde está o &lt;tt class="docutils literal"&gt;ErrorCode&lt;/tt&gt;. Achei bacana isso ai, porém não é tão simples como o cara postou (nunca é).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="minha-solucao"&gt;
&lt;h2&gt;Minha solução&lt;/h2&gt;
&lt;p&gt;Criei uma classe de teste base minha chamada &lt;tt class="docutils literal"&gt;BaseTest&lt;/tt&gt;:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Classe base de testes&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;este cara não está no github&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.test&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BaseTest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Send post to form.&lt;/span&gt;

&lt;span class="sd"&gt;            endpoint: url for endpoint to test&lt;/span&gt;
&lt;span class="sd"&gt;            data: data to send to form&lt;/span&gt;
&lt;span class="sd"&gt;            field_name: name of form field on Django.&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;context&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_data&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Meu problema era fazer um post retornar os &lt;tt class="docutils literal"&gt;ErrorCodes&lt;/tt&gt; de forma fácil, com essa classe &lt;tt class="docutils literal"&gt;BaseTest&lt;/tt&gt; consegui atingir meu objetivo. Explicando de forma detalhada:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Primeiro importei o &lt;tt class="docutils literal"&gt;Client&lt;/tt&gt; do Django que é um cara que eu realmente queria usar para fazer meus requests;&lt;/li&gt;
&lt;li&gt;O &lt;tt class="docutils literal"&gt;setup&lt;/tt&gt; do py.test é tudo em minúsculo mesmo (diferente do Django);&lt;/li&gt;
&lt;li&gt;Ao colocar criar o &lt;tt class="docutils literal"&gt;self.client&lt;/tt&gt; consigo usar o mesmo client para o resto da classe em forma de atributo;&lt;/li&gt;
&lt;li&gt;Criei um método de post para ser usado pela classe filha, onde eu retorno resp que é o response do request que o &lt;tt class="docutils literal"&gt;self.client.post&lt;/tt&gt; executa e também retorno uma lista contendo os meus &lt;tt class="docutils literal"&gt;ErrorCodes&lt;/tt&gt; todos bonitos em uma única lista.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bem feito isso é só usar esse cara! Código de exemplo de uso:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;Teste que usa a classe BaseTest, baseada na classe SubscriptionFormTest&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;este cara não está no github&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestSubscriptionForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseTest&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_post_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ENDPOINT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cpf&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ABC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;digits&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;linhas&lt;/span&gt; &lt;span class="n"&gt;omitidas&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta forma este teste só vai passar caso o &lt;tt class="docutils literal"&gt;ErrorCode&lt;/tt&gt; &lt;tt class="docutils literal"&gt;digits&lt;/tt&gt; sejá levantado como exceção do &lt;tt class="docutils literal"&gt;ValidationError&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Basicamente foi essa a brincadeira de hoje, eu achei bem legal, mesmo sem extender o TestCase padrão do Django conseguimos fazer a mesma coisa. Neste caso foi um pouco diferente pois o meu teste era pra validar um post e não propriamente um form, mas creio que a idéia tenha ficado clara, caso não, se não entenderem alguma coisa não deixem de me contatar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Quando você não consegue usar um recurso padrão Django dentro do Django para fazer alguma coisa, nunca se esqueça que o Django é Python, e sempre você conseguirá fazer algo para contornar a situação de uma forma bacana.&lt;/p&gt;
&lt;p&gt;Bom é isso espero que tenham gostado do post! Deixem seus comentários!&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="django"></category><category term="pytest"></category><category term="testcase"></category><category term="tdd"></category></entry><entry><title>virtualenv/pip pra que servem?</title><link href="http://blog.abraseucodigo.com.br/virtualenv-pip-pra-que-servem.html" rel="alternate"></link><published>2016-02-17T21:18:00-02:00</published><updated>2016-02-17T21:18:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-17:/virtualenv-pip-pra-que-servem.html</id><summary type="html">&lt;p class="first last"&gt;Existem muitos posts pela internet afora dizendo como usar virtualenv e pip, e realmente é muito fácil. Mas para um iniciante a pergunta que vem a mente é... pra que serve virtualenv? Pra que serve pip?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Existem muitos posts pela internet afora dizendo como usar virtualenv e pip, e realmente é muito fácil. Mas para um iniciante a pergunta que vem a mente é... pra que serve virtualenv? Pra que serve pip?&lt;/p&gt;
&lt;div class="section" id="explicando-para-quem-nunca-desenvolveu-em-python"&gt;
&lt;h2&gt;Explicando para quem nunca desenvolveu em Python&lt;/h2&gt;
&lt;p&gt;Imagine que você tem um programa na sua máquina em uma versão 1.0.0 e em dado momento você quer instalar a versão 1.0.1, porém, você também precisa da versão 1.0.0 pois você tem algum arquivo que não abre na versão mais nova.&lt;/p&gt;
&lt;p&gt;Pois é, este problema também acontece com os desenvolvedores Python, e a solução criada para este problema foi o nosso amigo &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-virtualenv"&gt;
&lt;h2&gt;O virtualenv&lt;/h2&gt;
&lt;p&gt;Uilizando o &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; você consegue isolar as bibliotecas do projeto A em relação ao projeto B.&lt;/p&gt;
&lt;p&gt;Imagine que em determinado momento que o projeto A começou a ser desenvolvido você ainda não tinha Python3 e optou por usar Python2 e mais um monte de bibliotecas do Python2, porém o projeto B usa Python3 e obviamente você não vai querer usar as bibliotecas do Python2 pois você deu uma evoluída nesse projeto e quer usar tudo que existe de mais novo no mundo Python.&lt;/p&gt;
&lt;p&gt;Já imaginou a bagunça que seu sistema operacional vai fazer? O S.O. vai colocar a versão antiga e a nova no mesmo diretório e quando você chamar o comando &lt;cite&gt;import&lt;/cite&gt; do Python para importar sua biblioteca você sempre ficará em dúvida de qual a versão você importou. Isso vira um caos com o passar do tempo, principalmente depois de você instalar muitas bibliotecas.&lt;/p&gt;
&lt;p&gt;Apenas fazendo um comentário pertinente, biblioteca também pode ser chamadas de módulos em Python e vice-versa. Estou chamando de biblioteca pois fica mais fácil para as pessoas que vem de outras linguagens entenderem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-pip"&gt;
&lt;h2&gt;O pip&lt;/h2&gt;
&lt;p&gt;Falei um pouco sobre &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt;, mas e o &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;?&lt;/p&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; é o &amp;quot;gerenciador de pacotes&amp;quot; do Python. Assim como o &lt;a class="reference external" href="https://www.debian.org/doc/manuals/apt-howto/ch-apt-get.pt-br.html"&gt;apt-get&lt;/a&gt; e o &lt;a class="reference external" href="http://brew.sh/"&gt;homebrew&lt;/a&gt; que são os gerenciadores de pacotes do Ubuntu/Mac OSX o &lt;a class="reference external" href="https://pypi.python.org/pypi/pip"&gt;pip&lt;/a&gt; é o instalador de bibliotecas de terceiros padrão do Python.&lt;/p&gt;
&lt;p&gt;Com o pip você poderá instalar qualquer biblioteca disponível no famoso site de bibliotecas da Python Software Foundation o &lt;a class="reference external" href="https://pypi.python.org/pypi"&gt;PyPi&lt;/a&gt;. Eu não tenho ideia de como verificar quantas bibliotecas Python existem hoje no PyPi, mas posso dizer que são centenas, ou milhares! São muitos MESMO, para os mais variados fins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hands-on"&gt;
&lt;h2&gt;Hands-on&lt;/h2&gt;
&lt;p&gt;Vamos criar um projeto chamado &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt; e outro chamado &lt;tt class="docutils literal"&gt;myprojectB&lt;/tt&gt; para demonstrar o uso do isolamento de ambientes que &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; nos ajuda a fazer, também iremos instalar bibliotecas com o &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; durante o processo.&lt;/p&gt;
&lt;p&gt;Para executar este passo a passo estou usando Python 3.5.X:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Se você não tem Python 3.5.X instalado e usar Windows clique &lt;a class="reference external" href="http://blog.abraseucodigo.com.br/instalando-python35-no-windows-7.html"&gt;aqui&lt;/a&gt; para ir ao post que escrevi ontem descrevendo este procedimento;&lt;/li&gt;
&lt;li&gt;Se você não tem Python 3.5.X instalado e usar Linux ou Mac OSX você poderá usar o apt-get, yum ou homebrew para instalar Python3.5.X no seu computador de forma absolutamente simples, porém ainda não fiz posts sobre isso.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No Windows vou abrir o &lt;tt class="docutils literal"&gt;Prompt de comandos&lt;/tt&gt; que terá essa cara:&lt;/p&gt;
&lt;img alt="prompt de comandos" src="images/prompt-windows-7.png" /&gt;
&lt;p&gt;Onde &lt;tt class="docutils literal"&gt;rafael&lt;/tt&gt; é meu nome de usuário e o caminho padrão que usarei é &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C:\Users\rafael&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;No Linux/Mac OSX vamos abrir um terminal que terá esta aparência:&lt;/p&gt;
&lt;img alt="terminal linux mac osx" src="images/terminal.png" /&gt;
&lt;p&gt;Onde &lt;tt class="docutils literal"&gt;rafael&lt;/tt&gt; também é meu nome de usuário e o caminho padrão que usarei é &lt;tt class="docutils literal"&gt;/home/rafael&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Clique abaixo para continuar o procedimento relativo ao seu sistema operacional:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#criando-virtualenv-e-utilizando-o-pip-no-windows"&gt;Criando virtualenv e utilizando o pip no Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#criando-virtualenv-e-utilizando-o-pip-no-linux-e-mac-osx"&gt;Criando virtualenv e utilizando o pip no Linux e Mac OSX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="criando-virtualenv-e-utilizando-o-pip-no-windows"&gt;
&lt;h2&gt;Criando virtualenv e utilizando o pip no Windows&lt;/h2&gt;
&lt;p&gt;Vamos criar o diretório do projeto &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C:\Users\rafael&amp;gt; mkdir myprojectA
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos entrar nesta pasta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C:\Users\rafael&amp;gt; cd myprojectA
C:\Users\rafael\myprojectA&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Posteriormente vamos criar um virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C:\Users\rafael\myprojectA&amp;gt; python -m venv .venv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pronto criamos um virtualenv onde este cara ficará armazenado em uma pasta nomeado como &lt;cite&gt;.venv&lt;/cite&gt;, como podemos ver abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C:\Users\rafael\myprojectA&amp;gt; dir
... linhas omitidas ...

02/16/2016   10:36 PM   &amp;lt;DIR&amp;gt;        .venv

... linhas omitidas ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para começar a usar esse virtualenv temos que ativá-lo para isso execute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C:\Users\rafael\myprojectA&amp;gt; .venv\Scripts\activate.bat
(.venv) C:\Users\rafael\myprojectA&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perceba que o seu prompt vai ser modificado e o prefixo (.venv) será acrescentado no começo dele. Agora vamos instalar uma biblioteca, o ipython:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv) C:\Users\rafael\myprojectA&amp;gt; pip install ipython
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; tem várias dependências (que irão ser instaladas juntamente com ele, não se assuste) e sua função é seu um interpretador do Python com mais recursos. Quando eu não passo uma versão específica ao &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; ele vai instalar sempre a última versão estável da biblioteca, no momento que instalei no meu computador a versão corrente era a 4.1.1. Então neste projeto que chamei de &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt; teremos as seguintes bibliotecas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv) C:\Users\rafael\myprojectA&amp;gt; pip freeze
decorator==4.0.9
ipython==4.1.1
ipython-genutils==0.1.0
path.py==8.1.2
pickeshare==0.6
simplegeneric==0.8.1
traitlets==4.1.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Com o comando acima &lt;tt class="docutils literal"&gt;pip freeze&lt;/tt&gt; veremos todas as bibliotecas instaladas nesse &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; e suas respectivas versões. Não vou detalhar neste post todos os poderes do &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;, mas o parâmetro &lt;tt class="docutils literal"&gt;freeze&lt;/tt&gt; é extremamente importante para o desenvolvimento de sistemas em Python, futuramente posso fazer um post só explicando setup de projetos Python, se quiserem esse post rápido me dêem um toque ai nos comentários.&lt;/p&gt;
&lt;p&gt;Para não ser muito repetitivo (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRY&lt;/a&gt;) no post e para aplicar um exercício de fixação ao mesmo tempo, refaça os passos com o diretório &lt;tt class="docutils literal"&gt;myprojectB&lt;/tt&gt; mas antes disso desative o &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; atual:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv) C:\Users\rafael\myprojectA&amp;gt; .venv\Scripts\deactivate.bat
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ao chegar no passo em que você instala o &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; pelo &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; não faça isso desta vez, quando chegar nesta etapa execute o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv) C:\Users\rafael\myprojectB&amp;gt; pip install ipython==3.0.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta forma vamos testemunhar o isolamento de ambientes! Ao terminar a instalaçào do &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; (versão 3.0.0), verifique o que você acabou de instalar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv) C:\Users\rafael\myprojectB&amp;gt; pip freeze
ipython=3.0.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ai você vai me perguntar &amp;quot;ué!? cadê os requisitos!?&amp;quot; pois é... nesta versão do &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; ele não tinha tantos requisitos, só por essa demonstração já conseguimos ver o isolamento entre os ambientes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="criando-virtualenv-e-utilizando-o-pip-no-linux-e-mac-osx"&gt;
&lt;h2&gt;Criando virtualenv e utilizando o pip no Linux e Mac OSX&lt;/h2&gt;
&lt;p&gt;Vamos criar o diretório do projeto &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rafael@bloodmary:~$ mkdir myprojectA
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vamos entrar nesta pasta:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rafael@bloodmary:~$ cd myprojectA
rafael@bloodmary:myprojectA$
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Posteriormente vamos criar um virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rafael@bloodmary:myprojectA$ python3.5 -m venv .venv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pronto criamos um virtualenv onde este cara ficará armazenado em uma pasta nomeado como &lt;cite&gt;.venv&lt;/cite&gt;, como podemos ver abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rafael@bloodmary:myprojectA$ ls -a
.  ..  .python-version  .venv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Para começar a usar esse virtualenv temos que ativá-lo para isso execute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rafael@bloodmary:myprojectA$ source .venv/bin/activate
(.venv)rafael@bloodmary:myprojectA$
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Perceba que o seu prompt vai ser modificado e o prefixo (.venv) será acrescentado no começo dele. Agora vamos instalar uma biblioteca, o ipython:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv)rafael@bloodmary:myprojectA$ pip install ipython
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;O &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; tem várias dependências (que irão ser instaladas juntamente com ele, não se assuste) e sua função é seu um interpretador do Python com mais recursos. Quando eu não passo uma versão específica ao &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; ele vai instalar sempre a última versão estável da biblioteca, no momento que instalei no meu computador a versão corrente era a 4.1.1. Então neste projeto que chamei de &lt;tt class="docutils literal"&gt;myprojectA&lt;/tt&gt; teremos as seguintes bibliotecas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv)rafael@bloodmary:myprojectA$ pip freeze
decorator==4.0.9
ipython==4.1.1
ipython-genutils==0.1.0
path.py==8.1.2
pexpect==4.0.1
pickleshare==0.6
ptyprocess==0.5.1
simplegeneric==0.8.1
traitlets==4.1.0
wheel==0.24.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Com o comando acima &lt;tt class="docutils literal"&gt;pip freeze&lt;/tt&gt; veremos todas as bibliotecas instaladas nesse &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; e suas respectivas versões. Não vou detalhar neste post todos os poderes do &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;, mas o parâmetro &lt;tt class="docutils literal"&gt;freeze&lt;/tt&gt; é extremamente importante para o desenvolvimento de sistemas em Python, futuramente posso fazer um post só explicando setup de projetos Python, se quiserem esse post rápido me dêem um toque ai nos comentários.&lt;/p&gt;
&lt;p&gt;Para não ser muito repetitivo (&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRY&lt;/a&gt;) no post e para aplicar um exercício de fixação ao mesmo tempo, refaça os passos com o diretório &lt;tt class="docutils literal"&gt;myprojectB&lt;/tt&gt; mas antes disso desative o &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; atual:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv)rafael@bloodmary:myprojectA$ deactivate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ao chegar no passo em que você instala o &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; pelo &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; não faça isso desta vez, quando chegar nesta etapa execute o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv)rafael@bloodmary:myprojectB$ pip install ipython==3.0.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desta forma vamos testemunhar o isolamento de ambientes! Ao terminar a instalaçào do &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; (versão 3.0.0), verifique o que você acabou de instalar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(.venv) rafael@bloodmary:myprojectB$ pip freeze
ipython==3.0.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ai você vai me perguntar &amp;quot;ué!? cadê os requisitos!?&amp;quot; pois é... nesta versão do &lt;tt class="docutils literal"&gt;ipython&lt;/tt&gt; ele não tinha tantos requisitos, só por essa demonstração já conseguimos ver o isolamento entre os ambientes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; são dois &amp;quot;utilitários&amp;quot; muito bacanas do Python, eles te ajudam muito na hora de criar qualquer projeto em Python, espero que esse post seja útil, apesar de ter ficado bem grandinho, mas é que tinha muita coisa pra escrever mesmo e ainda ficou faltando coisa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias-bacanas"&gt;
&lt;h2&gt;Referências bacanas&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://garoa.net.br/wiki/Python/Ambiente_Virtual"&gt;Explicação sobre Ambiente Virtual contida na página do Garoa Hacker Clube de SP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://virtualenv.readthedocs.org/en/latest/index.html"&gt;Documentação oficial do virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://virtualenvwrapper.readthedocs.org/en/latest/"&gt;Documentação oficial do virtualenvwrapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/venv.html"&gt;Documentação oficial do Python explicando sobre virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="virtualenv"></category><category term="pip"></category></entry><entry><title>Instalando Python 3.5 no Windows 7</title><link href="http://blog.abraseucodigo.com.br/instalando-python35-no-windows-7.html" rel="alternate"></link><published>2016-02-16T21:09:00-02:00</published><updated>2016-02-16T21:09:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2016-02-16:/instalando-python35-no-windows-7.html</id><summary type="html">&lt;p class="first last"&gt;Muitos tem a dúvida de como instalar Python no Windows, hoje vou postar aqui um passo a passo bem básico pra que você consiga instalar Python3 no Windows 7&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Muitos tem a dúvida de como instalar Python no Windows, hoje vou postar aqui um passo a passo bem básico pra que você consiga instalar Python3 no Windows 7.&lt;/p&gt;
&lt;p&gt;Estou especificando as versões do Windows e a versão do Python pois como ambos evoluem com o tempo (e muito rapidamente) então creio eu que logo esse post irá ficar velho.&lt;/p&gt;
&lt;p&gt;Ao escrever este post também tenho conhecimento que o Windows 10 é o Windows &amp;quot;da moda&amp;quot; porém neste momento só tenho uma máquina virtual de Windows 7 e estou sem tempo para criar uma máquina virtual de Windows 10, mas pelas pesquisas e googladas na internet creio que este post também será útil para outras versões do Windows.&lt;/p&gt;
&lt;div class="section" id="baixando-o-python"&gt;
&lt;h2&gt;Baixando o Python&lt;/h2&gt;
&lt;p&gt;Você poderá baixar a versão oficial do Python neste site:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.python.org/downloads"&gt;https://www.python.org/downloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A página acessada será semelhante a esta:&lt;/p&gt;
&lt;img alt="python download" src="images/instalando-python35-no-windows-7/01.png" /&gt;
&lt;p&gt;Baixe a release 3.5.1 (disponível atualmente), se quiser baixar diretamente clique:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/ftp/python/3.5.1/python-3.5.1.exe"&gt;aqui para baixar a versão 32 bits&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/ftp/python/3.5.1/python-3.5.1-amd64.exe"&gt;aqui para baixar a versão 64 bits&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recomendo verificar qual a arquitetura do seu sistema operacional para isso pressione as teclas &lt;tt class="docutils literal"&gt;Windows + Pause Break&lt;/tt&gt; do seu teclado ou &lt;tt class="docutils literal"&gt;clique com o direito no ícone do Computador e posteriormente clique em propriedades&lt;/tt&gt;, a seguinte tela será apresentada:&lt;/p&gt;
&lt;img alt="system" src="images/instalando-python35-no-windows-7/02.png" /&gt;
&lt;p&gt;Observe que eu grifei em vermelho a arquitetura do meu Windows instalado que é de 32 bits.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalando-o-python"&gt;
&lt;h2&gt;Instalando o Python&lt;/h2&gt;
&lt;p&gt;Basicamente para instalar o Python depois de baixado clique duas vezes no executável baixado. A instalação é bem tranquila e bem next.. next.. finish.&lt;/p&gt;
&lt;p&gt;Ao clicar duas vezes no executável a seguinte tela será aberta:&lt;/p&gt;
&lt;img alt="python wizard 01" src="images/instalando-python35-no-windows-7/03.png" /&gt;
&lt;p&gt;Repare que aqui nesta tela inicial o que é mais importante é marcar a opção &lt;tt class="docutils literal"&gt;Add Python3.5 to PATH&lt;/tt&gt; desta forma você não precisará configurar as variáveis de ambiente do seu Windows posteriormente (pois isso é meio chato de se fazer manualmente). Marcada essa opção clique em &lt;tt class="docutils literal"&gt;Install Now&lt;/tt&gt;, ao clicar nesta opção o processo de instalação será iniciado:&lt;/p&gt;
&lt;img alt="python wizard 02" src="images/instalando-python35-no-windows-7/04.png" /&gt;
&lt;p&gt;Aguarde alguns instantes e esta outra tela será apresentada:&lt;/p&gt;
&lt;img alt="python wizard 03" src="images/instalando-python35-no-windows-7/05.png" /&gt;
&lt;p&gt;Feito isso clique em &lt;tt class="docutils literal"&gt;Close&lt;/tt&gt;, caso tenha algum problema nesta parte por favor me contate por email ou nos comentários abaixo deste post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conferindo-quais-programas-voce-ganhou"&gt;
&lt;h2&gt;Conferindo quais programas você &amp;quot;ganhou&amp;quot;&lt;/h2&gt;
&lt;p&gt;Vejamos inicialmente o que instalamos:&lt;/p&gt;
&lt;img alt="iniciar" src="images/instalando-python35-no-windows-7/06.png" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;IDLE&lt;/tt&gt;: Uma IDE de linha de comando muito simples para começar suas aventuras no mundo Python;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Python 3.5&lt;/tt&gt;: Irá abrir o interpretador do Python no seu &lt;tt class="docutils literal"&gt;Prompt de comandos&lt;/tt&gt;;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Python 3.5 Manuals&lt;/tt&gt;: Toda a documentação do Python que está online &lt;a class="reference external" href="https://docs.python.org/3/"&gt;aqui&lt;/a&gt; ficará no seu computador para você acessar offline (para casos extremos onde você ficou sem internet).&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Python 3.5 Module Docs&lt;/tt&gt;: Uma referência sobre os módulos Python, ao clicar neste carinha será iniciado um servidorzinho que te servirá essa documentação, quando quiser sair basta ir ao console aberto e digitar &lt;tt class="docutils literal"&gt;q&lt;/tt&gt; seguido de enter que o servidorzinho será desligado.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para começar seus estudos em Python é importante saber que a partir desta instalação você acaba de &amp;quot;ganhar&amp;quot; alguns programas que te ajudarão na sua jornada pelo conhecimento, alguns merecer destaque:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;pip&lt;/tt&gt;: Um poderoso gerenciador de pacotes/bibliotecas do Python, com ele você pode instalar muitas e muitas bibliotecas de terceiros;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt;: Um cara &amp;quot;separador&amp;quot; de ambientes, não faz muito tempo este cara foi incorporado ao Python (antes ele era um cara fora do Python), ele serve para que você tenha diversas versões da mesma biblioteca para projetos diferentes sem que elas colidam e briguem entre si para ver qual a versão vai assumir e ficar a frente quando você chamar um &lt;tt class="docutils literal"&gt;import&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="referencia"&gt;
&lt;h2&gt;Referência&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/3/using/windows.html"&gt;Documentação oficial do uso do Python no Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusao"&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Não é difícil instalar Python no Windows, mas tem que se atentar a alguns detalhes bem simples. No próximo post pretendo descrever como e pra que serve o &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; e &lt;tt class="docutils literal"&gt;pip&lt;/tt&gt; que você acabou de instalar.&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="windows"></category><category term="instalar python"></category></entry><entry><title>Como criar seu PaaS com Tsuru</title><link href="http://blog.abraseucodigo.com.br/como-criar-seu-paas-com-tsuru.html" rel="alternate"></link><published>2015-09-22T22:48:00-03:00</published><updated>2015-09-22T22:48:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2015-09-22:/como-criar-seu-paas-com-tsuru.html</id><summary type="html">&lt;p&gt;Como criar um PaaS simples para deploy de aplicações com Tsuru&lt;/p&gt;</summary><content type="html">&lt;p&gt;Começo este post dizendo que gostei bastante da proposta do Tsuru. &lt;/p&gt;
&lt;h2&gt;Mas o que é o Tsuru?&lt;/h2&gt;
&lt;p&gt;Tsuru é um software que você pode criar seu próprio &lt;a href="https://en.wikipedia.org/wiki/Platform_as_a_service"&gt;PaaS&lt;/a&gt; explicando de forma simples, você tem um &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;/&lt;a href="https://www.openshift.com"&gt;Openshift&lt;/a&gt; pessoal onde você tem controle completo na máquina e você pode fazer o que bem entender.&lt;/p&gt;
&lt;h2&gt;E pra que serve esse tal Tsuru?&lt;/h2&gt;
&lt;p&gt;Serve para você fazer deploy de suas aplicações de forma BRUTALMENTE RÁPIDA, com a vantagem de não pagar nada para o Openshift nem para o Heroku, mesmo que seja uma aplicação grande e pesada, quem vai gerenciar os recursos é você mesmo, então se sua máquina "explodir" a culpa será sua, pois você tem controle absoluto sobre os recursos da máquina em que você irá instalar o Tsuru.&lt;/p&gt;
&lt;h2&gt;Quem é o pai do Tsuru?&lt;/h2&gt;
&lt;p&gt;O pai do Tsuru (pelo que eu sei pelo menos) é o Andrews Medina, e este cara começou a desenvolver o Tsuru dentro da Globo.com. Podemos ver até na doc do Tsuru o Copyright da Globo.com, isso fica bem evidente que a Globo.com tem um dedinho ai.&lt;/p&gt;
&lt;p&gt;O Andrews Medina também fez inúmeros vídeos no YouTube muito bons explicando mais sobre o Tsuru, recomendo TODOS.. principalmente os três abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YD3iNEBb4t0"&gt;tsuru - fazendo deploys de forma simples e divertida&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=h68DCFFXGW0"&gt;Garoa Hacker | Entrevista: Andrews Medina (possui 3 partes)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dC79RpifEQI"&gt;Garoa Hacker Club | Andrews Medina - Tsuru Live Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Por que raios eu estou falando do Tsuru?&lt;/h2&gt;
&lt;p&gt;Volto a dizer... achei SENSACIONAL o deploy realizado pelo Tsuru, extremamente rápido e seguro. Então ontem eu subi o meu PaaS utilizando o Tsuru &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/raised_hands.png"&gt;.&lt;/p&gt;
&lt;h2&gt;Procedimentos básicos&lt;/h2&gt;
&lt;p&gt;A doc do Tsuru é excelente e pode ser lida &lt;a href="http://docs.tsuru.io/en/stable/understanding/index.html"&gt;aqui&lt;/a&gt;, mas tem um porém, caso você seja apenas um xereta (assim como eu), não recomendo fazer a instalação através dessa doc, pois você irá travar assim como eu no passo &lt;a href="http://docs.tsuru.io/en/stable/installing/adding-nodes.html"&gt;Adding Nodes&lt;/a&gt; muito provavelmente. &lt;/p&gt;
&lt;p&gt;Neste "Adding Nodes" é o passo onde você terá que adicionar uma *instância de IaaS da &lt;a href="https://aws.amazon.com/pt/ec2/"&gt;Amazon EC2&lt;/a&gt; ou de &lt;a href="https://cloudstack.apache.org/"&gt;Apache CloudStack&lt;/a&gt;, por isso eu disse que você provavelmente vai travar se for um curioso, por que?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pois no EC2 você terá que pagar a instância, que é uma coisa que provavelmente você não vai querer fazer a princípio&lt;/li&gt;
&lt;li&gt;e o CloudStack não é pago, porém extremamente complexo, pelo menos eu achei&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Portanto minha escolha óbvia foi fazer o "procedimento mais fácil" (dica do @rpedigoni) que é usar o &lt;a href="https://github.com/tsuru/now"&gt;Tsuru Now&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;* Não sei se o nome certo para o CloudStack é instância, se eu estiver errado me desculpem&lt;/p&gt;
&lt;h2&gt;Procedimento "mais fácil"&lt;/h2&gt;
&lt;p&gt;Cara por que eu coloquei essas aspas ai? &lt;/p&gt;
&lt;p&gt;Meu, o Tsuru Now é um script em Shell bem antiguinho (pelo menos ao meu ver) e ele não é tão intuitivo como promete, creio que na época que ele foi criado ele deveria ser mais fácil de usar, mas agora devido ao tempo e versões mais novas de sistema operacional ele se tornou meio obsoleto.&lt;/p&gt;
&lt;p&gt;Mas mesmo obsoleto galera, eu ainda recomendo esse cara, pois se você aprender a domá-lo você consegue subir o Tsuru bem tranquilão.&lt;/p&gt;
&lt;h2&gt;Ferramentas utilizadas&lt;/h2&gt;
&lt;p&gt;Para subir o meu Tsuru estou utilizando:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tsuru/now"&gt;Tsuru Now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-create-your-first-digitalocean-droplet-virtual-server"&gt;Um droplet da Digital Ocean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;S.O. Ubuntu 14.04 x64&lt;/li&gt;
&lt;li&gt;512MB Ram &lt;/li&gt;
&lt;li&gt;20GB SSD Disk &lt;/li&gt;
&lt;li&gt;New York 3&lt;/li&gt;
&lt;li&gt;Neste droplet a configuração default da Digital Ocean é vir 2 interfaces de rede, uma eth0 que será o ip externo e a lo que representa o loopback&lt;/li&gt;
&lt;li&gt;Valor desse cara $5 por mês&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Caso você não queira pagar absolutamente NADA também é possível, você só terá o trabalho de configurar as interfaces da sua máquina física (ou virtual, sei lá) e instalar o Ubuntu 14.04 x64 (o x32 eu não testei e não sei se funciona bem!).&lt;/p&gt;
&lt;h2&gt;Problemas encontrados logo no começo&lt;/h2&gt;
&lt;p&gt;No repositório do &lt;a href="https://github.com/tsuru/now"&gt;github do Tsuru Now&lt;/a&gt; tem algumas informações faltantes a respeito da compatibilidade com os Sistemas operacionais. Lá no README ele menciona que este script funciona em Debian e Ubuntu, mas não diz a versão &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/pensive.png"&gt;.&lt;/p&gt;
&lt;p&gt;Eu como um bom paranóico amante de Debian, fui logo criando um droplet na Digital Ocean com o Debian mais novo que encontrei o 8.1~8.2 (Jessie Stable), ai rodei o script conforme manda o README:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# curl -sL https://raw.githubusercontent.com/tsuru/now/master/run.bash | bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Coisa linda pra se ver.... massss... não consegui nem ir até 50% da instalação, logo de cara falta o pacote linux-image-extras-* no Debian, e adicionar repositórios começa a ficar meio impraticável pois eu como um bom paranóico, acredito, que se ele não está no repositório main alguma razão deve ter.&lt;/p&gt;
&lt;p&gt;Eis que pensei &lt;em&gt;"pooo... se não vai Debian, os caras devem gostar de Ubuntu... vamos de Ubuntu"&lt;/em&gt;, ai novamente como um bom paranóico fui logo escolhendo a versão MAIS NOVA do Ubuntu, a versão 15.04 x64.... e adivinhem?? Problema de novo.... se não me engano com o mesmo pacote.&lt;/p&gt;
&lt;p&gt;Ai novamente como um bom brasileiro que não desiste nunca fui de novo agora pensei &lt;em&gt;"poooo.... se os caras não gostam desse Ubuntu vou usar o Ubuntu que está referenciado na doc oficial do Tsuru"&lt;/em&gt; que vem a ser o 14.04 ! &lt;/p&gt;
&lt;p&gt;E desta vez fiz progressos significativos, MUITO SIGNIFICATIVOS e consegui concluir cerca de 80% da instalação e o script foi dar pau lá pelo finalzinho próximo da &lt;code&gt;linha 671&lt;/code&gt; quando ele chama a função &lt;code&gt;config_tsuru_post&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ai começa meu instinto de programador maluco e fui depurando a parada. Pelo que pude ver o script não estava pegando meu ip externo adequadamente.&lt;/p&gt;
&lt;h2&gt;Variáveis/adaptação e funcionamento completo&lt;/h2&gt;
&lt;p&gt;Como o Tsuru Now não conseguia pegar meu ip corretamente fui lá e comecei a testar coisas de modo que fizesse o filho da mãe funcionar. Eis que por fim eu consegui, e vou dar a receita de bolo pra vocês. Clone o repositório do Tsuru Now inicialmente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# git clone git@github.com:tsuru/now.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nas primeiras linhas do script chamado &lt;code&gt;run.bash&lt;/code&gt; tem algumas variáveis interessantes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1  #!/bin/bash -ue
2 
3  # Copyright 2015 tsuru-now authors. All rights reserved.
4  # Use of this source code is governed by a BSD-style
5  # license that can be found in the LICENSE file.
6 
7  set -eu
8
9  release=&amp;quot;&amp;quot;
10 codename=&amp;quot;&amp;quot;
11 host_ip=&amp;quot;&amp;quot;
12 private_ip=&amp;quot;&amp;quot;
13 host_name=&amp;quot;&amp;quot;
14 set_interface=&amp;quot;&amp;quot;
15 is_debug=&amp;quot;&amp;quot;
16 docker_node=&amp;quot;&amp;quot;
17 set_interface=&amp;quot;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Destas 17 linhas as variáveis que resolveram minha vida foram &lt;code&gt;host_ip&lt;/code&gt; e &lt;code&gt;private_ip&lt;/code&gt;, nestas duas eu setei meu ip &lt;strong&gt;EXTERNO (ou seja o ip que a galera de fora da sua rede vê)&lt;/strong&gt;, caso você tenha dúvidas qual é seu ip externo recomendo olhar no site &lt;a href="https://www.whatismyip.com/"&gt;What Is My Ip?&lt;/a&gt; que lá ele vai te mostrar o seu ip externo(mas faz o favor de olhar da máquina que você está instalando o Tsuru &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/joy.png"&gt;).&lt;/p&gt;
&lt;p&gt;Feito isso rodei o script novamente da seguinte maneira (você precisará executar como root, ou usando sudo):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# bash run.bash --host-ip &amp;lt;meu ip externo&amp;gt; | tee log_run.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Troque &amp;lt;meu ip externo&gt; pelo seu ip externo. &lt;/p&gt;
&lt;p&gt;Executando esse comando vá tomar banho, comer, tomar café ou outra coisa desse tipo, pois vai demorar um pouco (calculo pelo menos uns 15 minutos caso você não use um hd SSD).&lt;/p&gt;
&lt;p&gt;Usei o comando &lt;code&gt;| tee log_run.log&lt;/code&gt; para que ele gere um arquivo contendo todo output (erros e não erros) do script, se você quiser analisar depois como foi a instalação ficará mais fácil você ler este arquivo.&lt;/p&gt;
&lt;h2&gt;Finish him!&lt;/h2&gt;
&lt;p&gt;Se tudo correr bem ao fim dessa execução seu Tsuru já vai estar funcionando de forma básica pronta para testes bacaninhas. É importante em um primeiro momento alterar a senha do admin e rodar &lt;code&gt;source ~/.bashrc&lt;/code&gt; conforme manda o próprio Tsuru Now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;######################## DONE! ########################

Some information about your tsuru installation:

Admin user: admin@example.com
Admin password: admin123 (PLEASE CHANGE RUNNING: tsuru change-password)
Target address: http://&amp;lt;meu ip externo&amp;gt;:8080
Dashboard address: http://&amp;lt;meu ip externo&amp;gt;:32768

You should run `source ~/.bashrc` on your current terminal.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para alterar a senha você poderá usar o comando &lt;code&gt;tsuru change-password&lt;/code&gt;. Após você ter seu PaaS instalado e funcional recomendo assistir o vídeo do Andrews para dar seus primeiros passinhos utilizando o tsuru-cli, um vídeo ótimo para começar é este &lt;a href="https://www.youtube.com/watch?v=YD3iNEBb4t0"&gt;tsuru - fazendo deploys de forma simples e divertida&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Espero que tenha gostado do post, deixe seus comentários ali embaixo &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/point_down.png"&gt;.&lt;/p&gt;
&lt;p&gt;Flw!&lt;/p&gt;</content><category term="deploy"></category><category term="tsuru"></category><category term="paas"></category></entry><entry><title>Grupo de Estudos Python Sorocaba</title><link href="http://blog.abraseucodigo.com.br/grupo-de-estudos-python-sorocaba.html" rel="alternate"></link><published>2015-09-19T23:43:00-03:00</published><updated>2015-09-19T23:43:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2015-09-19:/grupo-de-estudos-python-sorocaba.html</id><summary type="html">&lt;p class="first last"&gt;Grupo de estudos Python em Sorocaba aberto ao público em geral&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Perto do dia 2 de julho de 2015 eu o Rafael Gottsfritz e o Caio Carrara tivemos a iniciativa de nos misturar ao &lt;a class="reference external" href="http://hacklab.club/"&gt;Hacklab Sorocaba&lt;/a&gt; para tentar organizar um grupo de estudos sobre variados assuntos.
Nós queríamos trazer mais movimento de comunidades para Sorocaba e regiões próximas, visto que isso é muitíssimo popular em cidades como Campinas, São Paulo e São José dos Campos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://garoa.net.br/wiki/P%C3%A1gina_principal"&gt;Garoa Hacker Clube SP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lhc.net.br/wiki/P%C3%A1gina_principal"&gt;Laboratório Hacker Campinas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://campinas.rupy.com.br/"&gt;RuPy Campinas 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pgdaycampinas.com.br/"&gt;PG Day Campinas 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.meetup.com/pt/Grupy-SP/"&gt;GruPy-SP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.thedevelopersconference.com.br/tdc/2015/saopaulo/trilhas"&gt;TDC São Paulo 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.facebook.com/pyladiescps"&gt;Pyladies Campinas - Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://twitter.com/pyladiescps"&gt;Pyladies Campinas - Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pythonbrasil.github.io/pythonbrasil11-site/"&gt;Python Brasil 2015 - SJC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esses links acima foram apenas exemplos de eventos de comunidade ou um pouco mais comerciais que rolaram/rolam ainda por este ano (2015).&lt;/p&gt;
&lt;div class="section" id="o-inicio"&gt;
&lt;h2&gt;O início&lt;/h2&gt;
&lt;p&gt;Para tentar começar a trazer coisas legais pra Sorocaba, inicialmente divulguei na lista de &lt;a class="reference external" href="https://groups.google.com/forum/?hl=pt#!searchin/hackerspace-sorocaba/Sesc/hackerspace-sorocaba/ampID5hePrI/w0Jt_vIWSTEJ"&gt;email do Hacklab&lt;/a&gt; um bate-papo descontraído no SESC Sorocaba, era descontraído, mas para ter foco nessa &amp;quot;descontração&amp;quot; toda eu queria propor objetivos as conversas e que preferencialmente se baseasse em tecnologia (ou não, caso não tivessem muitos geeks na parada).&lt;/p&gt;
&lt;p&gt;Porém infelizmente (ou felizmente, ainda não descobri) somente EU coloquei um tema lá para discutir neste evento intitulado de &amp;quot;Quinta-feira Hacker&amp;quot; (o nome era bonito). Olha só que loucura que ficou o call4papers deste dia:&lt;/p&gt;
&lt;img alt="call4papers" src="images/grupo-de-estudos-python-sorocaba_01.png" /&gt;
&lt;p&gt;Bombando.... com &lt;a class="reference external" href="http://call4paperz.com/events/quinta-feira-hacker"&gt;1 call somente&lt;/a&gt;!!&lt;/p&gt;
&lt;p&gt;Inicialmente fiquei meio puto e imaginei que não ia aparecer ninguém no SESC, por fim foram várias pessoas (no mínimo umas 6 pelo que me recordo) ai eu fiquei mais feliz um pouco. Mas mesmo assim fiquei meio de queixo caído com o desinteresse geral das pessoas, pois eu chamei para o encontro no mínimo 50 e apareceram somente 6.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hacklab-no-sabado-rolando-ainda-quase-sempre"&gt;
&lt;h2&gt;Hacklab no sábado (rolando ainda quase sempre)&lt;/h2&gt;
&lt;p&gt;Alguns dias após este &amp;quot;big evento&amp;quot; fomos novamente os 6 mosqueteiros (quase todos que foram no SESC) no sábado para nos encontrar no &lt;a class="reference external" href="http://www.macs.org.br/"&gt;Museu de Arte Contemporânea de Sorocaba&lt;/a&gt;, lá tem uma sala MUITO MUITO BACANA onde o pessoal faz umas reuniões embaixo do Museu (não amigo não é culto satânico.. é parada de hacker mesmo).&lt;/p&gt;
&lt;p&gt;Neste dia conheci o Hudson que é o cara que toca o barco do Hacklab junto com o Guilherme que é um membro assíduo também, conversamos bastante e neste mesmo dia o Hudson me falou uma coisa importante que eu estava deixando passar...&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;quot;Cara pra ser um evento precisa de você e mais um&amp;quot;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Resumindo... acho que ele tinha razão, pois bastam 2 interessados para formar um pequeno grupo para fazer algo, se você estiver sozinho OK! Também é LEGAL! Porém você não tem o compromisso de estar na mesma hora no mesmo lugar para estudar algum assunto, imagino que isso seja o princípio da ideia de um &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Hackerspace"&gt;hackerspace&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="o-grupo-de-estudos"&gt;
&lt;h2&gt;O grupo de estudos&lt;/h2&gt;
&lt;p&gt;Eis que neste dia um pouco depois surgiu a ideia de montarmos um &lt;a class="reference external" href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;Grupo de Estudos de Python em Sorocaba&lt;/a&gt;, um grupo com um caminho simples a trilhar:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Nivelar as pessoas em Python, para que discussões futuras sejam mais proveitosas (no ponto que estamos já estão sendo)&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Para isso estou dando aulas eu mesmo via &lt;a class="reference external" href="http://www.google.com/intl/pt-BR_ALL/+/learnmore/hangouts/onair.html"&gt;Hangout on Air&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Todos nós aprendendo juntos&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Existem assuntos bem complexos no mundo Python aos quais eu não domino para esses precisamos já ter entendido o básico e estarmos nivelados a ponto de aprendermos juntos&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;A parte mais legal!!!&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Começar a contribuir ou criar projetos open source!!! Sem prazo nem cobranças.. fazer algo da legal que queremos pra aprendermos mais e mais&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;E o valor do curso!? O valor é DEDICAÇÃO E INTERESSE. Se você estiver afim de entrar no Grupo tem que ter no mínimo MUITA DEDICAÇÃO E MUITO INTERESSE pois é caro o curso em termos de valores honrosos hahaha.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quer-entrar-para-o-nosso-grupo"&gt;
&lt;h2&gt;Quer entrar para o nosso Grupo??&lt;/h2&gt;
&lt;p&gt;Basta se inscrever na lista &lt;a class="reference external" href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;Python-Sorocaba&lt;/a&gt; e acompanhar os emails, sempre fazemos nossos encontros nas quartas-feiras a noite próximo das 20hrs.&lt;/p&gt;
&lt;p&gt;Porém caso você queira entrar neste atual momento, agora, agorinha, me manda um tweet para que eu alinhe o que você precisa estudar, pois estamos indo para a aula 12 já. Mas podemos fazer novas aulas a partir da aula 1 se tiver mais gente interessada.&lt;/p&gt;
&lt;p&gt;E ai curtiram a ideia?&lt;/p&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Git squash?? WTF?</title><link href="http://blog.abraseucodigo.com.br/git-squash-wtf.html" rel="alternate"></link><published>2015-03-24T10:16:00-03:00</published><updated>2015-03-24T10:16:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2015-03-24:/git-squash-wtf.html</id><summary type="html">&lt;p&gt;Como fazer e pra que serve esse tal de git squash?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Galera conforme mencionei no post anterior.. estou contribuindo com o &lt;a href="https://github.com/puppet-community/puppetboard/"&gt;puppetboard&lt;/a&gt; (mais informações no post abaixo desse :P). E fiz meu primeiro Pull Request e talz resolvendo uma questão que estava na issue para acrescentar uma nova funcionalidade ao projeto. Porém quando eu fiz meu PR (Pull Request) teve um cara que me disse o seguinte:&lt;/p&gt;
&lt;p&gt;&lt;img alt="comment-github-image" src="/images/git-squash-wtf_01.png" title="comment-github-image"&gt;
**&lt;a href="http://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Squashing-Commits"&gt;squash&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ai eu pensei como qualquer ótimo conhecedor do Git que porras é essa de squash?&lt;/p&gt;
&lt;p&gt;O squash é uma prática utilizada para combinar mais de um commit em um commit só, desta forma eliminando "lixos" do projeto. Agora aqui neste post explicarei como raios você faz isso, pois não achei uma documentação simples que explicasse a uma pessoa normal como fazer isso, e após aprender, decidi TENTAR explicar de uma forma simples &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/smile.png"&gt;.&lt;/p&gt;
&lt;h2&gt;O projeto&lt;/h2&gt;
&lt;p&gt;Primeiro obviamente você precisa ter um repositório git, para isso eu criei um repositório BEEEM simples:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir teste  
$ &lt;span class="nb"&gt;cd&lt;/span&gt; teste  
$ git init  
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Rafael&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README  
$ git add README  
$ git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado Rafael&amp;quot;&lt;/span&gt; 

$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Henrique&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README  
$ git add README  
$ git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado Henrique&amp;quot;&lt;/span&gt; 

$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;da&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README
$ git add README  
$ git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado da&amp;quot;&lt;/span&gt; 

$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Silva&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README  
$ git add README  
$ git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado Silva&amp;quot;&lt;/span&gt; 

$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Correia&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README  
$ git add README  
$ git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado Correia&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Feito isso terei o seguinte histórico de commits:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git log --oneline  
4c03027 Adicionado Correia  
e23576b Adicionado Silva  
769bda9 Adicionado da  
2a71622 Adicionado Henrique  
5ebadcd Adicionado Rafael
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;O squash&lt;/h2&gt;
&lt;p&gt;Agora vamos imaginar que eu quero fazer um squash a partir de Henrique, ou seja quero que os commits 2a71622, 769bda9, e23576b e 4c03027 sejam um só, pois todos tratam da adição do sobrenome no arquivo README. Para isso precisarei usar o comando rebase do git no commit que eu desejo, no caso a partir do Henrique (como é a partir do Henrique deveremos pegar 1 commit antes):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git rebase -i 5ebadcd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Após executar este comando será aberto um arquivo temporário para podermos fazer as alterações desejadas, o arquivo será similar a este abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pick 2a71622 Adicionado Henrique  
pick 769bda9 Adicionado da  
pick e23576b Adicionado Silva  
pick 4c03027 Adicionado Correia 

# Rebase 5ebadcd..4c03027 onto 5ebadcd  
#  
# Commands:  
#  p, pick = use commit  
#  r, reword = use commit, but edit the commit message  
#  e, edit = use commit, but stop for amending  
#  s, squash = use commit, but meld into previous commit  
#  f, fixup = like &amp;quot;squash&amp;quot;, but discard this commit&amp;#39;s log message  
#  x, exec = run command (the rest of the line) using shell  
#  
# These lines can be re-ordered; they are executed from top to bottom.  
#  
# If you remove a line here THAT COMMIT WILL BE LOST.  
#  
# However, if you remove everything, the rebase will be aborted.  
#  
# Note that empty commits are commented out
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Neste mesmo arquivo já podemos visualizar algumas opções do que fazer com esses commits, para este post utilizaremos somente o squash, mas vale a pena conhecer as outras opções descritas abaixo de commands. Agora altere este arquivo da seguinte maneira:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pick 2a71622 Adicionado Henrique  
squash 769bda9 Adicionado da  
squash e23576b Adicionado Silva  
squash 4c03027 Adicionado Correia 

# Rebase 5ebadcd..4c03027 onto 5ebadcd  
#  
# Commands:  
#  p, pick = use commit  
#  r, reword = use commit, but edit the commit message  
#  e, edit = use commit, but stop for amending  
#  s, squash = use commit, but meld into previous commit  
#  f, fixup = like &amp;quot;squash&amp;quot;, but discard this commit&amp;#39;s log message  
#  x, exec = run command (the rest of the line) using shell  
#  
# These lines can be re-ordered; they are executed from top to bottom.  
#  
# If you remove a line here THAT COMMIT WILL BE LOST.  
#  
# However, if you remove everything, the rebase will be aborted.  
#  
# Note that empty commits are commented out
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As linhas dos commits 769bda9, e23576b e 4c03027 foram mudadas para squash, portanto serão combinados ao commit que possui a o nome pick, então o commit 2a71622 agora será unido aos 3 commits abaixo dele. É importante comentar que o squash não remove os logs (mensagens dos commits) conforme a descrição do "Commands" já a opção fixup descarta os logs. Feita esta alteração basta salvar o arquivo e sair. Feito isso será apresentado outro arquivo similar a este abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# This is a combination of 4 commits.  
# The first commit&amp;#39;s message is:  
Adicionado Henrique  
# This is the 2nd commit message:  
Adicionado da  
# This is the 3rd commit message:  
Adicionado Silva  
# This is the 4th commit message:  
Adicionado Correia  
# Please enter the commit message for your changes. Lines starting  
# with &amp;#39;#&amp;#39; will be ignored, and an empty message aborts the commit.  
#  
# Date:      Tue Mar 24 11:08:29 2015 -0300  
#  
# rebase in progress; onto 5ebadcd  
# You are currently editing a commit while rebasing branch &amp;#39;master&amp;#39; on &amp;#39;5ebadcd&amp;#39;.  
#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Neste arquivo você poderá mudar as mensagens de log (mensagens dos commits) caso desejar, se desejar mude alguma coisa e salve e saia do arquivo. Terminada a edição/salvamento deste arquivo você acabou o squash! Podemos ver no log como ficou a nova estrutura:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git log --oneline  
f4c9d80 Adicionado Henrique  
5ebadcd Adicionado Rafael 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ou:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git log  
commit f4c9d80a089ee35fca0eb7c6e5aabcb435fb9bb4  
Author: Rafael Henrique da Silva Correia &amp;lt;rafael@abraseucodigo.com.br&amp;gt;  
Date:   Tue Mar &lt;span class="m"&gt;24&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;:08:29 &lt;span class="m"&gt;2015&lt;/span&gt; -0300  
    Adicionado Henrique  

    Adicionado da  

    Adicionado Silva  

    Adicionado Correia

commit 5ebadcde3eb8c006bd33ee4c62f9cbb359822d6e  
Author: Rafael Henrique da Silva Correia &amp;lt;rafael@abraseucodigo.com.br&amp;gt;  
Date:   Tue Mar &lt;span class="m"&gt;24&lt;/span&gt; &lt;span class="m"&gt;11&lt;/span&gt;:08:14 &lt;span class="m"&gt;2015&lt;/span&gt; -0300  
    Adicionado Rafael
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Esta prática é bem interessante e deixa o repositório do git mais limpo, é MUITO válida principalmente em projetos grandes onde se tem muitos contribuidores (principalmente em projetos open source &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/smile.png"&gt;).&lt;/p&gt;</content><category term="git"></category><category term="squash"></category><category term="github"></category></entry></feed>