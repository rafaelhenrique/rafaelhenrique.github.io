<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Abra seu Código!!!</title><link href="http://blog.abraseucodigo.com.br/" rel="alternate"></link><link href="http://blog.abraseucodigo.com.br/feeds/all.atom.xml" rel="self"></link><id>http://blog.abraseucodigo.com.br/</id><updated>2015-10-28T19:49:00-02:00</updated><entry><title>Grupo de Estudos Python - Aula 01 - Resposta do Exercício</title><link href="http://blog.abraseucodigo.com.br/grupo-de-estudos-python-sorocaba-01_resposta.html" rel="alternate"></link><updated>2015-10-28T19:49:00-02:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2015-10-28:grupo-de-estudos-python-sorocaba-01_resposta.html</id><summary type="html">&lt;p&gt;Ao final da aula 01 foi passado um exercício bem básico, o qual agora vou mostrar passar a resposta, decidi fazer em post separado pois caso você ainda não tenha feito, você poderá ler o post da aula 02 sem spoilers.&lt;/p&gt;
&lt;h2&gt;Relembrando&lt;/h2&gt;
&lt;p&gt;Faça uma calculadora de soma conforme abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python3 calculadora_soma.py
Digite operando1:
10
Digite operando2:
40
Resultado: 50.0

&lt;span class="nv"&gt;$ &lt;/span&gt;python3 calculadora_soma.py
Digite operando1:
10
Digite operando2:
-2
Resultado: 8.0

&lt;span class="nv"&gt;$ &lt;/span&gt;python3 calculadora_soma.py
Digite operando1:
10
Digite operando2:
20
Resultado: 30.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Simples!? Conseguiram fazer!?&lt;/p&gt;
&lt;h2&gt;Explicação prévia&lt;/h2&gt;
&lt;p&gt;Basicamente você terá que receber dois números do usuário e mostrar a resposta na tela, existe a forma simples (e fácil) de resolver este exercício e a forma mais complexa.&lt;/p&gt;
&lt;h2&gt;Forma simples (o mundo ideal)&lt;/h2&gt;
&lt;p&gt;Você soma os números sempre esperando que o usuário seja bonzinho com você e realmente só digite números...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="nb"&gt;raw_input&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="nb"&gt;raw_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt; 
&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite operando1: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite operando2: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt; 
&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Resultado: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Este código é compatível com python2 e python3. A forma simples pode dar alguns problemas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python resposta_blog.py 
Digite operando1: a
Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
  File &lt;span class="s2"&gt;&amp;quot;resposta_blog.py&amp;quot;&lt;/span&gt;, line 7, in &amp;lt;module&amp;gt;
    &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; float&lt;span class="o"&gt;(&lt;/span&gt;raw_input&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Digite operando1: &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;
ValueError: could not convert string to float: a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Tentei somar a letra 'a', porém quando vou converter 'a' para float recebo um erro de conversão.&lt;/p&gt;
&lt;h2&gt;Forma mais complexa (o mundo real)&lt;/h2&gt;
&lt;p&gt;Você soma os números porém valida se realmente o que o usuário digitou é um número, pois eventualmente ele vai ser malandro e não digitar &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/trollface.png"&gt;...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt; 
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="nb"&gt;raw_input&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;     &lt;span class="nb"&gt;raw_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt; 
&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite operando1: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite operando2: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;13&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite somente números!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;14&lt;/span&gt;    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt; 
&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Resultado: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Desta forma mostrada acima não mostramos um exception tão feia para o usuário, caso o usuário informe uma letra esta saída ficará mais legível:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python resposta_blog.py 
Digite operando1: 1
Digite operando2: a
Digite somente números!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;E ai o que achou? Bem mais bonito né!? Caso tenha alguma dúvida (qualquer que seja ela) dos exemplos postados, por favor entre em contato. E logo sairá a aula 2 &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/wink.png"&gt;&lt;/p&gt;</summary><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Grupo de Estudos Python - Aula 01</title><link href="http://blog.abraseucodigo.com.br/grupo-de-estudos-python-sorocaba-01.html" rel="alternate"></link><updated>2015-10-14T22:53:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2015-10-14:grupo-de-estudos-python-sorocaba-01.html</id><summary type="html">&lt;p&gt;Olá! Já expliquei um pouco da história do Grupo de Estudos Python Sorocaba &lt;a href="http://blog.abraseucodigo.com.br/grupo-de-estudos-python-sorocaba.html"&gt;aqui&lt;/a&gt;, então nos próximos posts sobre o Grupo vou abordar o que andamos falando por lá. 
Na primeira aula de nivelamento Python foram abordados os seguintes tópicos chave:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Por que Python se chama Python?&lt;/li&gt;
&lt;li&gt;Por que Python? O que podemos fazer com Python?&lt;/li&gt;
&lt;li&gt;Filosofia Pythônica&lt;/li&gt;
&lt;li&gt;Instalando Python&lt;/li&gt;
&lt;li&gt;Usando Python&lt;/li&gt;
&lt;li&gt;input vs raw_input&lt;/li&gt;
&lt;li&gt;Cuidado com eval (usado no input do Python2.X)&lt;/li&gt;
&lt;li&gt;Python2 e Python3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alguns assuntos desses eu apenas mandei links para a galera ler, pois o tempo de 1h era muito pequeno pra ver tudo isso, e existem coisas muito "batidas" que eu não queria focar tanto, minha ideia era mais fazer o pessoal sair da primeira aula programando. Maassss como em um blog não existe tempo &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/raised_hands.png"&gt; pretendo explicar e mostrar coisas sobre estes assuntos todos neste post da Aula 01.&lt;/p&gt;
&lt;p&gt;Let's start...&lt;/p&gt;
&lt;h2&gt;Por que Python se chama Python?&lt;/h2&gt;
&lt;p&gt;Copiando literalmente as palavras da &lt;a href="http://wiki.python.org.br/PerguntasFrequentes/SobrePython#De_onde_surgiu_esse_nome.3F"&gt;Wiki Python Brasil&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Ao contrário do que normalmente se pensa, a origem do nome da linguagem não é a espécie de serpente &amp;quot;Pitón&amp;quot; e sim o grupo inglês de humoristas &amp;quot;Monty Python&amp;quot;. 
O uso da serpente como símbolo da linguagem se difundiu depois da publicação do ProgrammingPython da editora O&amp;#39;Reilly.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Por que Python? O que podemos fazer com Python?&lt;/h2&gt;
&lt;p&gt;Python é uma linguagem de altíssimo nível, extremamente poderosa e versátil. Maiores vantagens:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Muito fácil de ser aprendida&lt;/li&gt;
&lt;li&gt;Comunidade muito grande&lt;/li&gt;
&lt;li&gt;Os grandes mestres na comunidade são muito acessíveis para conversar/tirar dúvidas&lt;/li&gt;
&lt;li&gt;É uma linguagem limpa e tem isso como filosofia&lt;/li&gt;
&lt;li&gt;Por ser uma linguagem limpa fica fácil de você ler os códigos fonte de outras pessoas e entender o que está rolando ali&lt;/li&gt;
&lt;li&gt;Muitas bibliotecas para TUDO!&lt;/li&gt;
&lt;li&gt;Quantidade enorme de frameworks para os mais variados usos&lt;/li&gt;
&lt;li&gt;Não é Java ! Isso pra mim é uma vantagem &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/trollface.png"&gt; ! (me desculpem javeiros)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;É difícil definir um limite entre o que é possível fazer com Python e o que não é possível, mas não vou mentir, vou usar uma frase que é comumente utilizada por todos: &lt;strong&gt;Não existe bala de prata! Use o que for melhor para o seu projeto!&lt;/strong&gt; Python provavelmente tem um limite de alcance... proponho aos conhecedores mais avançados comentar sobre estas limitações nos comentários deste post. Mas eu como conhecedor nível médio em Python, digo que não encontrei algo que seja impossível fazer com Python.&lt;/p&gt;
&lt;p&gt;Tópicos da computação que estão muito na "moda" usando Python (e empregam muita gente):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Aplicações Web&lt;/li&gt;
&lt;li&gt;Computação científica&lt;/li&gt;
&lt;li&gt;Computação de Alto Desempenho &lt;/li&gt;
&lt;li&gt;IoT&lt;/li&gt;
&lt;li&gt;Análise de dados&lt;/li&gt;
&lt;li&gt;Sistemas de recomendações&lt;/li&gt;
&lt;li&gt;Aplicações Desktop (sim! ainda existem!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Links bacanas falando mais sobre por que usar Python:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.fullstackpython.com/why-use-python.html"&gt;Full Stack Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.python.org.br/PerguntasFrequentes/SobrePython"&gt;Wiki Python Brasil&lt;/a&gt; (tem umas coisas meio defasadas, cuidado)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://python.pro.br/pydoc/2.7/tutorial/appetite.html"&gt;Abrindo o Apetite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Filosofia Pythônica&lt;/h2&gt;
&lt;p&gt;O Python é regido por um "mantra" chamado Zen do Python, se você seguir esse "mantra" na hora de programar tudo seguirá de forma maravilhosamente bem... apresento-lhes o "mantra" Pythônico:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;Zen&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
    &lt;span class="n"&gt;Beautiful&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;ugly&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Explicit&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;implicit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Simple&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;complex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Complex&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;complicated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Flat&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;nested&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Sparse&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;dense&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Readability&lt;/span&gt; &lt;span class="n"&gt;counts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Special&lt;/span&gt; &lt;span class="n"&gt;cases&lt;/span&gt; &lt;span class="n"&gt;aren&lt;/span&gt;&lt;span class="c"&gt;&amp;#39;t special enough to break the rules.&lt;/span&gt;
    &lt;span class="n"&gt;Although&lt;/span&gt; &lt;span class="n"&gt;practicality&lt;/span&gt; &lt;span class="n"&gt;beats&lt;/span&gt; &lt;span class="n"&gt;purity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Errors&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;never&lt;/span&gt; &lt;span class="n"&gt;pass&lt;/span&gt; &lt;span class="n"&gt;silently&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Unless&lt;/span&gt; &lt;span class="n"&gt;explicitly&lt;/span&gt; &lt;span class="n"&gt;silenced&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="ow"&gt;In&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;face&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;ambiguity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;refuse&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;temptation&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;guess&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;There&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;preferably&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;obvious&lt;/span&gt; &lt;span class="n"&gt;way&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Although&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;way&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;obvious&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="c"&gt;&amp;#39;re Dutch.&lt;/span&gt;
    &lt;span class="n"&gt;Now&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;never&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Although&lt;/span&gt; &lt;span class="n"&gt;never&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;often&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;hard&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;explain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="c"&gt;&amp;#39;s a bad idea.&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;easy&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;explain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt; &lt;span class="n"&gt;idea&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;Namespaces&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;honking&lt;/span&gt; &lt;span class="n"&gt;great&lt;/span&gt; &lt;span class="n"&gt;idea&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt;&lt;span class="c"&gt;&amp;#39;s do more of those!&lt;/span&gt;

    &lt;span class="n"&gt;Tim&lt;/span&gt; &lt;span class="n"&gt;Peters&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;tim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;peters&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;gmail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fonte: &lt;a href="https://www.python.org/dev/peps/pep-0020/"&gt;PEP-20&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Existem muitas derivações e interpretações a partir deste mantra na internet, vou citar os que achei mais legais:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hacktoon.com/log/2015/programming-comics-3/"&gt;Zen of Python em ilustrado&lt;/a&gt; - &lt;a href="https://twitter.com/hacktoon"&gt;@hacktoon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luanfonceca/oxente"&gt;Cordel do Python&lt;/a&gt; - &lt;a href="https://github.com/luanfonceca"&gt;luanfonseca&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vsouza/Minerin-do-Python"&gt;Minerin do Python&lt;/a&gt; - &lt;a href="https://github.com/vsouza"&gt;vsouza&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Instalando Python&lt;/h2&gt;
&lt;p&gt;Em sistemas operacionais Linux o Python 2.6 já é a versão default. Mas deixo aqui dicas de como instalar outras versões. Seria legal ter instalado pelo menos uma versão &amp;gt;= 2.7 e uma versão &amp;gt;= 3.4, para que assim você possa comparar algumas pequenas coisas que serão comentadas mais a frente. Caso leia os procedimentos/tutoriais passados abaixo e não consiga instalar Python em seu PC mesmo assim por favor me diga qual problema você encontrou nos comentários abaixo deste Post.&lt;/p&gt;
&lt;h2&gt;Instalando Python em sistemas operacionais Linux Debian-Like&lt;/h2&gt;
&lt;p&gt;Todo sistema operacional Debian-like (Debian, Ubuntu, Xubuntu, Linux Mint... etc) possui apt-get, então isso já facilita muito a instalação, basta digitar (estando logado como root) os seguintes comandos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# apt-get update
# apt-get install python3.4 python3.4-venv python2.7 python-virtualenv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Dúvidas sobre como usar o apt-get!? Consulte a &lt;a href="http://wiki.ubuntu-br.org/AptGet"&gt;Wiki do Ubuntu-BR&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Instalando Python em sistemas operacionais Linux Red Hat-Like&lt;/h2&gt;
&lt;p&gt;Existe um tutorial muito bom pra isso &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-python-2-7-6-and-3-3-3-on-centos-6-4"&gt;aqui no tutorial da Digital Ocean&lt;/a&gt; no momento estou sem tempo de criar uma VM de CentOS só para fazer esta instalação e documentar, mas achei muito bom este tutorial criado pela Digital Ocean. &lt;/p&gt;
&lt;h2&gt;Instalando Python em sistemas operacionais Apple&lt;/h2&gt;
&lt;p&gt;Eu não tenho afinidade nenhuma com sistemas Apple mas achei &lt;a href="http://www.ime.usp.br/~mac2166/python/macos.html"&gt;esse tutorial&lt;/a&gt; bem convincente, se vocês testarem e funcionar me avisem &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/smirk.png"&gt;.
Também temos o tutorial da documentação oficial &lt;a href="https://docs.python.org/2/using/mac.html"&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Instalando Python em sistemas operacionais Microsoft Windows&lt;/h2&gt;
&lt;p&gt;Se eu não tenho afinidade com Apple .... tenho muito menos afinidade com Windows &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/confused.png"&gt;.
Mas creio que para este cara temos alguns tutoriais bem bacanas também:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/2/using/windows.html"&gt;Tutorial Oficial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Es_kdnPUgDg"&gt;How to install Python, Setuptools, Pip and Virtualenv on Windows in 5 minutes (XP / 7 / 8)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonclub.com.br/instalacao-python-django-windows.html"&gt;Instalando e Configurando o Python e Django no Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Usando Python&lt;/h2&gt;
&lt;p&gt;Agora que você já instalou o Python então vamos conhecê-lo né!?&lt;/p&gt;
&lt;p&gt;No seu terminal (seja windows/linux/mac) digite python e tecle enter conforme mostrado abaixo (o &lt;code&gt;$&lt;/code&gt; é apenas uma indicação que estou digitando o comando no terminal, não precisa digitar ok!?):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python
Python 2.7.9 &lt;span class="o"&gt;(&lt;/span&gt;default, Mar  &lt;span class="m"&gt;1&lt;/span&gt; 2015, 12:57:24&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;GCC 4.9.2&lt;span class="o"&gt;]&lt;/span&gt; on linux2
Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt;&amp;gt;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Uma saída similar será apresentada para você, para sair do terminal interativo do python você poderá teclar &lt;code&gt;Ctrl + D&lt;/code&gt; ou digitar o comando &lt;code&gt;exit()&lt;/code&gt; (os parênteses são necessários), faça isso para sair do terminal interativo para você ir se acostumando &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/wink.png"&gt;. &lt;/p&gt;
&lt;p&gt;Se você já instalou mais de uma versão do Python neste passo (o que é extremamente recomendável) você poderá abrir o terminal interativo das diferentes versões que você instalou, conforme mostrado abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python2.7
Python 2.7.9 &lt;span class="o"&gt;(&lt;/span&gt;default, Mar  &lt;span class="m"&gt;1&lt;/span&gt; 2015, 12:57:24&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;GCC 4.9.2&lt;span class="o"&gt;]&lt;/span&gt; on linux2
Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt;&amp;gt;&amp;gt; &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;python3.4
Python 3.4.2 &lt;span class="o"&gt;(&lt;/span&gt;default, Oct  &lt;span class="m"&gt;8&lt;/span&gt; 2014, 10:45:20&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;GCC 4.9.1&lt;span class="o"&gt;]&lt;/span&gt; on linux
Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt;&amp;gt;&amp;gt; &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Seria legal abrir os interpretadores das diferentes versões instaladas para ver se correu tudo bem com sua instalação.&lt;/p&gt;
&lt;h2&gt;Vamos fazer continhas!?&lt;/h2&gt;
&lt;p&gt;Agora que você está com Python instalado e o interpretador de comandos Python funcionando, vamos dar uma brincada, você sabia que o interpretador de comandos Python também pode ser usado como uma calculadora!? Não!? Pois é, deixa eu te mostrar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python
Python 2.7.9 &lt;span class="o"&gt;(&lt;/span&gt;default, Mar  &lt;span class="m"&gt;1&lt;/span&gt; 2015, 12:57:24&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;GCC 4.9.2&lt;span class="o"&gt;]&lt;/span&gt; on linux2
Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt;&amp;gt;&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;400&lt;/span&gt; / 3&lt;span class="o"&gt;)&lt;/span&gt; + 2
135
&amp;gt;&amp;gt;&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;400&lt;/span&gt; / 3&lt;span class="o"&gt;)&lt;/span&gt; + &lt;span class="m"&gt;2&lt;/span&gt; * 4
141
&amp;gt;&amp;gt;&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;400&lt;/span&gt; / 3&lt;span class="o"&gt;)&lt;/span&gt; + &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; * 4&lt;span class="o"&gt;)&lt;/span&gt;
141
&amp;gt;&amp;gt;&amp;gt; &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="m"&gt;400&lt;/span&gt; / 3&lt;span class="o"&gt;)&lt;/span&gt; + 2&lt;span class="o"&gt;)&lt;/span&gt; * 4
540
&amp;gt;&amp;gt;&amp;gt; &lt;span class="m"&gt;4&lt;/span&gt; + 4
8
&amp;gt;&amp;gt;&amp;gt; &lt;span class="m"&gt;5&lt;/span&gt; - 4
1
&amp;gt;&amp;gt;&amp;gt; &lt;span class="m"&gt;10&lt;/span&gt; - 1
9
&amp;gt;&amp;gt;&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt; ** 2
4
&amp;gt;&amp;gt;&amp;gt; &lt;span class="m"&gt;2&lt;/span&gt; ** 3
8
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Perceba que os parênteses fazem diferença assim como nas equações matemáticas, e aqui números reais devem ser escritos com um &lt;code&gt;.&lt;/code&gt; como separador de casas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; 3.4 + 5.4
8.8
&amp;gt;&amp;gt;&amp;gt; 3,4 + 5,5
(3, 9, 5)
&amp;gt;&amp;gt;&amp;gt; 5.7 + 4.5
10.2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Perceba aqui que a &lt;code&gt;,&lt;/code&gt; serve pra outra coisa! Outra hora volto nesse assunto da vírgula ai, por enquanto só guarde na sua cabeça que contas com números reais (float) devem ser feitas com &lt;code&gt;.&lt;/code&gt;, beleza!?&lt;/p&gt;
&lt;h2&gt;Quer fazer continhas mais loucas!?&lt;/h2&gt;
&lt;p&gt;Sempre olhe a documentação oficial do Python antes de procurar em qualquer outro lugar, então a documentação dos tipos numéricos básicos pode ser lida &lt;a href="https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex"&gt;aqui&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Outra dica é sempre ler a documentação de acordo com a versão do Python que você está usando no momento, perceba que no canto superior esquerdo da documentação oficial sempre terá a versão que você está lendo, esta que eu passei acima é do Python3.&lt;/p&gt;
&lt;h2&gt;Como escrever coisas!?&lt;/h2&gt;
&lt;p&gt;Bom, para escrever coisas na tela (stdout) é bem simples também... vamos lá:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python3.4
Python 3.4.2 &lt;span class="o"&gt;(&lt;/span&gt;default, Oct  &lt;span class="m"&gt;8&lt;/span&gt; 2014, 10:45:20&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;GCC 4.9.1&lt;span class="o"&gt;]&lt;/span&gt; on linux
Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt;&amp;gt;&amp;gt; print&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Olá amigo!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Olá amigo!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Feito!&lt;/p&gt;
&lt;h2&gt;Como escrever coisas dentro de coisas!? (ou melhor.. concatenar strings)&lt;/h2&gt;
&lt;p&gt;Hãm!? Como assim!? É cara... as vezes eu também não entendo o que eu escrevo, mas explicando acho que melhora:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python3.4
Python 3.4.2 &lt;span class="o"&gt;(&lt;/span&gt;default, Oct  &lt;span class="m"&gt;8&lt;/span&gt; 2014, 10:45:20&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;GCC 4.9.1&lt;span class="o"&gt;]&lt;/span&gt; on linux
Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;nome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Rafael&amp;quot;&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; print&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Meu nome é &amp;quot;&lt;/span&gt;, nome&lt;span class="o"&gt;)&lt;/span&gt;
Meu nome é Rafael
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Opa! Gravei uma string Rafael dentro de uma variável nome e escrevi ela na tela! Puts ... bem legal em!? Isso começa a parecer um programa de verdade!&lt;/p&gt;
&lt;h2&gt;Montando um programinha "completo"&lt;/h2&gt;
&lt;p&gt;Vamos agora capturar uma entrada de usuário (stdin) no nosso programinha. Vamos lá:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python3.4
Python 3.4.2 &lt;span class="o"&gt;(&lt;/span&gt;default, Oct  &lt;span class="m"&gt;8&lt;/span&gt; 2014, 10:45:20&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;GCC 4.9.1&lt;span class="o"&gt;]&lt;/span&gt; on linux
Type &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; or &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; more information.
&amp;gt;&amp;gt;&amp;gt; &lt;span class="nv"&gt;nome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; input&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Qual seu nome? &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Qual seu nome? Rafael
&amp;gt;&amp;gt;&amp;gt; print&lt;span class="o"&gt;(&lt;/span&gt;nome&lt;span class="o"&gt;)&lt;/span&gt;
Rafael
&amp;gt;&amp;gt;&amp;gt; print&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Meu nome é&amp;quot;&lt;/span&gt;, nome&lt;span class="o"&gt;)&lt;/span&gt;
Meu nome é Rafael
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Testa ai! Veja se funciona bem! E vamos melhorar isso ai! &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/joy.png"&gt;&lt;/p&gt;
&lt;h2&gt;Interpretadores, comandos, wtf é tudo isso!?&lt;/h2&gt;
&lt;p&gt;O que fizemos até agora foi usando o interpretador interativo do Python, mas o que é isso?&lt;/p&gt;
&lt;p&gt;Python é uma linguagem interpretada (talvez eu já deveria ter falado isso no começo do post). Nas palavras do Henrique Bastos (um dos grandes mestres Python que andei conhecendo em minhas jornadas):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Na computação, a compilação é o processo que reúne o código fonte e o transforma em algo que faça mais sentido para o computador. Do ponto de vista do código fonte, toda linguagem de programação é compilada.&lt;/p&gt;
&lt;p&gt;O produto final do processo de compilação de uma linguagem diz muito sobre seu design. Linguagens como C e C++ são compiladas estaticamente, e seus códigos fontes são transformados diretamente em linguagem de máquina. Enquanto as linguagens mais modernas como Java, C# e Python têm seus códigos fontes transformados em uma linguagem intermediária (específica de cada linguagem), que será interpretada pela máquina virtual da linguagem quando o programa for executado.&lt;/p&gt;
&lt;p&gt;Este processo de interpretação da linguagem intermediária durante a execução do programa, consiste na tradução dos comandos da linguagem intermediária para linguagem de máquina. Sendo assim, em tempo de execução, o código intermediário pode ser encarado como um “código fonte” que será compilado dinamicamente pelo interpretador da linguagem em código de máquina."&lt;/p&gt;
&lt;p&gt;Fonte: &lt;a href="http://henriquebastos.net/diferencas-entre-linguagem-compilada-e-linguagem-interpretada/"&gt;Diferenças entre linguagem compilada e linguagem interpretada&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Então como Python é uma linguagem interpretada os criadores tiveram a brilhante ideia de fazer um interpretador interativo onde podemos testar nossos programas antes de sair fazendo por ai, isso torna muito mais fácil desenvolver qualquer coisa em Python (não desmerecendo outras linguagens que também tem interpretadores interativos, tal como &lt;a href="https://www.ruby-lang.org/pt/documentation/quickstart/"&gt;o irb do Ruby&lt;/a&gt;). O que fizemos até o momento foi testar alguns comandos (functions) embutidos (built-in) do Python para simplesmente conhecê-los.&lt;/p&gt;
&lt;h2&gt;Eai!? Vamos fazer um script de verdade ou não!?&lt;/h2&gt;
&lt;p&gt;Vamos lá... 
Utilizando um editor de texto que use UTF-8 para salvar os arquivos (se não conhecer nenhum recomendo o &lt;a href="http://www.sublimetext.com/"&gt;Sublime&lt;/a&gt;) crie o seguinte programinha:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Este é o exemplo mais besta do mundo! Mas é melhor que Hello World!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:-o -- &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Salve este cara como &lt;code&gt;hello_world.py&lt;/code&gt; e execute este cara assim (o &lt;code&gt;$&lt;/code&gt; é apenas uma indicação que estou digitando o comando no terminal, não precisa digitar ok!?):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python hello_world.py

Saída:
Este é o exemplo mais besta &lt;span class="k"&gt;do&lt;/span&gt; mundo! Mas é melhor que Hello World!
:-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o --
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esse exemplo é bem legal pois no Python2.X ele vai dar ERROOOOO, erros são ótimos para o aprendizado! E qual o erro!? Veja a saída abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python hello_world.py

Saída:
  File &lt;span class="s2"&gt;&amp;quot;hello_world.py&amp;quot;&lt;/span&gt;, line 1
SyntaxError: Non-ASCII character &lt;span class="s1"&gt;&amp;#39;\xc3&amp;#39;&lt;/span&gt; in file hello_world.py on line 1, but no encoding declared&lt;span class="p"&gt;;&lt;/span&gt; see http://python.org/dev/peps/pep-0263/ &lt;span class="k"&gt;for&lt;/span&gt; details
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vishhhh! E agora!?&lt;/p&gt;
&lt;p&gt;O Python2.X trabalha por padrão com caracteres ASCII (leia-se aski e não asc2 por favor), então quando colocamos um mínimo acento temos que especificar que trabalharemos com utf-8, pois o utf-8 não é o padrão do Python2.X, no caso o nosso acento é o do &lt;code&gt;é&lt;/code&gt;, removendo este acento este programinha funcionaria perfeitamente, veja:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python hello_world.py 

Saída:
Este e o exemplo mais besta &lt;span class="k"&gt;do&lt;/span&gt; mundo! Mas e melhor que Hello World!
:-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o -- :-o --
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Você quer dizer que o Python2.X não suporta ACENTOS!?????&lt;/h2&gt;
&lt;p&gt;Não não amigo! Você entendeu mal... eu disse que o Python2.X trabalha por padrão com ASCII, para que ele entenda que deve trabalhar com utf-8 para ler seus lindos acentos do print você deverá especificar isso no código fonte conforme abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Este é o exemplo mais besta do mundo! Mas é melhor que Hello World!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:-o -- &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pronto! Arrume seu programinha ai (voltando também o &lt;code&gt;é&lt;/code&gt; caso você o tenha removido) e execute novamente conforme mostrado acima.&lt;/p&gt;
&lt;h2&gt;Um programinha mais legal&lt;/h2&gt;
&lt;p&gt;Programinha... nome estranho esse &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/joy.png"&gt;, mas eu tenho costume de escrever coisas estranhas as vezes, não fiquem chateados comigo se eu escrever script, programinha, sistema, softwarezinho e coisas do tipo, na verdade todas elas vão significar um sistema feito em Python ok!?&lt;/p&gt;
&lt;p&gt;Continuando...&lt;/p&gt;
&lt;p&gt;Agora crie o seguinte programinha abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;numero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt; 
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número é {0}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número é&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numero&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número é &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Linha 1: Especificamos nossa codificação do programinha;&lt;/li&gt;
&lt;li&gt;Linha 2: Recebemos um número do usuário, o input espera o usuário digitar alguma coisa e digitar enter em seguida para continuar o programa&lt;/li&gt;
&lt;li&gt;Linha 3: Não tem nada &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/trollface.png"&gt;&lt;/li&gt;
&lt;li&gt;Linha 4: Mostra o número na tela usando o format&lt;/li&gt;
&lt;li&gt;Linha 5: Mostra o número na tela concatenando string com o número por meio de &lt;code&gt;,&lt;/code&gt; esta saída ficará bem estranha se você rodar no Python2.X, essa sintaxe representa coisas diferentes no Python2.X e no Python3.X&lt;/li&gt;
&lt;li&gt;Linha 6: Mostra o número na tela concatenando string com o número por meio de &lt;code&gt;+&lt;/code&gt; e conversão (cast) do número para string, você não precisará converter se estiver usando Python3.X&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Explicando algo um pouco mais aprofundado, tenha ciência que Python2.X e Python3.X são diferentes, algumas coisas mudam de significado MESMO, mas a diferença é pouca, é legal sempre testar o mesmo código no 2 e no 3 enquanto se aprende Python, mas caso você não tenha muito saco pra isso dê maior foco ao Python3.X. Algumas diferenças são listadas &lt;a href="http://python3porting.com/differences.html"&gt;aqui&lt;/a&gt; e podem ser consultadas durante a leitura destas aulas que postarei.&lt;/p&gt;
&lt;h2&gt;input vs raw_input&lt;/h2&gt;
&lt;p&gt;Caso vocês executem o script acima utilizando Python2.X poderão notar algumas diferenças. No Python2.X quando usamos o input na verdade estamos utilizando por baixo uma função bem importante chamada &lt;code&gt;eval&lt;/code&gt; junto a esse input, vamos entender isso:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python2.7 numero.py 

Saída:
Digite um número: 2+2
O número é 4
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;O n\xc3\xbamero \xc3\xa9&amp;#39;&lt;/span&gt;, 4&lt;span class="o"&gt;)&lt;/span&gt;
O número é 4
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Quando passamos uma expressão para o input ele vai fazer um &lt;code&gt;evaluate&lt;/code&gt; (em português acho que a tradução melhor seria calcular/avaliar) daquela expressão! Ou seja, ele vai resolver a expressão para depois guardar o resultado dela na variável especificada que no nosso caso se chama &lt;code&gt;numero&lt;/code&gt;. Isso parece lindo em um primeiro momento, mas quando se usa &lt;code&gt;eval&lt;/code&gt; em qualquer lugar não somente em Python sempre devemos tomar MUITO cuidado, vamos analisar o código abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;minha_senha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rafael123&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;numero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número é: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Executando este script temos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python2.7 numero.py

Saída:
Digite um número: minha_senha
O número é: rafael123
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Então amiguinhos!!! Vocês acabam de capturar uma variável do seu script!!! Isso pode ser extremamente perigoso em um ambiente real!! Para isso você pode usar no Python2.X a função built-in chamada &lt;code&gt;raw_input&lt;/code&gt; que não faz eval por baixo dos panos e torna sua vida muito mais segura:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;minha_senha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rafael123&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;numero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número é: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Execução:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python2.7 numero.py

Saída:
Digite um número: minha_senha
O número é: minha_senha
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para que a gente consiga compatibilidade entre Python2.X e Python3.X neste script acima poderíamos fazer algo bem simples:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="nb"&gt;raw_input&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="nb"&gt;raw_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt; 
&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;minha_senha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rafael123&amp;#39;&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="n"&gt;numero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Digite um número: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;O número é: {}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numero&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Linha 2 e 3: Tenta verificar se existe a palavra &lt;code&gt;raw_input&lt;/code&gt; neste Python que chamará o script&lt;/li&gt;
&lt;li&gt;Linha 4 e 5: Caso não exista raw_input o raw_input será o mesmo que o input&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vale lembrar que o input no Python3.X não usa &lt;code&gt;eval&lt;/code&gt; por baixo dos panos, sendo assim ele é bem tranquilo de ser usado no Python3.X.&lt;/p&gt;
&lt;h2&gt;Fim de aula - Exercício para aula 02&lt;/h2&gt;
&lt;p&gt;Bom ... não quero perder o ritmo que foi feito no Grupo de Estudos Python Sorocaba, então vou seguir a mesma dinâmica onde todo final de aula rola um exercício! O primeiro exercício será fazer uma calculadora que faça soma, conforme mostrada a saída abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python3 calculadora_soma.py
Digite operando1:
10
Digite operando2:
40
Resultado: 50.0

&lt;span class="nv"&gt;$ &lt;/span&gt;python3 calculadora_soma.py
Digite operando1:
10
Digite operando2:
-2
Resultado: 8.0

&lt;span class="nv"&gt;$ &lt;/span&gt;python3 calculadora_soma.py
Digite operando1:
10
Digite operando2:
20
Resultado: 30.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Eai!? Aceita o desafio!? A resposta para este problema está no que eu disse/mostrei neste post inicial, basta ler com atenção. Se você estiver com dúvidas por favor me avise, ai a gente bate um papo, pode usar o comentário abaixo deste post pra isso ou me mandar e-mail, twitter e etc, meus contatos estão a esquerda do blog.&lt;/p&gt;
&lt;p&gt;Espero que tenham gostado da primeira aula, e se viram algo que não gostaram muito me avisem &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/wink.png"&gt;&lt;/p&gt;
&lt;p&gt;Abraço!&lt;/p&gt;</summary><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Como criar seu PaaS com Tsuru</title><link href="http://blog.abraseucodigo.com.br/como-criar-seu-paas-com-tsuru.html" rel="alternate"></link><updated>2015-09-22T22:48:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2015-09-22:como-criar-seu-paas-com-tsuru.html</id><summary type="html">&lt;p&gt;Começo este post dizendo que gostei bastante da proposta do Tsuru. &lt;/p&gt;
&lt;h2&gt;Mas o que é o Tsuru?&lt;/h2&gt;
&lt;p&gt;Tsuru é um software que você pode criar seu próprio &lt;a href="https://en.wikipedia.org/wiki/Platform_as_a_service"&gt;PaaS&lt;/a&gt; explicando de forma simples, você tem um &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;/&lt;a href="https://www.openshift.com"&gt;Openshift&lt;/a&gt; pessoal onde você tem controle completo na máquina e você pode fazer o que bem entender.&lt;/p&gt;
&lt;h2&gt;E pra que serve esse tal Tsuru?&lt;/h2&gt;
&lt;p&gt;Serve para você fazer deploy de suas aplicações de forma BRUTALMENTE RÁPIDA, com a vantagem de não pagar nada para o Openshift nem para o Heroku, mesmo que seja uma aplicação grande e pesada, quem vai gerenciar os recursos é você mesmo, então se sua máquina "explodir" a culpa será sua, pois você tem controle absoluto sobre os recursos da máquina em que você irá instalar o Tsuru.&lt;/p&gt;
&lt;h2&gt;Quem é o pai do Tsuru?&lt;/h2&gt;
&lt;p&gt;O pai do Tsuru (pelo que eu sei pelo menos) é o Andrews Medina, e este cara começou a desenvolver o Tsuru dentro da Globo.com. Podemos ver até na doc do Tsuru o Copyright da Globo.com, isso fica bem evidente que a Globo.com tem um dedinho ai.&lt;/p&gt;
&lt;p&gt;O Andrews Medina também fez inúmeros vídeos no YouTube muito bons explicando mais sobre o Tsuru, recomendo TODOS.. principalmente os três abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YD3iNEBb4t0"&gt;tsuru - fazendo deploys de forma simples e divertida&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=h68DCFFXGW0"&gt;Garoa Hacker | Entrevista: Andrews Medina (possui 3 partes)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dC79RpifEQI"&gt;Garoa Hacker Club | Andrews Medina - Tsuru Live Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Por que raios eu estou falando do Tsuru?&lt;/h2&gt;
&lt;p&gt;Volto a dizer... achei SENSACIONAL o deploy realizado pelo Tsuru, extremamente rápido e seguro. Então ontem eu subi o meu PaaS utilizando o Tsuru &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/raised_hands.png"&gt;.&lt;/p&gt;
&lt;h2&gt;Procedimentos básicos&lt;/h2&gt;
&lt;p&gt;A doc do Tsuru é excelente e pode ser lida &lt;a href="http://docs.tsuru.io/en/stable/understanding/index.html"&gt;aqui&lt;/a&gt;, mas tem um porém, caso você seja apenas um xereta (assim como eu), não recomendo fazer a instalação através dessa doc, pois você irá travar assim como eu no passo &lt;a href="http://docs.tsuru.io/en/stable/installing/adding-nodes.html"&gt;Adding Nodes&lt;/a&gt; muito provavelmente. &lt;/p&gt;
&lt;p&gt;Neste "Adding Nodes" é o passo onde você terá que adicionar uma *instância de IaaS da &lt;a href="https://aws.amazon.com/pt/ec2/"&gt;Amazon EC2&lt;/a&gt; ou de &lt;a href="https://cloudstack.apache.org/"&gt;Apache CloudStack&lt;/a&gt;, por isso eu disse que você provavelmente vai travar se for um curioso, por que?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pois no EC2 você terá que pagar a instância, que é uma coisa que provavelmente você não vai querer fazer a princípio&lt;/li&gt;
&lt;li&gt;e o CloudStack não é pago, porém extremamente complexo, pelo menos eu achei&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Portanto minha escolha óbvia foi fazer o "procedimento mais fácil" (dica do @rpedigoni) que é usar o &lt;a href="https://github.com/tsuru/now"&gt;Tsuru Now&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;* Não sei se o nome certo para o CloudStack é instância, se eu estiver errado me desculpem&lt;/p&gt;
&lt;h2&gt;Procedimento "mais fácil"&lt;/h2&gt;
&lt;p&gt;Cara por que eu coloquei essas aspas ai? &lt;/p&gt;
&lt;p&gt;Meu, o Tsuru Now é um script em Shell bem antiguinho (pelo menos ao meu ver) e ele não é tão intuitivo como promete, creio que na época que ele foi criado ele deveria ser mais fácil de usar, mas agora devido ao tempo e versões mais novas de sistema operacional ele se tornou meio obsoleto.&lt;/p&gt;
&lt;p&gt;Mas mesmo obsoleto galera, eu ainda recomendo esse cara, pois se você aprender a domá-lo você consegue subir o Tsuru bem tranquilão.&lt;/p&gt;
&lt;h2&gt;Ferramentas utilizadas&lt;/h2&gt;
&lt;p&gt;Para subir o meu Tsuru estou utilizando:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tsuru/now"&gt;Tsuru Now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-create-your-first-digitalocean-droplet-virtual-server"&gt;Um droplet da Digital Ocean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;S.O. Ubuntu 14.04 x64&lt;/li&gt;
&lt;li&gt;512MB Ram &lt;/li&gt;
&lt;li&gt;20GB SSD Disk &lt;/li&gt;
&lt;li&gt;New York 3&lt;/li&gt;
&lt;li&gt;Neste droplet a configuração default da Digital Ocean é vir 2 interfaces de rede, uma eth0 que será o ip externo e a lo que representa o loopback&lt;/li&gt;
&lt;li&gt;Valor desse cara $5 por mês&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Caso você não queira pagar absolutamente NADA também é possível, você só terá o trabalho de configurar as interfaces da sua máquina física (ou virtual, sei lá) e instalar o Ubuntu 14.04 x64 (o x32 eu não testei e não sei se funciona bem!).&lt;/p&gt;
&lt;h2&gt;Problemas encontrados logo no começo&lt;/h2&gt;
&lt;p&gt;No repositório do &lt;a href="https://github.com/tsuru/now"&gt;github do Tsuru Now&lt;/a&gt; tem algumas informações faltantes a respeito da compatibilidade com os Sistemas operacionais. Lá no README ele menciona que este script funciona em Debian e Ubuntu, mas não diz a versão &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/pensive.png"&gt;.&lt;/p&gt;
&lt;p&gt;Eu como um bom paranóico amante de Debian, fui logo criando um droplet na Digital Ocean com o Debian mais novo que encontrei o 8.1~8.2 (Jessie Stable), ai rodei o script conforme manda o README:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# curl -sL https://raw.githubusercontent.com/tsuru/now/master/run.bash | bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Coisa linda pra se ver.... massss... não consegui nem ir até 50% da instalação, logo de cara falta o pacote linux-image-extras-* no Debian, e adicionar repositórios começa a ficar meio impraticável pois eu como um bom paranóico, acredito, que se ele não está no repositório main alguma razão deve ter.&lt;/p&gt;
&lt;p&gt;Eis que pensei &lt;em&gt;"pooo... se não vai Debian, os caras devem gostar de Ubuntu... vamos de Ubuntu"&lt;/em&gt;, ai novamente como um bom paranóico fui logo escolhendo a versão MAIS NOVA do Ubuntu, a versão 15.04 x64.... e adivinhem?? Problema de novo.... se não me engano com o mesmo pacote.&lt;/p&gt;
&lt;p&gt;Ai novamente como um bom brasileiro que não desiste nunca fui de novo agora pensei &lt;em&gt;"poooo.... se os caras não gostam desse Ubuntu vou usar o Ubuntu que está referenciado na doc oficial do Tsuru"&lt;/em&gt; que vem a ser o 14.04 ! &lt;/p&gt;
&lt;p&gt;E desta vez fiz progressos significativos, MUITO SIGNIFICATIVOS e consegui concluir cerca de 80% da instalação e o script foi dar pau lá pelo finalzinho próximo da &lt;code&gt;linha 671&lt;/code&gt; quando ele chama a função &lt;code&gt;config_tsuru_post&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ai começa meu instinto de programador maluco e fui depurando a parada. Pelo que pude ver o script não estava pegando meu ip externo adequadamente.&lt;/p&gt;
&lt;h2&gt;Variáveis/adaptação e funcionamento completo&lt;/h2&gt;
&lt;p&gt;Como o Tsuru Now não conseguia pegar meu ip corretamente fui lá e comecei a testar coisas de modo que fizesse o filho da mãe funcionar. Eis que por fim eu consegui, e vou dar a receita de bolo pra vocês. Clone o repositório do Tsuru Now inicialmente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# git clone git@github.com:tsuru/now.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nas primeiras linhas do script chamado &lt;code&gt;run.bash&lt;/code&gt; tem algumas variáveis interessantes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1  #!/bin/bash -ue
2 
3  # Copyright 2015 tsuru-now authors. All rights reserved.
4  # Use of this source code is governed by a BSD-style
5  # license that can be found in the LICENSE file.
6 
7  set -eu
8
9  release=&amp;quot;&amp;quot;
10 codename=&amp;quot;&amp;quot;
11 host_ip=&amp;quot;&amp;quot;
12 private_ip=&amp;quot;&amp;quot;
13 host_name=&amp;quot;&amp;quot;
14 set_interface=&amp;quot;&amp;quot;
15 is_debug=&amp;quot;&amp;quot;
16 docker_node=&amp;quot;&amp;quot;
17 set_interface=&amp;quot;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Destas 17 linhas as variáveis que resolveram minha vira foram &lt;code&gt;host_ip&lt;/code&gt; e &lt;code&gt;private_ip&lt;/code&gt;, nestas duas eu setei meu ip &lt;strong&gt;EXTERNO (ou seja o ip que a galera de fora da sua rede vê)&lt;/strong&gt;, caso você tenha dúvidas qual é seu ip externo recomendo olhar no site &lt;a href="https://www.whatismyip.com/"&gt;What Is My Ip?&lt;/a&gt; que lá ele vai te mostrar o seu ip externo(mas faz o favor de olhar da máquina que você está instalando o Tsuru &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/joy.png"&gt;).&lt;/p&gt;
&lt;p&gt;Feito isso rodei o script novamente da seguinte maneira (você precisará executar como root, ou usando sudo):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# bash run.bash --host-ip &amp;lt;meu ip externo&amp;gt; | tee log_run.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Troque &amp;lt;meu ip externo&gt; pelo seu ip externo. &lt;/p&gt;
&lt;p&gt;Executando esse comando vá tomar banho, comer, tomar café ou outra coisa desse tipo, pois vai demorar um pouco (calculo pelo menos uns 15 minutos caso você não use um hd SSD).&lt;/p&gt;
&lt;p&gt;Usei o comando &lt;code&gt;| tee log_run.log&lt;/code&gt; para que ele gere um arquivo contendo todo output (erros e não erros) do script, se você quiser analisar depois como foi a instalação ficará mais fácil você ler este arquivo.&lt;/p&gt;
&lt;h2&gt;Finish him!&lt;/h2&gt;
&lt;p&gt;Se tudo correr bem ao fim dessa execução seu Tsuru já vai estar funcionando de forma básica pronta para testes bacaninhas. É importante em um primeiro momento alterar a senha do admin e rodar &lt;code&gt;source ~/.bashrc&lt;/code&gt; conforme manda o próprio Tsuru Now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;######################## DONE! ########################

Some information about your tsuru installation:

Admin user: admin@example.com
Admin password: admin123 (PLEASE CHANGE RUNNING: tsuru change-password)
Target address: http://&amp;lt;meu ip externo&amp;gt;:8080
Dashboard address: http://&amp;lt;meu ip externo&amp;gt;:32768

You should run `source ~/.bashrc` on your current terminal.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para alterar a senha você poderá usar o comando &lt;code&gt;tsuru change-password&lt;/code&gt;. Após você ter seu PaaS instalado e funcional recomendo assistir o vídeo do Andrews para dar seus primeiros passinhos utilizando o tsuru-cli, um vídeo ótimo para começar é este &lt;a href="https://www.youtube.com/watch?v=YD3iNEBb4t0"&gt;tsuru - fazendo deploys de forma simples e divertida&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Espero que tenha gostado do post, deixe seus comentários ali embaixo &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/point_down.png"&gt;.&lt;/p&gt;
&lt;p&gt;Flw!&lt;/p&gt;</summary><category term="deploy"></category><category term="tsuru"></category><category term="paas"></category></entry><entry><title>Grupo de Estudos Python Sorocaba</title><link href="http://blog.abraseucodigo.com.br/grupo-de-estudos-python-sorocaba.html" rel="alternate"></link><updated>2015-09-19T23:43:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2015-09-19:grupo-de-estudos-python-sorocaba.html</id><summary type="html">&lt;p&gt;Perto do dia 2 de julho de 2015 eu o Rafael Gottsfritz e o Caio Carrara tivemos a iniciativa de nos misturar ao &lt;a href="http://hacklab.club/"&gt;Hacklab Sorocaba&lt;/a&gt; para tentar organizar um grupo de estudos sobre variados assuntos.
Nós queríamos trazer mais movimento de comunidades para Sorocaba e regiões próximas, visto que isso é muitíssimo popular em cidades como Campinas, São Paulo e São José dos Campos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://garoa.net.br/wiki/P%C3%A1gina_principal"&gt;Garoa Hacker Clube SP&lt;/a&gt; X&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lhc.net.br/wiki/P%C3%A1gina_principal"&gt;Laboratório Hacker Campinas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://campinas.rupy.com.br/"&gt;RuPy Campinas 2015&lt;/a&gt; X&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pgdaycampinas.com.br/"&gt;PG Day Campinas 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/pt/Grupy-SP/"&gt;GruPy-SP&lt;/a&gt; X&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thedevelopersconference.com.br/tdc/2015/saopaulo/trilhas"&gt;TDC São Paulo 2015&lt;/a&gt; X&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/pyladiescps"&gt;Pyladies Campinas - Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/pyladiescps"&gt;Pyladies Campinas - Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonbrasil.github.io/pythonbrasil11-site/"&gt;Python Brasil 2015 - SJC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esses links acima foram apenas exemplos de eventos de comunidade ou um pouco mais comerciais que rolaram/rolam ainda por este ano, os que marquei com X foi os que eu ja participei pelo menos uma vez na vida e fiquei muito feliz de ter participado &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/stuck_out_tongue_winking_eye.png"&gt;.&lt;/p&gt;
&lt;h2&gt;O início&lt;/h2&gt;
&lt;p&gt;Para tentar começar a trazer coisas legais pra Sorocaba, inicialmente divulguei na lista de &lt;a href="https://groups.google.com/forum/?hl=pt#!searchin/hackerspace-sorocaba/Sesc/hackerspace-sorocaba/ampID5hePrI/w0Jt_vIWSTEJ"&gt;email do Hacklab&lt;/a&gt; um bate-papo descontraído no SESC Sorocaba, era descontraído, mas para ter foco nessa "descontração" toda eu queria propor objetivos as conversas e que preferencialmente se baseasse em tecnologia (ou não, caso não tivessem muitos geeks na parada). 
Porém infelizmente (ou felizmente, ainda não descobri) somente EU coloquei um tema lá para discutir neste evento intitulado de "Quinta-feira Hacker" (o nome era bonito &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/wink.png"&gt;). Olha só que loucura que ficou o call4papers deste dia:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://call4paperz.com/events/quinta-feira-hacker"&gt;&lt;img alt="Call4Papers" src="/images/grupo-de-estudos-python-sorocaba_01.png" title="Call4Papers" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bombando.... com 1 call somente!! &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/disappointed_relieved.png"&gt;&lt;/p&gt;
&lt;p&gt;Inicialmente fiquei meio puto e imaginei que não ia aparecer ninguém no SESC, por fim foram várias pessoas (no mínimo umas 6 pelo que me recordo) ai eu fiquei mais feliz um pouco. Mas mesmo assim fiquei meio de queixo caído com o desinteresse geral das pessoas, pois eu chamei para o encontro no mínimo 50 e apareceram somente 6.&lt;/p&gt;
&lt;h2&gt;Hacklab no sábado (rolando ainda quase sempre)&lt;/h2&gt;
&lt;p&gt;Alguns dias após este "big evento" fomos novamente os 6 mosqueteiros (quase todos que foram no SESC) no sábado para nos encontrar no &lt;a href="http://www.macs.org.br/"&gt;Museu de Arte Contemporânea de Sorocaba&lt;/a&gt;, lá tem uma sala MUITO MUITO BACANA onde o pessoal faz umas reuniões embaixo do Museu (não amigo não é culto satânico.. é parada de hacker mesmo &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/smirk.png"&gt;). 
Neste dia conheci o Hudson que é o cara que toca o barco do Hacklab junto com o Guilherme que é um membro assíduo também, conversamos bastante e neste mesmo dia o Hudson me falou uma coisa importante que eu estava deixando passar...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;quot;Cara pra ser um evento precisa de você e mais um&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Resumindo... acho que ele tinha razão, pois bastam 2 interessados para formar um pequeno grupo para fazer algo, se você estiver sozinho OK! Também é LEGAL! Porém você não tem o compromisso de estar na mesma hora no mesmo lugar para estudar algum assunto, imagino que isso seja o princípio da ideia de um &lt;a href="https://en.wikipedia.org/wiki/Hackerspace"&gt;hackerspace&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;O grupo de estudos&lt;/h2&gt;
&lt;p&gt;Eis que neste dia um pouco depois surgiu a ideia de montarmos um &lt;a href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;Grupo de Estudos de Python em Sorocaba&lt;/a&gt;, um grupo com um caminho simples a trilhar:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Nivelar as pessoas em Python, para que discussões futuras sejam mais proveitosas (no ponto que estamos já estão sendo)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Para isso estou dando aulas eu mesmo &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/hushed.png"&gt; via &lt;a href="http://www.google.com/intl/pt-BR_ALL/+/learnmore/hangouts/onair.html"&gt;Hangout on Air&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Todos nós aprendendo juntos&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Existem assuntos bem complexos no mundo Python aos quais eu não domino para esses precisamos já ter entendido o básico e estarmos nivelados a ponto de aprendermos juntos&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A parte mais legal!!!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Começar a contribuir ou criar projetos open source!!! Sem prazo nem cobranças.. fazer algo da legal que queremos pra aprendermos mais e mais&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;E o valor do curso!? O valor é DEDICAÇÃO E INTERESSE. Se você estiver afim de entrar no Grupo tem que ter no mínimo MUITA DEDICAÇÃO E MUITO INTERESSE pois é caro o curso em termos de valores honrosos hahaha.&lt;/p&gt;
&lt;h2&gt;Quer entrar para o nosso Grupo??&lt;/h2&gt;
&lt;p&gt;Basta se inscrever na lista &lt;a href="https://groups.google.com/forum/#!forum/python-sorocaba"&gt;Python-Sorocaba&lt;/a&gt; e acompanhar os emails, sempre fazemos nossos encontros nas quartas-feiras a noite próximo das 20hrs. 
Porém caso você queira entrar neste atual momento, agora, agorinha, me manda um tweet para que eu alinhe o que você precisa estudar, pois estamos indo para a aula 12 já &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/open_mouth.png"&gt;. Mas podemos fazer novas aulas a partir da aula 1 se tiver mais gente interessada.
Logo menos começarei a postar as aulas que rolaram em forma de texto aqui neste blog, futuramente todos poderão acompanhar por aqui também.&lt;/p&gt;
&lt;p&gt;E ai curtiram a ideia?&lt;/p&gt;</summary><category term="python"></category><category term="grupo de estudos python"></category><category term="sorocaba"></category></entry><entry><title>Git squash?? WTF?</title><link href="http://blog.abraseucodigo.com.br/git-squash-wtf.html" rel="alternate"></link><updated>2015-03-24T10:16:00-03:00</updated><author><name>Rafael Henrique da Silva Correia</name></author><id>tag:blog.abraseucodigo.com.br,2015-03-24:git-squash-wtf.html</id><summary type="html">&lt;p&gt;Galera conforme mencionei no post anterior.. estou contribuindo com o &lt;a href="https://github.com/puppet-community/puppetboard/"&gt;puppetboard&lt;/a&gt; (mais informações no post abaixo desse :P). E fiz meu primeiro Pull Request e talz resolvendo uma questão que estava na issue para acrescentar uma nova funcionalidade ao projeto. Porém quando eu fiz meu PR (Pull Request) teve um cara que me disse o seguinte:&lt;/p&gt;
&lt;p&gt;&lt;img alt="comment-github-image" src="/images/git-squash-wtf_01.png" title="comment-github-image" /&gt;
**&lt;a href="http://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Squashing-Commits"&gt;squash&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ai eu pensei como qualquer ótimo conhecedor do Git que porras é essa de squash?&lt;/p&gt;
&lt;p&gt;O squash é uma prática utilizada para combinar mais de um commit em um commit só, desta forma eliminando "lixos" do projeto. Agora aqui neste post explicarei como raios você faz isso, pois não achei uma documentação simples que explicasse a uma pessoa normal como fazer isso, e após aprender, decidi TENTAR explicar de uma forma simples &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/smile.png"&gt;.&lt;/p&gt;
&lt;h2&gt;O projeto&lt;/h2&gt;
&lt;p&gt;Primeiro obviamente você precisa ter um repositório git, para isso eu criei um repositório BEEEM simples:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir teste  
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;teste  
&lt;span class="nv"&gt;$ &lt;/span&gt;git init  
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Rafael&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README  
&lt;span class="nv"&gt;$ &lt;/span&gt;git add README  
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado Rafael&amp;quot;&lt;/span&gt; 

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Henrique&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README  
&lt;span class="nv"&gt;$ &lt;/span&gt;git add README  
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado Henrique&amp;quot;&lt;/span&gt; 

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;da&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README
&lt;span class="nv"&gt;$ &lt;/span&gt;git add README  
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado da&amp;quot;&lt;/span&gt; 

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Silva&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README  
&lt;span class="nv"&gt;$ &lt;/span&gt;git add README  
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado Silva&amp;quot;&lt;/span&gt; 

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Correia&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; README  
&lt;span class="nv"&gt;$ &lt;/span&gt;git add README  
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;Adicionado Correia&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Feito isso terei o seguinte histórico de commits:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git log --oneline  
4c03027 Adicionado Correia  
e23576b Adicionado Silva  
769bda9 Adicionado da  
2a71622 Adicionado Henrique  
5ebadcd Adicionado Rafael
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;O squash&lt;/h2&gt;
&lt;p&gt;Agora vamos imaginar que eu quero fazer um squash a partir de Henrique, ou seja quero que os commits 2a71622, 769bda9, e23576b e 4c03027 sejam um só, pois todos tratam da adição do sobrenome no arquivo README. Para isso precisarei usar o comando rebase do git no commit que eu desejo, no caso a partir do Henrique (como é a partir do Henrique deveremos pegar 1 commit antes):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git rebase -i 5ebadcd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Após executar este comando será aberto um arquivo temporário para podermos fazer as alterações desejadas, o arquivo será similar a este abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pick 2a71622 Adicionado Henrique  
pick 769bda9 Adicionado da  
pick e23576b Adicionado Silva  
pick 4c03027 Adicionado Correia 

# Rebase 5ebadcd..4c03027 onto 5ebadcd  
#  
# Commands:  
#  p, pick = use commit  
#  r, reword = use commit, but edit the commit message  
#  e, edit = use commit, but stop for amending  
#  s, squash = use commit, but meld into previous commit  
#  f, fixup = like &amp;quot;squash&amp;quot;, but discard this commit&amp;#39;s log message  
#  x, exec = run command (the rest of the line) using shell  
#  
# These lines can be re-ordered; they are executed from top to bottom.  
#  
# If you remove a line here THAT COMMIT WILL BE LOST.  
#  
# However, if you remove everything, the rebase will be aborted.  
#  
# Note that empty commits are commented out
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Neste mesmo arquivo já podemos visualizar algumas opções do que fazer com esses commits, para este post utilizaremos somente o squash, mas vale a pena conhecer as outras opções descritas abaixo de commands. Agora altere este arquivo da seguinte maneira:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pick 2a71622 Adicionado Henrique  
squash 769bda9 Adicionado da  
squash e23576b Adicionado Silva  
squash 4c03027 Adicionado Correia 

# Rebase 5ebadcd..4c03027 onto 5ebadcd  
#  
# Commands:  
#  p, pick = use commit  
#  r, reword = use commit, but edit the commit message  
#  e, edit = use commit, but stop for amending  
#  s, squash = use commit, but meld into previous commit  
#  f, fixup = like &amp;quot;squash&amp;quot;, but discard this commit&amp;#39;s log message  
#  x, exec = run command (the rest of the line) using shell  
#  
# These lines can be re-ordered; they are executed from top to bottom.  
#  
# If you remove a line here THAT COMMIT WILL BE LOST.  
#  
# However, if you remove everything, the rebase will be aborted.  
#  
# Note that empty commits are commented out
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As linhas dos commits 769bda9, e23576b e 4c03027 foram mudadas para squash, portanto serão combinados ao commit que possui a o nome pick, então o commit 2a71622 agora será unido aos 3 commits abaixo dele. É importante comentar que o squash não remove os logs (mensagens dos commits) conforme a descrição do "Commands" já a opção fixup descarta os logs. Feita esta alteração basta salvar o arquivo e sair. Feito isso será apresentado outro arquivo similar a este abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# This is a combination of 4 commits.  
# The first commit&amp;#39;s message is:  
Adicionado Henrique  
# This is the 2nd commit message:  
Adicionado da  
# This is the 3rd commit message:  
Adicionado Silva  
# This is the 4th commit message:  
Adicionado Correia  
# Please enter the commit message for your changes. Lines starting  
# with &amp;#39;#&amp;#39; will be ignored, and an empty message aborts the commit.  
#  
# Date:      Tue Mar 24 11:08:29 2015 -0300  
#  
# rebase in progress; onto 5ebadcd  
# You are currently editing a commit while rebasing branch &amp;#39;master&amp;#39; on &amp;#39;5ebadcd&amp;#39;.  
#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Neste arquivo você poderá mudar as mensagens de log (mensagens dos commits) caso desejar, se desejar mude alguma coisa e salve e saia do arquivo. Terminada a edição/salvamento deste arquivo você acabou o squash! Podemos ver no log como ficou a nova estrutura:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git log --oneline  
f4c9d80 Adicionado Henrique  
5ebadcd Adicionado Rafael 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ou:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git log  
commit f4c9d80a089ee35fca0eb7c6e5aabcb435fb9bb4  
Author: Rafael Henrique da Silva Correia &amp;lt;rafael@abraseucodigo.com.br&amp;gt;  
Date:   Tue Mar &lt;span class="m"&gt;24&lt;/span&gt; 11:08:29 &lt;span class="m"&gt;2015&lt;/span&gt; -0300  
    Adicionado Henrique  

    Adicionado da  

    Adicionado Silva  

    Adicionado Correia

commit 5ebadcde3eb8c006bd33ee4c62f9cbb359822d6e  
Author: Rafael Henrique da Silva Correia &amp;lt;rafael@abraseucodigo.com.br&amp;gt;  
Date:   Tue Mar &lt;span class="m"&gt;24&lt;/span&gt; 11:08:14 &lt;span class="m"&gt;2015&lt;/span&gt; -0300  
    Adicionado Rafael
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Esta prática é bem interessante e deixa o repositório do git mais limpo, é MUITO válida principalmente em projetos grandes onde se tem muitos contribuidores (principalmente em projetos open source &lt;img style="margin-bottom: -0.25em;height:1.5em;             display:inline-block;" src="/emojis/smile.png"&gt;).&lt;/p&gt;</summary><category term="git"></category><category term="squash"></category><category term="github"></category></entry></feed>